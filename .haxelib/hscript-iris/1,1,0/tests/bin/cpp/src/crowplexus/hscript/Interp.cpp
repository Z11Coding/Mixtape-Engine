// Generated by Haxe 4.3.5
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_CType
#include <crowplexus/hscript/CType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Const
#include <crowplexus/hscript/Const.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_DeclaredVar
#include <crowplexus/hscript/DeclaredVar.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_EnumType
#include <crowplexus/hscript/EnumType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_EnumValue
#include <crowplexus/hscript/EnumValue.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Error
#include <crowplexus/hscript/Error.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ErrorDef
#include <crowplexus/hscript/ErrorDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Expr
#include <crowplexus/hscript/Expr.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ExprDef
#include <crowplexus/hscript/ExprDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Interp
#include <crowplexus/hscript/Interp.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_InterpIterator
#include <crowplexus/hscript/InterpIterator.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_LocalVar
#include <crowplexus/hscript/LocalVar.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ObjectDecl
#include <crowplexus/hscript/ObjectDecl.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_SwitchCase
#include <crowplexus/hscript/SwitchCase.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Tools
#include <crowplexus/hscript/Tools.h>
#endif
#ifndef INCLUDED_crowplexus_hscript__Interp_Stop
#include <crowplexus/hscript/_Interp/Stop.h>
#endif
#ifndef INCLUDED_haxe_Exception
#include <haxe/Exception.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ValueException
#include <haxe/ValueException.h>
#endif
#ifndef INCLUDED_haxe_ds_BalancedTree
#include <haxe/ds/BalancedTree.h>
#endif
#ifndef INCLUDED_haxe_ds_EnumValueMap
#include <haxe/ds/EnumValueMap.h>
#endif
#ifndef INCLUDED_haxe_ds_IntMap
#include <haxe/ds/IntMap.h>
#endif
#ifndef INCLUDED_haxe_ds_ObjectMap
#include <haxe/ds/ObjectMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_fc3952b268c01112_72_new,"crowplexus.hscript.Interp","new",0x6c2fe4cb,"crowplexus.hscript.Interp.new","crowplexus/hscript/Interp.hx",72,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_83_resetVariables,"crowplexus.hscript.Interp","resetVariables",0xf60a845d,"crowplexus.hscript.Interp.resetVariables","crowplexus/hscript/Interp.hx",83,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_95_resetVariables,"crowplexus.hscript.Interp","resetVariables",0xf60a845d,"crowplexus.hscript.Interp.resetVariables","crowplexus/hscript/Interp.hx",95,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_104_posInfos,"crowplexus.hscript.Interp","posInfos",0x5c3989c6,"crowplexus.hscript.Interp.posInfos","crowplexus/hscript/Interp.hx",104,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_119_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",119,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_120_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",120,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_121_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",121,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_122_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",122,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_123_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",123,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_124_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",124,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_125_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",125,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_126_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",126,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_127_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",127,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_128_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",128,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_129_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",129,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_130_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",130,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_131_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",131,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_132_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",132,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_133_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",133,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_134_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",134,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_135_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",135,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_136_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",136,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_137_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",137,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_139_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",139,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_143_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",143,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_144_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",144,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_145_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",145,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_146_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",146,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_147_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",147,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_148_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",148,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_149_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",149,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_150_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",150,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_151_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",151,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_152_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",152,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_153_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",153,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_154_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",154,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_155_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",155,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_112_initOps,"crowplexus.hscript.Interp","initOps",0xf4e188ed,"crowplexus.hscript.Interp.initOps","crowplexus/hscript/Interp.hx",112,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_159_setVar,"crowplexus.hscript.Interp","setVar",0x5413acda,"crowplexus.hscript.Interp.setVar","crowplexus/hscript/Interp.hx",159,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_162_assign,"crowplexus.hscript.Interp","assign",0x30a886a4,"crowplexus.hscript.Interp.assign","crowplexus/hscript/Interp.hx",162,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_200_assignOp,"crowplexus.hscript.Interp","assignOp",0x10d2bce5,"crowplexus.hscript.Interp.assignOp","crowplexus/hscript/Interp.hx",200,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_198_assignOp,"crowplexus.hscript.Interp","assignOp",0x10d2bce5,"crowplexus.hscript.Interp.assignOp","crowplexus/hscript/Interp.hx",198,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_203_evalAssignOp,"crowplexus.hscript.Interp","evalAssignOp",0x82b65f21,"crowplexus.hscript.Interp.evalAssignOp","crowplexus/hscript/Interp.hx",203,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_242_increment,"crowplexus.hscript.Interp","increment",0xf99abcda,"crowplexus.hscript.Interp.increment","crowplexus/hscript/Interp.hx",242,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_252_increment,"crowplexus.hscript.Interp","increment",0xf99abcda,"crowplexus.hscript.Interp.increment","crowplexus/hscript/Interp.hx",252,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_309_execute,"crowplexus.hscript.Interp","execute",0xf5633020,"crowplexus.hscript.Interp.execute","crowplexus/hscript/Interp.hx",309,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_321_exprReturn,"crowplexus.hscript.Interp","exprReturn",0x67918aba,"crowplexus.hscript.Interp.exprReturn","crowplexus/hscript/Interp.hx",321,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_338_duplicate,"crowplexus.hscript.Interp","duplicate",0x68b2d836,"crowplexus.hscript.Interp.duplicate","crowplexus/hscript/Interp.hx",338,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_350_restore,"crowplexus.hscript.Interp","restore",0x94068d39,"crowplexus.hscript.Interp.restore","crowplexus/hscript/Interp.hx",350,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_356_error,"crowplexus.hscript.Interp","error",0x9d8410f3,"crowplexus.hscript.Interp.error","crowplexus/hscript/Interp.hx",356,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_369_rethrow,"crowplexus.hscript.Interp","rethrow",0x1f80d67e,"crowplexus.hscript.Interp.rethrow","crowplexus/hscript/Interp.hx",369,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_373_resolve,"crowplexus.hscript.Interp","resolve",0x90b638d7,"crowplexus.hscript.Interp.resolve","crowplexus/hscript/Interp.hx",373,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_394_expr,"crowplexus.hscript.Interp","expr",0x37d3c66a,"crowplexus.hscript.Interp.expr","crowplexus/hscript/Interp.hx",394,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_492_expr,"crowplexus.hscript.Interp","expr",0x37d3c66a,"crowplexus.hscript.Interp.expr","crowplexus/hscript/Interp.hx",492,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_518_expr,"crowplexus.hscript.Interp","expr",0x37d3c66a,"crowplexus.hscript.Interp.expr","crowplexus/hscript/Interp.hx",518,0x864063c3)
static const int _hx_array_data_c5fd2359_73[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_706_expr,"crowplexus.hscript.Interp","expr",0x37d3c66a,"crowplexus.hscript.Interp.expr","crowplexus/hscript/Interp.hx",706,0x864063c3)
static const int _hx_array_data_c5fd2359_75[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_744_doWhileLoop,"crowplexus.hscript.Interp","doWhileLoop",0xe98df915,"crowplexus.hscript.Interp.doWhileLoop","crowplexus/hscript/Interp.hx",744,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_762_whileLoop,"crowplexus.hscript.Interp","whileLoop",0xa933f960,"crowplexus.hscript.Interp.whileLoop","crowplexus/hscript/Interp.hx",762,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_780_makeIterator,"crowplexus.hscript.Interp","makeIterator",0x41946431,"crowplexus.hscript.Interp.makeIterator","crowplexus/hscript/Interp.hx",780,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_794_forLoop,"crowplexus.hscript.Interp","forLoop",0xf2bf77f8,"crowplexus.hscript.Interp.forLoop","crowplexus/hscript/Interp.hx",794,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_818_isMap,"crowplexus.hscript.Interp","isMap",0xebab79fd,"crowplexus.hscript.Interp.isMap","crowplexus/hscript/Interp.hx",818,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_822_getMapValue,"crowplexus.hscript.Interp","getMapValue",0x7de5a956,"crowplexus.hscript.Interp.getMapValue","crowplexus/hscript/Interp.hx",822,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_826_setMapValue,"crowplexus.hscript.Interp","setMapValue",0x8852b062,"crowplexus.hscript.Interp.setMapValue","crowplexus/hscript/Interp.hx",826,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_829_get,"crowplexus.hscript.Interp","get",0x6c2a9501,"crowplexus.hscript.Interp.get","crowplexus/hscript/Interp.hx",829,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_846_set,"crowplexus.hscript.Interp","set",0x6c33b00d,"crowplexus.hscript.Interp.set","crowplexus/hscript/Interp.hx",846,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_854_fcall,"crowplexus.hscript.Interp","fcall",0x26f3892f,"crowplexus.hscript.Interp.fcall","crowplexus/hscript/Interp.hx",854,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_858_call,"crowplexus.hscript.Interp","call",0x366fe1d3,"crowplexus.hscript.Interp.call","crowplexus/hscript/Interp.hx",858,0x864063c3)
HX_LOCAL_STACK_FRAME(_hx_pos_fc3952b268c01112_861_cnew,"crowplexus.hscript.Interp","cnew",0x3679b912,"crowplexus.hscript.Interp.cnew","crowplexus/hscript/Interp.hx",861,0x864063c3)
namespace crowplexus{
namespace hscript{

void Interp_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_72_new)
HXLINE(  74)		this->locals =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  78)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE(  79)		this->resetVariables();
HXLINE(  80)		this->initOps();
            	}

Dynamic Interp_obj::__CreateEmpty() { return new Interp_obj; }

void *Interp_obj::_hx_vtable = 0;

Dynamic Interp_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Interp_obj > _hx_result = new Interp_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Interp_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x177bd5fb;
}

void Interp_obj::resetVariables(){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_83_resetVariables)
HXDLIN(  83)		 ::crowplexus::hscript::Interp _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(  85)		this->variables =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  86)		this->imports =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  92)		this->variables->set(HX_("null",87,9e,0e,49),null());
HXLINE(  93)		this->variables->set(HX_("true",4e,a7,03,4d),true);
HXLINE(  94)		this->variables->set(HX_("false",a3,35,4f,fb),false);
HXLINE(  95)		{
            			HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::crowplexus::hscript::Interp,_gthis) HXARGC(1)
            			void _hx_run(::cpp::VirtualArray el){
            				HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_95_resetVariables)
HXLINE(  96)				 ::Dynamic inf = _gthis->posInfos();
HXLINE(  97)				 ::Dynamic v = el->shift();
HXLINE(  98)				if ((el->get_length() > 0)) {
HXLINE(  99)					inf->__SetField(HX_("customParams",d7,51,18,ed),el,::hx::paccDynamic);
            				}
HXLINE( 100)				 ::Dynamic value = ::haxe::Log_obj::trace;
HXDLIN( 100)				value(::Std_obj::string(v),inf);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE(  95)			::Dynamic this1 = this->variables;
HXDLIN(  95)			( ( ::haxe::ds::StringMap)(this1) )->set(HX_("trace",85,8e,1f,16),::Reflect_obj::makeVarArgs( ::Dynamic(new _hx_Closure_0(_gthis))));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,resetVariables,(void))

 ::Dynamic Interp_obj::posInfos(){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_104_posInfos)
HXLINE( 106)		if (::hx::IsNotNull( this->curExpr )) {
HXLINE( 107)			return  ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("fileName",e7,5a,43,62),this->curExpr->origin)
            				->setFixed(1,HX_("lineNumber",dd,81,22,76),this->curExpr->line));
            		}
HXLINE( 109)		return  ::Dynamic(::hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("fileName",e7,5a,43,62),HX_("hscript",73,8c,18,2c))
            			->setFixed(1,HX_("lineNumber",dd,81,22,76),0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,posInfos,return )

void Interp_obj::initOps(){
            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		 ::Dynamic _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_119_initOps)
HXLINE( 119)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 119)			return (_hx_tmp + me->expr(e2));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_1, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_120_initOps)
HXLINE( 120)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 120)			return (( (Float)(_hx_tmp) ) - ( (Float)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_2, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_121_initOps)
HXLINE( 121)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 121)			return (( (Float)(_hx_tmp) ) * ( (Float)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_3, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_122_initOps)
HXLINE( 122)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 122)			return (( (Float)(_hx_tmp) ) / ( (Float)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_4, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		Float _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_123_initOps)
HXLINE( 123)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 123)			return ::hx::Mod(_hx_tmp,me->expr(e2));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_5, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_124_initOps)
HXLINE( 124)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 124)			return (( (int)(_hx_tmp) ) & ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_6, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_125_initOps)
HXLINE( 125)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 125)			return (( (int)(_hx_tmp) ) | ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_7, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_126_initOps)
HXLINE( 126)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 126)			return (( (int)(_hx_tmp) ) ^ ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_8, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_127_initOps)
HXLINE( 127)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 127)			return (( (int)(_hx_tmp) ) << ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_9, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_128_initOps)
HXLINE( 128)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 128)			return (( (int)(_hx_tmp) ) >> ( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_10, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		int _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_129_initOps)
HXLINE( 129)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 129)			return ::hx::UShr(( (int)(_hx_tmp) ),( (int)(me->expr(e2)) ));
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_11, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_130_initOps)
HXLINE( 130)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 130)			return ::hx::IsEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_12, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_131_initOps)
HXLINE( 131)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 131)			return ::hx::IsNotEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_13, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_132_initOps)
HXLINE( 132)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 132)			return ::hx::IsGreaterEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_14, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_133_initOps)
HXLINE( 133)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 133)			return ::hx::IsLessEq( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_15, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_134_initOps)
HXLINE( 134)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 134)			return ::hx::IsGreater( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_16, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_135_initOps)
HXLINE( 135)			 ::Dynamic _hx_tmp = me->expr(e1);
HXDLIN( 135)			return ::hx::IsLess( _hx_tmp,me->expr(e2) );
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_17, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_136_initOps)
HXLINE( 136)			if (::hx::IsNotEq( me->expr(e1),true )) {
HXLINE( 136)				return ::hx::IsEq( me->expr(e2),true );
            			}
            			else {
HXLINE( 136)				return true;
            			}
HXDLIN( 136)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_18, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		bool _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_137_initOps)
HXLINE( 137)			if (::hx::IsEq( me->expr(e1),true )) {
HXLINE( 137)				return ::hx::IsEq( me->expr(e2),true );
            			}
            			else {
HXLINE( 137)				return false;
            			}
HXDLIN( 137)			return false;
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_19, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		 ::Dynamic _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_139_initOps)
HXLINE( 140)			 ::Dynamic expr1 = me->expr(e1);
HXLINE( 141)			if (::hx::IsNull( expr1 )) {
HXLINE( 141)				return me->expr(e2);
            			}
            			else {
HXLINE( 141)				return expr1;
            			}
HXDLIN( 141)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_20, ::crowplexus::hscript::Interp,me) HXARGC(2)
            		 ::crowplexus::hscript::InterpIterator _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_143_initOps)
HXLINE( 143)			return  ::crowplexus::hscript::InterpIterator_obj::__alloc( HX_CTX ,me,e1,e2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_21) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v1, ::Dynamic v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_144_initOps)
HXLINE( 144)			return (v1 + v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_22) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_145_initOps)
HXLINE( 145)			return (v1 - v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_23) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_146_initOps)
HXLINE( 146)			return (v1 * v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_24) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_147_initOps)
HXLINE( 147)			return (v1 / v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_25) HXARGC(2)
            		Float _hx_run(Float v1,Float v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_148_initOps)
HXLINE( 148)			return ::hx::Mod(v1,v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_26) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_149_initOps)
HXLINE( 149)			return (v1 & v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_27) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_150_initOps)
HXLINE( 150)			return (v1 | v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_28) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_151_initOps)
HXLINE( 151)			return (v1 ^ v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_29) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_152_initOps)
HXLINE( 152)			return (v1 << v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_30) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_153_initOps)
HXLINE( 153)			return (v1 >> v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_31) HXARGC(2)
            		int _hx_run(int v1,int v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_154_initOps)
HXLINE( 154)			return ::hx::UShr(v1,v2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            		HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_32) HXARGC(2)
            		 ::Dynamic _hx_run( ::Dynamic v1, ::Dynamic v2){
            			HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_155_initOps)
HXLINE( 155)			if (::hx::IsNull( v1 )) {
HXLINE( 155)				return v2;
            			}
            			else {
HXLINE( 155)				return v1;
            			}
HXDLIN( 155)			return null();
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_112_initOps)
HXLINE( 113)		 ::crowplexus::hscript::Interp me = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 115)		this->binops =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 119)		this->binops->set(HX_("+",2b,00,00,00), ::Dynamic(new _hx_Closure_0(me)));
HXLINE( 120)		this->binops->set(HX_("-",2d,00,00,00), ::Dynamic(new _hx_Closure_1(me)));
HXLINE( 121)		this->binops->set(HX_("*",2a,00,00,00), ::Dynamic(new _hx_Closure_2(me)));
HXLINE( 122)		this->binops->set(HX_("/",2f,00,00,00), ::Dynamic(new _hx_Closure_3(me)));
HXLINE( 123)		this->binops->set(HX_("%",25,00,00,00), ::Dynamic(new _hx_Closure_4(me)));
HXLINE( 124)		this->binops->set(HX_("&",26,00,00,00), ::Dynamic(new _hx_Closure_5(me)));
HXLINE( 125)		this->binops->set(HX_("|",7c,00,00,00), ::Dynamic(new _hx_Closure_6(me)));
HXLINE( 126)		this->binops->set(HX_("^",5e,00,00,00), ::Dynamic(new _hx_Closure_7(me)));
HXLINE( 127)		this->binops->set(HX_("<<",80,34,00,00), ::Dynamic(new _hx_Closure_8(me)));
HXLINE( 128)		this->binops->set(HX_(">>",40,36,00,00), ::Dynamic(new _hx_Closure_9(me)));
HXLINE( 129)		this->binops->set(HX_(">>>",fe,41,2f,00), ::Dynamic(new _hx_Closure_10(me)));
HXLINE( 130)		this->binops->set(HX_("==",60,35,00,00), ::Dynamic(new _hx_Closure_11(me)));
HXLINE( 131)		this->binops->set(HX_("!=",fc,1c,00,00), ::Dynamic(new _hx_Closure_12(me)));
HXLINE( 132)		this->binops->set(HX_(">=",3f,36,00,00), ::Dynamic(new _hx_Closure_13(me)));
HXLINE( 133)		this->binops->set(HX_("<=",81,34,00,00), ::Dynamic(new _hx_Closure_14(me)));
HXLINE( 134)		this->binops->set(HX_(">",3e,00,00,00), ::Dynamic(new _hx_Closure_15(me)));
HXLINE( 135)		this->binops->set(HX_("<",3c,00,00,00), ::Dynamic(new _hx_Closure_16(me)));
HXLINE( 136)		this->binops->set(HX_("||",80,6c,00,00), ::Dynamic(new _hx_Closure_17(me)));
HXLINE( 137)		this->binops->set(HX_("&&",40,21,00,00), ::Dynamic(new _hx_Closure_18(me)));
HXLINE( 138)		this->binops->set(HX_("=",3d,00,00,00),this->assign_dyn());
HXLINE( 139)		this->binops->set(HX_("??",20,37,00,00), ::Dynamic(new _hx_Closure_19(me)));
HXLINE( 143)		this->binops->set(HX_("...",ee,0f,23,00), ::Dynamic(new _hx_Closure_20(me)));
HXLINE( 144)		this->assignOp(HX_("+=",b2,25,00,00), ::Dynamic(new _hx_Closure_21()));
HXLINE( 145)		this->assignOp(HX_("-=",70,27,00,00), ::Dynamic(new _hx_Closure_22()));
HXLINE( 146)		this->assignOp(HX_("*=",d3,24,00,00), ::Dynamic(new _hx_Closure_23()));
HXLINE( 147)		this->assignOp(HX_("/=",2e,29,00,00), ::Dynamic(new _hx_Closure_24()));
HXLINE( 148)		this->assignOp(HX_("%=",78,20,00,00), ::Dynamic(new _hx_Closure_25()));
HXLINE( 149)		this->assignOp(HX_("&=",57,21,00,00), ::Dynamic(new _hx_Closure_26()));
HXLINE( 150)		this->assignOp(HX_("|=",41,6c,00,00), ::Dynamic(new _hx_Closure_27()));
HXLINE( 151)		this->assignOp(HX_("^=",1f,52,00,00), ::Dynamic(new _hx_Closure_28()));
HXLINE( 152)		this->assignOp(HX_("<<=",bd,bb,2d,00), ::Dynamic(new _hx_Closure_29()));
HXLINE( 153)		this->assignOp(HX_(">>=",fd,41,2f,00), ::Dynamic(new _hx_Closure_30()));
HXLINE( 154)		this->assignOp(HX_(">>>=",7f,7c,2a,29), ::Dynamic(new _hx_Closure_31()));
HXLINE( 155)		this->assignOp((HX_("??",20,37,00,00) + HX_("=",3d,00,00,00)), ::Dynamic(new _hx_Closure_32()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Interp_obj,initOps,(void))

void Interp_obj::setVar(::String name, ::Dynamic v){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_159_setVar)
HXDLIN( 159)		this->variables->set(name,v);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,setVar,(void))

 ::Dynamic Interp_obj::assign( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_162_assign)
HXLINE( 163)		 ::Dynamic v = this->expr(e2);
HXLINE( 164)		{
HXLINE( 164)			 ::crowplexus::hscript::ExprDef _g = e1->e;
HXDLIN( 164)			switch((int)(_g->_hx_getIndex())){
            				case (int)2: {
HXLINE( 165)					::String _g1 = _g->_hx_getString(0);
HXDLIN( 165)					{
HXLINE( 166)						 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(_g1)) );
HXLINE( 167)						if (::hx::IsNull( l )) {
HXLINE( 168)							this->variables->set(_g1,v);
            						}
            						else {
HXLINE( 170)							if ((l->_hx_const != true)) {
HXLINE( 171)								l->r = v;
            							}
            							else {
HXLINE( 173)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Cannot reassign final, for constant expression -> ",c3,4d,da,1b) + _g1)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            							}
            						}
            					}
            				}
            				break;
            				case (int)7: {
HXLINE( 175)					::String _g2 = _g->_hx_getString(1);
HXDLIN( 175)					{
HXLINE( 176)						 ::Dynamic e = this->expr(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 177)						if (::hx::IsNull( e )) {
HXLINE( 178)							if (!(_g->_hx_getBool(2))) {
HXLINE( 179)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(_g2),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            							}
            							else {
HXLINE( 181)								return null();
            							}
            						}
HXLINE( 182)						v = this->set(e,_g2,v);
            					}
            				}
            				break;
            				case (int)18: {
HXLINE( 184)					 ::Dynamic arr = this->expr(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 185)					 ::Dynamic index = this->expr(_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 186)					if (::Std_obj::isOfType(arr,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 187)						::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index,v);
            					}
            					else {
HXLINE( 189)						arr->__SetItem(( (int)(index) ),v);
            					}
            				}
            				break;
            				default:{
HXLINE( 193)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(HX_("=",3d,00,00,00)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            				}
            			}
            		}
HXLINE( 195)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assign,return )

void Interp_obj::assignOp(::String op, ::Dynamic fop){
            		HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0,::String,op, ::crowplexus::hscript::Interp,me, ::Dynamic,fop) HXARGC(2)
            		 ::Dynamic _hx_run( ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            			HX_STACKFRAME(&_hx_pos_fc3952b268c01112_200_assignOp)
HXLINE( 200)			return me->evalAssignOp(op,fop,e1,e2);
            		}
            		HX_END_LOCAL_FUNC2(return)

            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_198_assignOp)
HXLINE( 199)		 ::crowplexus::hscript::Interp me = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 200)		this->binops->set(op, ::Dynamic(new _hx_Closure_0(op,me,fop)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,assignOp,(void))

 ::Dynamic Interp_obj::evalAssignOp(::String op, ::Dynamic fop, ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e2){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_203_evalAssignOp)
HXLINE( 204)		 ::Dynamic v;
HXLINE( 205)		{
HXLINE( 205)			 ::crowplexus::hscript::ExprDef _g = e1->e;
HXDLIN( 205)			switch((int)(_g->_hx_getIndex())){
            				case (int)2: {
HXLINE( 206)					::String _g1 = _g->_hx_getString(0);
HXDLIN( 206)					{
HXLINE( 207)						 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(_g1)) );
HXLINE( 208)						 ::Dynamic v1 = this->expr(e1);
HXDLIN( 208)						v = fop(v1,this->expr(e2));
HXLINE( 209)						if (::hx::IsNull( l )) {
HXLINE( 210)							this->variables->set(_g1,v);
            						}
            						else {
HXLINE( 212)							if ((l->_hx_const != true)) {
HXLINE( 213)								l->r = v;
            							}
            							else {
HXLINE( 215)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Cannot reassign final, for constant expression -> ",c3,4d,da,1b) + _g1)),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            							}
            						}
            					}
            				}
            				break;
            				case (int)7: {
HXLINE( 217)					::String _g2 = _g->_hx_getString(1);
HXDLIN( 217)					{
HXLINE( 218)						 ::Dynamic obj = this->expr(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 219)						if (::hx::IsNull( obj )) {
HXLINE( 220)							if (!(_g->_hx_getBool(2))) {
HXLINE( 221)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(_g2),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            							}
            							else {
HXLINE( 223)								return null();
            							}
            						}
HXLINE( 224)						 ::Dynamic v2 = this->get(obj,_g2);
HXDLIN( 224)						v = fop(v2,this->expr(e2));
HXLINE( 225)						v = this->set(obj,_g2,v);
            					}
            				}
            				break;
            				case (int)18: {
HXLINE( 227)					 ::Dynamic arr = this->expr(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 228)					 ::Dynamic index = this->expr(_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 229)					if (::Std_obj::isOfType(arr,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 230)						 ::Dynamic v3 = ::haxe::IMap_obj::get( ::hx::interface_check(arr,0x09c2bd39),index);
HXDLIN( 230)						v = fop(v3,this->expr(e2));
HXLINE( 231)						::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index,v);
            					}
            					else {
HXLINE( 233)						 ::Dynamic arr1 = arr->__GetItem(( (int)(index) ));
HXDLIN( 233)						v = fop(arr1,this->expr(e2));
HXLINE( 234)						arr->__SetItem(( (int)(index) ),v);
            					}
            				}
            				break;
            				default:{
HXLINE( 237)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(op),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            				}
            			}
            		}
HXLINE( 239)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC4(Interp_obj,evalAssignOp,return )

 ::Dynamic Interp_obj::increment( ::crowplexus::hscript::Expr e,bool prefix,int delta){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_242_increment)
HXDLIN( 242)		 ::crowplexus::hscript::Interp _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 244)		this->curExpr = e;
HXLINE( 245)		 ::crowplexus::hscript::ExprDef e1 = e->e;
HXLINE( 247)		switch((int)(e1->_hx_getIndex())){
            			case (int)2: {
            				HX_BEGIN_LOCAL_FUNC_S3(::hx::LocalFunc,_hx_Closure_0,::String,id, ::crowplexus::hscript::Interp,_gthis, ::crowplexus::hscript::LocalVar,l) HXARGC(1)
            				void _hx_run( ::Dynamic a){
            					HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_252_increment)
HXLINE( 252)					if (::hx::IsNull( l )) {
HXLINE( 253)						_gthis->variables->set(id,a);
            					}
            					else {
HXLINE( 255)						if ((l->_hx_const != true)) {
HXLINE( 256)							l->r = a;
            						}
            						else {
HXLINE( 258)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Cannot reassign final, for constant expression -> ",c3,4d,da,1b) + id)),_gthis->curExpr->pmin,_gthis->curExpr->pmax,_gthis->curExpr->origin,_gthis->curExpr->line));
            						}
            					}
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 248)				::String id = e1->_hx_getString(0);
HXLINE( 249)				 ::crowplexus::hscript::LocalVar l = ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(id)) );
HXLINE( 250)				 ::Dynamic v;
HXDLIN( 250)				if (::hx::IsNull( l )) {
HXLINE( 250)					v = this->resolve(id);
            				}
            				else {
HXLINE( 250)					v = l->r;
            				}
HXLINE( 251)				 ::Dynamic setTo =  ::Dynamic(new _hx_Closure_0(id,_gthis,l));
HXLINE( 261)				if (::hx::IsNull( l )) {
HXLINE( 262)					if (prefix) {
HXLINE( 263)						v = (v + delta);
HXLINE( 264)						setTo(v);
            					}
            					else {
HXLINE( 266)						setTo((v + delta));
            					}
            				}
HXLINE( 268)				return v;
            			}
            			break;
            			case (int)7: {
HXLINE( 269)				::String _g = e1->_hx_getString(1);
HXLINE( 270)				 ::Dynamic obj = this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 271)				if (::hx::IsNull( obj )) {
HXLINE( 272)					if (!(e1->_hx_getBool(2))) {
HXLINE( 273)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(_g),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            					}
            					else {
HXLINE( 275)						return null();
            					}
            				}
HXLINE( 276)				 ::Dynamic v1 = this->get(obj,_g);
HXLINE( 277)				if (prefix) {
HXLINE( 278)					v1 = (v1 + delta);
HXLINE( 279)					this->set(obj,_g,v1);
            				}
            				else {
HXLINE( 281)					this->set(obj,_g,(v1 + delta));
            				}
HXLINE( 282)				return v1;
            			}
            			break;
            			case (int)18: {
HXLINE( 284)				 ::Dynamic arr = this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 285)				 ::Dynamic index = this->expr(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 286)				if (::Std_obj::isOfType(arr,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 287)					int v2 = ( (int)(::haxe::IMap_obj::get( ::hx::interface_check(arr,0x09c2bd39),index)) );
HXLINE( 288)					if (prefix) {
HXLINE( 289)						v2 = (v2 + delta);
HXLINE( 290)						::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index,v2);
            					}
            					else {
HXLINE( 292)						::haxe::IMap_obj::set( ::hx::interface_check(arr,0x09c2bd39),index,(v2 + delta));
            					}
HXLINE( 294)					return v2;
            				}
            				else {
HXLINE( 296)					int v3 = ( (int)(arr->__GetItem(( (int)(index) ))) );
HXLINE( 297)					if (prefix) {
HXLINE( 298)						v3 = (v3 + delta);
HXLINE( 299)						arr->__SetItem(( (int)(index) ),v3);
            					}
            					else {
HXLINE( 301)						arr->__SetItem(( (int)(index) ),(v3 + delta));
            					}
HXLINE( 302)					return v3;
            				}
            			}
            			break;
            			default:{
HXLINE( 305)				::String e2;
HXDLIN( 305)				if ((delta > 0)) {
HXLINE( 305)					e2 = HX_("++",a0,25,00,00);
            				}
            				else {
HXLINE( 305)					e2 = HX_("--",60,27,00,00);
            				}
HXDLIN( 305)				HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(e2),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            			}
            		}
HXLINE( 247)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,increment,return )

 ::Dynamic Interp_obj::execute( ::crowplexus::hscript::Expr expr){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_309_execute)
HXLINE( 310)		this->depth = 0;
HXLINE( 312)		this->locals =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 316)		this->declared = ::Array_obj< ::Dynamic>::__new();
HXLINE( 317)		return this->exprReturn(expr);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,execute,return )

 ::Dynamic Interp_obj::exprReturn( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_321_exprReturn)
HXDLIN( 321)		try {
            			HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            			HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 322)			return this->expr(e);
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::crowplexus::hscript::_Interp::Stop e11 = _hx_e;
HXLINE( 324)				switch((int)(e11->_hx_getIndex())){
            					case (int)0: {
HXLINE( 326)						HX_STACK_DO_THROW(HX_("Invalid break",b6,ee,24,9d));
            					}
            					break;
            					case (int)1: {
HXLINE( 328)						HX_STACK_DO_THROW(HX_("Invalid continue",d0,6a,b7,3f));
            					}
            					break;
            					case (int)2: {
HXLINE( 330)						 ::Dynamic v1 = this->returnValue;
HXLINE( 331)						this->returnValue = null();
HXLINE( 332)						return v1;
            					}
            					break;
            				}
            			}
            			else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::haxe::ValueException _g = _hx_e;
HXLINE( 323)				{
HXLINE( 323)					null();
            				}
HXLINE( 321)				if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 323)					 ::crowplexus::hscript::_Interp::Stop e11 = _g->value;
HXLINE( 324)					switch((int)(e11->_hx_getIndex())){
            						case (int)0: {
HXLINE( 326)							HX_STACK_DO_THROW(HX_("Invalid break",b6,ee,24,9d));
            						}
            						break;
            						case (int)1: {
HXLINE( 328)							HX_STACK_DO_THROW(HX_("Invalid continue",d0,6a,b7,3f));
            						}
            						break;
            						case (int)2: {
HXLINE( 330)							 ::Dynamic v1 = this->returnValue;
HXLINE( 331)							this->returnValue = null();
HXLINE( 332)							return v1;
            						}
            						break;
            					}
            				}
            				else {
HXDLIN( 321)					HX_STACK_DO_THROW(_g);
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXDLIN( 321)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,exprReturn,return )

 ::haxe::ds::StringMap Interp_obj::duplicate( ::haxe::ds::StringMap h){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_338_duplicate)
HXLINE( 340)		 ::haxe::ds::StringMap h2 =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 344)		{
HXLINE( 344)			 ::Dynamic k = h->keys();
HXDLIN( 344)			while(( (bool)(k->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 344)				::String k1 = ( (::String)(k->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 345)				h2->set(k1,h->get(k1));
            			}
            		}
HXLINE( 346)		return h2;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,duplicate,return )

void Interp_obj::restore(int old){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_350_restore)
HXDLIN( 350)		while((this->declared->length > old)){
HXLINE( 351)			 ::crowplexus::hscript::DeclaredVar d = this->declared->pop().StaticCast<  ::crowplexus::hscript::DeclaredVar >();
HXLINE( 352)			this->locals->set(d->n,d->old);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,restore,(void))

 ::Dynamic Interp_obj::error( ::crowplexus::hscript::ErrorDef e,::hx::Null< bool >  __o_rethrow){
            		bool rethrow = __o_rethrow.Default(false);
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_356_error)
HXLINE( 357)		 ::crowplexus::hscript::Error e1 =  ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,e,this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line);
HXLINE( 358)		if (rethrow) {
HXLINE( 359)			HX_STACK_DO_THROW(e1);
            		}
            		else {
HXLINE( 361)			HX_STACK_DO_THROW(e1);
            		}
HXLINE( 358)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,error,return )

void Interp_obj::rethrow( ::Dynamic e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_369_rethrow)
HXDLIN( 369)		HX_STACK_DO_THROW(e);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,rethrow,(void))

 ::Dynamic Interp_obj::resolve(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_373_resolve)
HXLINE( 374)		if (this->locals->exists(id)) {
HXLINE( 376)			return ( ( ::crowplexus::hscript::LocalVar)(this->locals->get(id)) )->r;
            		}
HXLINE( 379)		if (this->variables->exists(id)) {
HXLINE( 381)			return this->variables->get(id);
            		}
HXLINE( 384)		if (this->imports->exists(id)) {
HXLINE( 386)			return this->imports->get(id);
            		}
HXLINE( 389)		HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnknownVariable(id),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
HXDLIN( 389)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,resolve,return )

 ::Dynamic Interp_obj::expr( ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_394_expr)
HXDLIN( 394)		 ::crowplexus::hscript::Interp _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 396)		this->curExpr = e;
HXLINE( 397)		 ::crowplexus::hscript::ExprDef e1 = e->e;
HXLINE( 399)		switch((int)(e1->_hx_getIndex())){
            			case (int)0: {
            			}
            			break;
            			case (int)1: {
HXLINE( 401)				 ::crowplexus::hscript::Const _g = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXLINE( 402)				switch((int)(_g->_hx_getIndex())){
            					case (int)0: {
HXLINE( 403)						return _g->_hx_getInt(0);
            					}
            					break;
            					case (int)1: {
HXLINE( 404)						return _g->_hx_getFloat(0);
            					}
            					break;
            					case (int)2: {
HXLINE( 405)						return _g->_hx_getString(0);
            					}
            					break;
            				}
            			}
            			break;
            			case (int)2: {
HXLINE( 411)				return this->resolve(e1->_hx_getString(0));
            			}
            			break;
            			case (int)3: {
            				HX_BEGIN_LOCAL_FUNC_S0(::hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            				::String _hx_run(::Array< ::String > arr){
            					HX_STACKFRAME(&_hx_pos_fc3952b268c01112_492_expr)
HXLINE( 492)					return arr->__get((arr->length - 1));
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 490)				::String _g1 = e1->_hx_getString(0);
HXDLIN( 490)				::String _g2 = e1->_hx_getString(1);
HXLINE( 491)				 ::Dynamic last =  ::Dynamic(new _hx_Closure_0());
HXLINE( 494)				 ::Dynamic last1 = last;
HXDLIN( 494)				::String n = ( (::String)(last1(_g1.split(HX_(".",2e,00,00,00)))) );
HXLINE( 495)				if (::hx::IsNotNull( _g2 )) {
HXLINE( 496)					n = _g2;
            				}
HXLINE( 498)				if (this->imports->exists(n)) {
HXLINE( 499)					return this->imports->get(n);
            				}
HXLINE( 501)				 ::Dynamic c = ::crowplexus::hscript::Tools_obj::getClass(_g1);
HXLINE( 503)				if (::hx::IsNull( c )) {
HXLINE( 504)					::String e2;
HXDLIN( 504)					if (::hx::IsNotNull( _g2 )) {
HXLINE( 504)						e2 = (HX_(" named as ",e7,2e,59,19) + _g2);
            					}
            					else {
HXLINE( 504)						e2 = HX_("",00,00,00,00);
            					}
HXDLIN( 504)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(((((HX_("Import",85,15,17,3d) + e2) + HX_(" of class ",b1,8c,d4,81)) + _g1) + HX_(" could not be added",ef,5f,82,02))),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            				}
            				else {
HXLINE( 506)					this->imports->set(n,c);
            				}
HXLINE( 507)				return null();
            			}
            			break;
            			case (int)4: {
HXLINE( 412)				::String _g3 = e1->_hx_getString(0);
HXDLIN( 412)				 ::crowplexus::hscript::Expr _g4 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 413)				::Array< ::Dynamic> _hx_tmp = this->declared;
HXDLIN( 413)				_hx_tmp->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,_g3,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(_g3)) )));
HXLINE( 414)				{
HXLINE( 414)					::Dynamic this1 = this->locals;
HXDLIN( 414)					 ::Dynamic value;
HXDLIN( 414)					if (::hx::IsNull( _g4 )) {
HXLINE( 414)						value = null();
            					}
            					else {
HXLINE( 414)						value = this->expr(_g4);
            					}
HXDLIN( 414)					( ( ::haxe::ds::StringMap)(this1) )->set(_g3, ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,value,( (bool)(e1->_hx_getObject(3)) )));
            				}
HXLINE( 415)				return null();
            			}
            			break;
            			case (int)5: {
HXLINE( 417)				return this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)6: {
HXLINE( 418)				::Array< ::Dynamic> _g5 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 419)				int old = this->declared->length;
HXLINE( 420)				 ::Dynamic v = null();
HXLINE( 421)				{
HXLINE( 421)					int _g6 = 0;
HXDLIN( 421)					while((_g6 < _g5->length)){
HXLINE( 421)						 ::crowplexus::hscript::Expr e3 = _g5->__get(_g6).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 421)						_g6 = (_g6 + 1);
HXLINE( 422)						v = this->expr(e3);
            					}
            				}
HXLINE( 423)				this->restore(old);
HXLINE( 424)				return v;
            			}
            			break;
            			case (int)7: {
HXLINE( 430)				 ::crowplexus::hscript::Expr _g7 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 430)				::String _g8 = e1->_hx_getString(1);
HXDLIN( 430)				if (e1->_hx_getBool(2)) {
HXLINE( 426)					 ::Dynamic e4 = this->expr(_g7);
HXLINE( 427)					if (::hx::IsNull( e4 )) {
HXLINE( 428)						return null();
            					}
HXLINE( 429)					return this->get(e4,_g8);
            				}
            				else {
HXLINE( 431)					return this->get(this->expr(_g7),_g8);
            				}
            			}
            			break;
            			case (int)8: {
HXLINE( 432)				::String _g9 = e1->_hx_getString(0);
HXLINE( 433)				 ::Dynamic fop = this->binops->get(_g9);
HXLINE( 434)				if (::hx::IsNull( fop )) {
HXLINE( 435)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(_g9),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            				}
HXLINE( 436)				return fop(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >(),e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)9: {
HXLINE( 437)				::String _g10 = e1->_hx_getString(0);
HXDLIN( 437)				bool _g11 = e1->_hx_getBool(1);
HXDLIN( 437)				 ::crowplexus::hscript::Expr _g12 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 438)				::String _hx_switch_0 = _g10;
            				if (  (_hx_switch_0==HX_("!",21,00,00,00)) ){
HXLINE( 440)					return ::hx::IsNotEq( this->expr(_g12),true );
HXDLIN( 440)					goto _hx_goto_55;
            				}
            				if (  (_hx_switch_0==HX_("++",a0,25,00,00)) ){
HXLINE( 444)					return this->increment(_g12,_g11,1);
HXDLIN( 444)					goto _hx_goto_55;
            				}
            				if (  (_hx_switch_0==HX_("-",2d,00,00,00)) ){
HXLINE( 442)					return -(this->expr(_g12));
HXDLIN( 442)					goto _hx_goto_55;
            				}
            				if (  (_hx_switch_0==HX_("--",60,27,00,00)) ){
HXLINE( 446)					return this->increment(_g12,_g11,-1);
HXDLIN( 446)					goto _hx_goto_55;
            				}
            				if (  (_hx_switch_0==HX_("~",7e,00,00,00)) ){
HXLINE( 451)					return ~(( (int)(this->expr(_g12)) ));
HXDLIN( 451)					goto _hx_goto_55;
            				}
            				/* default */{
HXLINE( 454)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(_g10),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            				}
            				_hx_goto_55:;
            			}
            			break;
            			case (int)10: {
HXLINE( 457)				 ::crowplexus::hscript::Expr _g13 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 457)				::Array< ::Dynamic> _g14 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 458)				::cpp::VirtualArray args = ::cpp::VirtualArray_obj::__new();
HXLINE( 459)				{
HXLINE( 459)					int _g15 = 0;
HXDLIN( 459)					while((_g15 < _g14->length)){
HXLINE( 459)						 ::crowplexus::hscript::Expr p = _g14->__get(_g15).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 459)						_g15 = (_g15 + 1);
HXLINE( 460)						args->push(this->expr(p));
            					}
            				}
HXLINE( 462)				 ::crowplexus::hscript::ExprDef _g16 = _g13->e;
HXDLIN( 462)				if ((_g16->_hx_getIndex() == 7)) {
HXLINE( 463)					::String _g17 = _g16->_hx_getString(1);
HXLINE( 464)					 ::Dynamic obj = this->expr(_g16->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 465)					if (::hx::IsNull( obj )) {
HXLINE( 466)						if (!(_g16->_hx_getBool(2))) {
HXLINE( 467)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(_g17),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            						}
            					}
HXLINE( 468)					return this->fcall(obj,_g17,args);
            				}
            				else {
HXLINE( 470)					return this->call(null(),this->expr(_g13),args);
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 472)				 ::crowplexus::hscript::Expr _g18 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 473)				if (::hx::IsEq( this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()),true )) {
HXLINE( 473)					return this->expr(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            				}
            				else {
HXLINE( 473)					if (::hx::IsNull( _g18 )) {
HXLINE( 473)						return null();
            					}
            					else {
HXLINE( 473)						return this->expr(_g18);
            					}
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 475)				this->whileLoop(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >(),e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 476)				return null();
            			}
            			break;
            			case (int)13: {
HXLINE( 481)				this->forLoop(e1->_hx_getString(0),e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >(),e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 482)				return null();
            			}
            			break;
            			case (int)14: {
HXLINE( 484)				HX_STACK_DO_THROW(::crowplexus::hscript::_Interp::Stop_obj::SBreak_dyn());
            			}
            			break;
            			case (int)15: {
HXLINE( 486)				HX_STACK_DO_THROW(::crowplexus::hscript::_Interp::Stop_obj::SContinue_dyn());
            			}
            			break;
            			case (int)16: {
            				HX_BEGIN_LOCAL_FUNC_S7(::hx::LocalFunc,_hx_Closure_1,::String,name, ::crowplexus::hscript::Expr,fexpr, ::crowplexus::hscript::Interp,_gthis,::Array< int >,minParams, ::crowplexus::hscript::Interp,me,::Array< ::Dynamic>,params, ::haxe::ds::StringMap,capturedLocals) HXARGC(1)
            				 ::Dynamic _hx_run(::cpp::VirtualArray args){
            					HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_518_expr)
HXLINE( 519)					int f;
HXDLIN( 519)					if (::hx::IsNull( args )) {
HXLINE( 519)						f = 0;
            					}
            					else {
HXLINE( 519)						f = args->get_length();
            					}
HXDLIN( 519)					if ((f != params->length)) {
HXLINE( 520)						if ((args->get_length() < minParams->__get(0))) {
HXLINE( 521)							::String str = (((HX_("Invalid number of parameters. Got ",cb,2b,d9,b1) + args->get_length()) + HX_(", required ",ed,0c,66,93)) + minParams->__get(0));
HXLINE( 522)							if (::hx::IsNotNull( name )) {
HXLINE( 523)								str = (str + ((HX_(" for function '",f6,90,ab,a0) + name) + HX_("'",27,00,00,00)));
            							}
HXLINE( 524)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(str),_gthis->curExpr->pmin,_gthis->curExpr->pmax,_gthis->curExpr->origin,_gthis->curExpr->line));
            						}
HXLINE( 527)						::cpp::VirtualArray args2 = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 528)						int extraParams = (args->get_length() - minParams->__get(0));
HXLINE( 529)						int pos = 0;
HXLINE( 530)						{
HXLINE( 530)							int _g = 0;
HXDLIN( 530)							while((_g < params->length)){
HXLINE( 530)								 ::Dynamic p = params->__get(_g);
HXDLIN( 530)								_g = (_g + 1);
HXLINE( 531)								if (( (bool)(p->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 532)									if ((extraParams > 0)) {
HXLINE( 533)										pos = (pos + 1);
HXDLIN( 533)										args2->push(args->__get((pos - 1)));
HXLINE( 534)										extraParams = (extraParams - 1);
            									}
            									else {
HXLINE( 536)										args2->push(null());
            									}
            								}
            								else {
HXLINE( 538)									pos = (pos + 1);
HXDLIN( 538)									args2->push(args->__get((pos - 1)));
            								}
            							}
            						}
HXLINE( 539)						args = args2;
            					}
HXLINE( 541)					 ::haxe::ds::StringMap old = me->locals;
HXDLIN( 541)					int depth = me->depth;
HXLINE( 542)					me->depth++;
HXLINE( 543)					me->locals = me->duplicate(capturedLocals);
HXLINE( 544)					{
HXLINE( 544)						int _g1 = 0;
HXDLIN( 544)						int _g2 = params->length;
HXDLIN( 544)						while((_g1 < _g2)){
HXLINE( 544)							_g1 = (_g1 + 1);
HXDLIN( 544)							int i = (_g1 - 1);
HXLINE( 545)							me->locals->set(( (::String)(params->__get(i)->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) ), ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,args->__get(i),false));
            						}
            					}
HXLINE( 546)					 ::Dynamic r = null();
HXLINE( 547)					int oldDecl = _gthis->declared->length;
HXLINE( 548)					if (_gthis->inTry) {
HXLINE( 549)						try {
            							HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 550)							r = me->exprReturn(fexpr);
            						} catch( ::Dynamic _hx_e) {
            							if (_hx_e.IsClass<  ::Dynamic >() ){
            								HX_STACK_BEGIN_CATCH
            								 ::Dynamic _g3 = _hx_e;
HXLINE( 551)								{
HXLINE( 551)									null();
            								}
HXLINE( 552)								me->locals = old;
HXLINE( 553)								me->depth = depth;
HXLINE( 557)								HX_STACK_DO_THROW(_g3);
            							}
            							else {
            								HX_STACK_DO_THROW(_hx_e);
            							}
            						}
            					}
            					else {
HXLINE( 561)						r = me->exprReturn(fexpr);
            					}
HXLINE( 562)					_gthis->restore(oldDecl);
HXLINE( 563)					me->locals = old;
HXLINE( 564)					me->depth = depth;
HXLINE( 565)					return r;
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE( 509)				::Array< ::Dynamic> params = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 509)				 ::crowplexus::hscript::Expr fexpr = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 509)				::String name = e1->_hx_getString(2);
HXLINE( 510)				 ::haxe::ds::StringMap capturedLocals = this->duplicate(this->locals);
HXLINE( 511)				 ::crowplexus::hscript::Interp me = ::hx::ObjectPtr<OBJ_>(this);
HXLINE( 512)				::Array< int > minParams = ::Array_obj< int >::fromData( _hx_array_data_c5fd2359_73,1);
HXLINE( 513)				{
HXLINE( 513)					int _g19 = 0;
HXDLIN( 513)					while((_g19 < params->length)){
HXLINE( 513)						 ::Dynamic p1 = params->__get(_g19);
HXDLIN( 513)						_g19 = (_g19 + 1);
HXLINE( 514)						if (( (bool)(!(( (bool)(p1->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) ))) )) {
HXLINE( 517)							minParams[0]++;
            						}
            					}
            				}
HXLINE( 518)				 ::Dynamic f =  ::Dynamic(new _hx_Closure_1(name,fexpr,_gthis,minParams,me,params,capturedLocals));
HXLINE( 567)				 ::Dynamic f1 = ::Reflect_obj::makeVarArgs(f);
HXLINE( 568)				if (::hx::IsNotNull( name )) {
HXLINE( 569)					if ((this->depth == 0)) {
HXLINE( 571)						this->variables->set(name,f1);
            					}
            					else {
HXLINE( 574)						::Array< ::Dynamic> _hx_tmp1 = this->declared;
HXDLIN( 574)						::String _g20 = name;
HXDLIN( 574)						_hx_tmp1->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,_g20,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(name)) )));
HXLINE( 575)						 ::crowplexus::hscript::LocalVar ref =  ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,f1,false);
HXLINE( 576)						this->locals->set(name,ref);
HXLINE( 577)						capturedLocals->set(name,ref);
            					}
            				}
HXLINE( 580)				return f1;
            			}
            			break;
            			case (int)17: {
HXLINE( 487)				 ::crowplexus::hscript::Expr _g21 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 488)				 ::Dynamic _hx_tmp2;
HXDLIN( 488)				if (::hx::IsNull( _g21 )) {
HXLINE( 488)					_hx_tmp2 = null();
            				}
            				else {
HXLINE( 488)					_hx_tmp2 = this->expr(_g21);
            				}
HXDLIN( 488)				this->returnValue = _hx_tmp2;
HXLINE( 489)				HX_STACK_DO_THROW(::crowplexus::hscript::_Interp::Stop_obj::SReturn_dyn());
            			}
            			break;
            			case (int)18: {
HXLINE( 628)				 ::Dynamic arr = this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 629)				 ::Dynamic index = this->expr(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 630)				if (::Std_obj::isOfType(arr,::hx::ClassOf< ::haxe::IMap >())) {
HXLINE( 631)					return ::haxe::IMap_obj::get( ::hx::interface_check(arr,0x09c2bd39),index);
            				}
            				else {
HXLINE( 633)					return arr->__GetItem(( (int)(index) ));
            				}
            			}
            			break;
            			case (int)19: {
HXLINE( 581)				::Array< ::Dynamic> _g22 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 582)				bool _hx_tmp3;
HXDLIN( 582)				if ((_g22->length > 0)) {
HXLINE( 582)					 ::crowplexus::hscript::ExprDef _g23 = _g22->__get(0).StaticCast<  ::crowplexus::hscript::Expr >()->e;
HXDLIN( 582)					if ((_g23->_hx_getIndex() == 8)) {
HXLINE( 582)						if ((_g23->_hx_getString(0) == HX_("=>",61,35,00,00))) {
HXLINE( 582)							_hx_tmp3 = true;
            						}
            						else {
HXLINE( 582)							_hx_tmp3 = false;
            						}
            					}
            					else {
HXLINE( 582)						_hx_tmp3 = false;
            					}
            				}
            				else {
HXLINE( 582)					_hx_tmp3 = false;
            				}
HXDLIN( 582)				if (_hx_tmp3) {
HXLINE( 583)					bool isAllString = true;
HXLINE( 584)					bool isAllInt = true;
HXLINE( 585)					bool isAllObject = true;
HXLINE( 586)					bool isAllEnum = true;
HXLINE( 587)					::cpp::VirtualArray keys = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 588)					::cpp::VirtualArray values = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 589)					{
HXLINE( 589)						int _g24 = 0;
HXDLIN( 589)						while((_g24 < _g22->length)){
HXLINE( 589)							 ::crowplexus::hscript::Expr e5 = _g22->__get(_g24).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 589)							_g24 = (_g24 + 1);
HXLINE( 590)							{
HXLINE( 590)								 ::crowplexus::hscript::ExprDef _g25 = e5->e;
HXDLIN( 590)								if ((_g25->_hx_getIndex() == 8)) {
HXLINE( 591)									if ((_g25->_hx_getString(0) == HX_("=>",61,35,00,00))) {
HXLINE( 592)										 ::Dynamic key = this->expr(_g25->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 593)										 ::Dynamic value1 = this->expr(_g25->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 594)										if (isAllString) {
HXLINE( 594)											isAllString = ::Std_obj::isOfType(key,::hx::ClassOf< ::String >());
            										}
            										else {
HXLINE( 594)											isAllString = false;
            										}
HXLINE( 595)										if (isAllInt) {
HXLINE( 595)											isAllInt = ::Std_obj::isOfType(key,::hx::ClassOf< int >());
            										}
            										else {
HXLINE( 595)											isAllInt = false;
            										}
HXLINE( 596)										if (isAllObject) {
HXLINE( 596)											isAllObject = ::Reflect_obj::isObject(key);
            										}
            										else {
HXLINE( 596)											isAllObject = false;
            										}
HXLINE( 597)										if (isAllEnum) {
HXLINE( 597)											isAllEnum = ::Reflect_obj::isEnumValue(key);
            										}
            										else {
HXLINE( 597)											isAllEnum = false;
            										}
HXLINE( 598)										keys->push(key);
HXLINE( 599)										values->push(value1);
            									}
            									else {
HXLINE( 601)										HX_STACK_DO_THROW(HX_("=> expected",17,e5,65,e5));
            									}
            								}
            								else {
HXLINE( 601)									HX_STACK_DO_THROW(HX_("=> expected",17,e5,65,e5));
            								}
            							}
            						}
            					}
HXLINE( 604)					 ::Dynamic map;
HXLINE( 605)					if (isAllInt) {
HXLINE( 604)						map =  ::haxe::ds::IntMap_obj::__alloc( HX_CTX );
            					}
            					else {
HXLINE( 607)						if (isAllString) {
HXLINE( 604)							map =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            						}
            						else {
HXLINE( 609)							if (isAllEnum) {
HXLINE( 604)								map =  ::haxe::ds::EnumValueMap_obj::__alloc( HX_CTX );
            							}
            							else {
HXLINE( 611)								if (isAllObject) {
HXLINE( 604)									map =  ::haxe::ds::ObjectMap_obj::__alloc( HX_CTX );
            								}
            								else {
HXLINE( 614)									HX_STACK_DO_THROW(HX_("Inconsistent key types",af,4f,50,a9));
            								}
            							}
            						}
            					}
HXLINE( 616)					{
HXLINE( 616)						int _g26 = 0;
HXDLIN( 616)						int _g27 = keys->get_length();
HXDLIN( 616)						while((_g26 < _g27)){
HXLINE( 616)							_g26 = (_g26 + 1);
HXDLIN( 616)							int n1 = (_g26 - 1);
HXLINE( 617)							::haxe::IMap_obj::set( ::hx::interface_check(map,0x09c2bd39),keys->__get(n1),values->__get(n1));
            						}
            					}
HXLINE( 619)					return map;
            				}
            				else {
HXLINE( 621)					::cpp::VirtualArray a = ::cpp::VirtualArray_obj::__new();
HXLINE( 622)					{
HXLINE( 622)						int _g28 = 0;
HXDLIN( 622)						while((_g28 < _g22->length)){
HXLINE( 622)							 ::crowplexus::hscript::Expr e6 = _g22->__get(_g28).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 622)							_g28 = (_g28 + 1);
HXLINE( 623)							a->push(this->expr(e6));
            						}
            					}
HXLINE( 625)					return a;
            				}
            			}
            			break;
            			case (int)20: {
HXLINE( 635)				::String _g29 = e1->_hx_getString(0);
HXDLIN( 635)				::Array< ::Dynamic> _g30 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 636)				::cpp::VirtualArray a1 = ::cpp::VirtualArray_obj::__new();
HXLINE( 637)				{
HXLINE( 637)					int _g31 = 0;
HXDLIN( 637)					while((_g31 < _g30->length)){
HXLINE( 637)						 ::crowplexus::hscript::Expr e7 = _g30->__get(_g31).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 637)						_g31 = (_g31 + 1);
HXLINE( 638)						a1->push(this->expr(e7));
            					}
            				}
HXLINE( 639)				return this->cnew(_g29,a1);
            			}
            			break;
            			case (int)21: {
HXLINE( 641)				HX_STACK_DO_THROW(this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()));
            			}
            			break;
            			case (int)22: {
HXLINE( 642)				 ::crowplexus::hscript::Expr _g32 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 642)				::String _g33 = e1->_hx_getString(1);
HXDLIN( 642)				 ::crowplexus::hscript::Expr _g34 = e1->_hx_getObject(3).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 643)				int old1 = this->declared->length;
HXLINE( 644)				bool oldTry = this->inTry;
HXLINE( 645)				try {
            					HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            					HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
            					HX_STACK_CATCHABLE( ::Dynamic, 2);
HXLINE( 646)					this->inTry = true;
HXLINE( 647)					 ::Dynamic v1 = this->expr(_g32);
HXLINE( 648)					this->restore(old1);
HXLINE( 649)					this->inTry = oldTry;
HXLINE( 650)					return v1;
            				} catch( ::Dynamic _hx_e) {
            					if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 652)						this->inTry = oldTry;
HXLINE( 653)						HX_STACK_DO_THROW(err1);
            					}
            					else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::haxe::ValueException _g35 = _hx_e;
HXLINE( 651)						{
HXLINE( 651)							null();
            						}
HXLINE( 645)						if (::Std_obj::isOfType(_g35->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 651)							 ::crowplexus::hscript::_Interp::Stop err1 = _g35->value;
HXLINE( 652)							this->inTry = oldTry;
HXLINE( 653)							HX_STACK_DO_THROW(err1);
            						}
            						else {
HXLINE( 645)							HX_STACK_DO_THROW(_g35);
            						}
            					}
            					else if (_hx_e.IsClass<  ::Dynamic >() ){
            						HX_STACK_BEGIN_CATCH
            						 ::Dynamic _g36 = _hx_e;
HXLINE( 654)						{
HXLINE( 654)							null();
            						}
HXLINE( 656)						this->restore(old1);
HXLINE( 657)						this->inTry = oldTry;
HXLINE( 659)						::Array< ::Dynamic> _hx_tmp4 = this->declared;
HXDLIN( 659)						_hx_tmp4->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,_g33,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(_g33)) )));
HXLINE( 660)						this->locals->set(_g33, ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,_g36,false));
HXLINE( 661)						 ::Dynamic v2 = this->expr(_g34);
HXLINE( 662)						this->restore(old1);
HXLINE( 663)						return v2;
            					}
            					else {
            						HX_STACK_DO_THROW(_hx_e);
            					}
            				}
            			}
            			break;
            			case (int)23: {
HXLINE( 665)				::Array< ::Dynamic> _g37 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXLINE( 666)				 ::Dynamic o =  ::Dynamic(::hx::Anon_obj::Create(0));
HXLINE( 667)				{
HXLINE( 667)					int _g38 = 0;
HXDLIN( 667)					while((_g38 < _g37->length)){
HXLINE( 667)						 ::crowplexus::hscript::ObjectDecl f2 = _g37->__get(_g38).StaticCast<  ::crowplexus::hscript::ObjectDecl >();
HXDLIN( 667)						_g38 = (_g38 + 1);
HXLINE( 668)						::String f3 = f2->name;
HXDLIN( 668)						this->set(o,f3,this->expr(f2->e));
            					}
            				}
HXLINE( 669)				return o;
            			}
            			break;
            			case (int)24: {
HXLINE( 671)				if (::hx::IsEq( this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()),true )) {
HXLINE( 671)					return this->expr(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            				}
            				else {
HXLINE( 671)					return this->expr(e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            				}
            			}
            			break;
            			case (int)25: {
HXLINE( 672)				::Array< ::Dynamic> _g39 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 672)				 ::crowplexus::hscript::Expr _g40 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 673)				 ::Dynamic val = this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 674)				bool match = false;
HXLINE( 675)				{
HXLINE( 675)					int _g41 = 0;
HXDLIN( 675)					while((_g41 < _g39->length)){
HXLINE( 675)						 ::crowplexus::hscript::SwitchCase c1 = _g39->__get(_g41).StaticCast<  ::crowplexus::hscript::SwitchCase >();
HXDLIN( 675)						_g41 = (_g41 + 1);
HXLINE( 676)						{
HXLINE( 676)							int _g42 = 0;
HXDLIN( 676)							::Array< ::Dynamic> _g43 = c1->values;
HXDLIN( 676)							while((_g42 < _g43->length)){
HXLINE( 676)								 ::crowplexus::hscript::Expr v3 = _g43->__get(_g42).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 676)								_g42 = (_g42 + 1);
HXLINE( 677)								bool _hx_tmp5;
HXDLIN( 677)								bool _hx_tmp6;
HXDLIN( 677)								if (!(__hxcpp_enum_eq(v3->e,::crowplexus::hscript::ExprDef_obj::EIdent(HX_("_",5f,00,00,00))))) {
HXLINE( 677)									_hx_tmp6 = ::hx::IsEq( this->expr(v3),val );
            								}
            								else {
HXLINE( 677)									_hx_tmp6 = false;
            								}
HXDLIN( 677)								if (_hx_tmp6) {
HXLINE( 677)									if (::hx::IsNotNull( c1->ifExpr )) {
HXLINE( 677)										_hx_tmp5 = ::hx::IsEq( this->expr(c1->ifExpr),true );
            									}
            									else {
HXLINE( 677)										_hx_tmp5 = true;
            									}
            								}
            								else {
HXLINE( 677)									_hx_tmp5 = false;
            								}
HXDLIN( 677)								if (_hx_tmp5) {
HXLINE( 678)									match = true;
HXLINE( 679)									goto _hx_goto_66;
            								}
            							}
            							_hx_goto_66:;
            						}
HXLINE( 681)						if (match) {
HXLINE( 682)							val = this->expr(c1->expr);
HXLINE( 683)							goto _hx_goto_65;
            						}
            					}
            					_hx_goto_65:;
            				}
HXLINE( 686)				if (!(match)) {
HXLINE( 687)					if (::hx::IsNull( _g40 )) {
HXLINE( 687)						val = null();
            					}
            					else {
HXLINE( 687)						val = this->expr(_g40);
            					}
            				}
HXLINE( 688)				return val;
            			}
            			break;
            			case (int)26: {
HXLINE( 478)				this->doWhileLoop(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >(),e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 479)				return null();
            			}
            			break;
            			case (int)27: {
HXLINE( 690)				return this->expr(e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)28: {
HXLINE( 692)				return this->expr(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)29: {
HXLINE( 693)				::Array< ::Dynamic> _g44 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 693)				{
HXLINE( 693)					::String enumName = e1->_hx_getString(0);
HXDLIN( 693)					{
HXLINE( 694)						 ::Dynamic obj1 =  ::Dynamic(::hx::Anon_obj::Create(0));
HXLINE( 695)						{
HXLINE( 695)							int _g45 = 0;
HXDLIN( 695)							while((_g45 < _g44->length)){
HXLINE( 695)								 ::crowplexus::hscript::EnumType field = _g44->__get(_g45).StaticCast<  ::crowplexus::hscript::EnumType >();
HXDLIN( 695)								_g45 = (_g45 + 1);
HXLINE( 696)								switch((int)(field->_hx_getIndex())){
            									case (int)0: {
HXLINE( 697)										::String _g46 = field->_hx_getString(0);
HXLINE( 698)										::Reflect_obj::setField(obj1,_g46, ::crowplexus::hscript::EnumValue_obj::__alloc( HX_CTX ,enumName,_g46,null()));
            									}
            									break;
            									case (int)1: {
HXLINE( 699)										::String name1 = field->_hx_getString(0);
HXDLIN( 699)										::Array< ::Dynamic> params1 = field->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 699)										{
            											HX_BEGIN_LOCAL_FUNC_S5(::hx::LocalFunc,_hx_Closure_2,::String,name1, ::crowplexus::hscript::Interp,_gthis,::String,enumName,::Array< ::Dynamic>,params1,::Array< int >,minParams1) HXARGC(1)
            											 ::crowplexus::hscript::EnumValue _hx_run(::cpp::VirtualArray args){
            												HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_706_expr)
HXLINE( 707)												int f;
HXDLIN( 707)												if (::hx::IsNull( args )) {
HXLINE( 707)													f = 0;
            												}
            												else {
HXLINE( 707)													f = args->get_length();
            												}
HXDLIN( 707)												if ((f != params1->length)) {
HXLINE( 708)													if ((args->get_length() < minParams1->__get(0))) {
HXLINE( 709)														::String str = (((HX_("Invalid number of parameters. Got ",cb,2b,d9,b1) + args->get_length()) + HX_(", required ",ed,0c,66,93)) + minParams1->__get(0));
HXLINE( 710)														if (::hx::IsNotNull( enumName )) {
HXLINE( 711)															str = (str + ((HX_(" for enum '",9f,65,13,e1) + enumName) + HX_("'",27,00,00,00)));
            														}
HXLINE( 712)														HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(str),_gthis->curExpr->pmin,_gthis->curExpr->pmax,_gthis->curExpr->origin,_gthis->curExpr->line));
            													}
HXLINE( 715)													::cpp::VirtualArray args2 = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 716)													int extraParams = (args->get_length() - minParams1->__get(0));
HXLINE( 717)													int pos = 0;
HXLINE( 718)													{
HXLINE( 718)														int _g = 0;
HXDLIN( 718)														while((_g < params1->length)){
HXLINE( 718)															 ::Dynamic p = params1->__get(_g);
HXDLIN( 718)															_g = (_g + 1);
HXLINE( 719)															if (( (bool)(p->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE( 720)																if ((extraParams > 0)) {
HXLINE( 721)																	pos = (pos + 1);
HXDLIN( 721)																	args2->push(args->__get((pos - 1)));
HXLINE( 722)																	extraParams = (extraParams - 1);
            																}
            																else {
HXLINE( 724)																	args2->push(null());
            																}
            															}
            															else {
HXLINE( 726)																pos = (pos + 1);
HXDLIN( 726)																args2->push(args->__get((pos - 1)));
            															}
            														}
            													}
HXLINE( 727)													args = args2;
            												}
HXLINE( 729)												return  ::crowplexus::hscript::EnumValue_obj::__alloc( HX_CTX ,enumName,name1,args);
            											}
            											HX_END_LOCAL_FUNC1(return)

HXLINE( 700)											::Array< int > minParams1 = ::Array_obj< int >::fromData( _hx_array_data_c5fd2359_75,1);
HXLINE( 701)											{
HXLINE( 701)												int _g47 = 0;
HXDLIN( 701)												while((_g47 < params1->length)){
HXLINE( 701)													 ::Dynamic p2 = params1->__get(_g47);
HXDLIN( 701)													_g47 = (_g47 + 1);
HXLINE( 702)													if (( (bool)(!(( (bool)(p2->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) ))) )) {
HXLINE( 705)														minParams1[0]++;
            													}
            												}
            											}
HXLINE( 706)											 ::Dynamic f4 =  ::Dynamic(new _hx_Closure_2(name1,_gthis,enumName,params1,minParams1));
HXLINE( 731)											 ::Dynamic f5 = ::Reflect_obj::makeVarArgs(f4);
HXLINE( 733)											::Reflect_obj::setField(obj1,name1,f5);
            										}
            									}
            									break;
            								}
            							}
            						}
HXLINE( 737)						this->variables->set(enumName,obj1);
            					}
            				}
            			}
            			break;
            			case (int)30: {
HXLINE( 739)				return e1->_hx_getObject(0);
            			}
            			break;
            		}
HXLINE( 741)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,expr,return )

void Interp_obj::doWhileLoop( ::crowplexus::hscript::Expr econd, ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_744_doWhileLoop)
HXLINE( 745)		int old = this->declared->length;
HXLINE( 746)		do {
HXLINE( 747)			try {
            				HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            				HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 748)				this->expr(e);
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 750)					switch((int)(err1->_hx_getIndex())){
            						case (int)0: {
HXLINE( 753)							goto _hx_goto_76;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 755)							HX_STACK_DO_THROW(err1);
            						}
            						break;
            					}
            				}
            				else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::haxe::ValueException _g = _hx_e;
HXLINE( 749)					{
HXLINE( 749)						null();
            					}
HXLINE( 747)					if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 749)						 ::crowplexus::hscript::_Interp::Stop err1 = _g->value;
HXLINE( 750)						switch((int)(err1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 753)								goto _hx_goto_76;
            							}
            							break;
            							case (int)1: {
            							}
            							break;
            							case (int)2: {
HXLINE( 755)								HX_STACK_DO_THROW(err1);
            							}
            							break;
            						}
            					}
            					else {
HXLINE( 747)						HX_STACK_DO_THROW(_g);
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		} while(::hx::IsEq( this->expr(econd),true ));
            		_hx_goto_76:;
HXLINE( 759)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,doWhileLoop,(void))

void Interp_obj::whileLoop( ::crowplexus::hscript::Expr econd, ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_762_whileLoop)
HXLINE( 763)		int old = this->declared->length;
HXLINE( 764)		while(::hx::IsEq( this->expr(econd),true )){
HXLINE( 765)			try {
            				HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            				HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 766)				this->expr(e);
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 768)					switch((int)(err1->_hx_getIndex())){
            						case (int)0: {
HXLINE( 771)							goto _hx_goto_78;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 773)							HX_STACK_DO_THROW(err1);
            						}
            						break;
            					}
            				}
            				else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::haxe::ValueException _g = _hx_e;
HXLINE( 767)					{
HXLINE( 767)						null();
            					}
HXLINE( 765)					if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 767)						 ::crowplexus::hscript::_Interp::Stop err1 = _g->value;
HXLINE( 768)						switch((int)(err1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 771)								goto _hx_goto_78;
            							}
            							break;
            							case (int)1: {
            							}
            							break;
            							case (int)2: {
HXLINE( 773)								HX_STACK_DO_THROW(err1);
            							}
            							break;
            						}
            					}
            					else {
HXLINE( 765)						HX_STACK_DO_THROW(_g);
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_78:;
HXLINE( 777)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,whileLoop,(void))

 ::Dynamic Interp_obj::makeIterator( ::Dynamic v){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_780_makeIterator)
HXLINE( 785)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE( 786)			v = v->__Field(HX_("iterator",ee,49,9a,93),::hx::paccDynamic)();
            		} catch( ::Dynamic _hx_e) {
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic _g = _hx_e;
HXLINE( 787)				{
HXLINE( 787)					null();
            				}
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE( 789)		bool _hx_tmp;
HXDLIN( 789)		if (::hx::IsNotNull( v->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic) )) {
HXLINE( 789)			_hx_tmp = ::hx::IsNull( v->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic) );
            		}
            		else {
HXLINE( 789)			_hx_tmp = true;
            		}
HXDLIN( 789)		if (_hx_tmp) {
HXLINE( 790)			HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidIterator(v),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            		}
HXLINE( 791)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,makeIterator,return )

void Interp_obj::forLoop(::String n, ::crowplexus::hscript::Expr it, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_794_forLoop)
HXLINE( 795)		int old = this->declared->length;
HXLINE( 796)		::Array< ::Dynamic> _hx_tmp = this->declared;
HXDLIN( 796)		_hx_tmp->push( ::crowplexus::hscript::DeclaredVar_obj::__alloc( HX_CTX ,n,( ( ::crowplexus::hscript::LocalVar)(this->locals->get(n)) )));
HXLINE( 797)		 ::Dynamic it1 = this->makeIterator(this->expr(it));
HXLINE( 798)		 ::Dynamic _itHasNext = it1->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic);
HXLINE( 799)		 ::Dynamic _itNext = it1->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic);
HXLINE( 800)		while(( (bool)(_itHasNext()) )){
HXLINE( 801)			{
HXLINE( 801)				::Dynamic this1 = this->locals;
HXDLIN( 801)				( ( ::haxe::ds::StringMap)(this1) )->set(n, ::crowplexus::hscript::LocalVar_obj::__alloc( HX_CTX ,_itNext(),false));
            			}
HXLINE( 802)			try {
            				HX_STACK_CATCHABLE( ::crowplexus::hscript::_Interp::Stop, 0);
            				HX_STACK_CATCHABLE( ::haxe::ValueException, 1);
HXLINE( 803)				this->expr(e);
            			} catch( ::Dynamic _hx_e) {
            				if (_hx_e.IsClass<  ::crowplexus::hscript::_Interp::Stop >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::crowplexus::hscript::_Interp::Stop err1 = _hx_e;
HXLINE( 805)					switch((int)(err1->_hx_getIndex())){
            						case (int)0: {
HXLINE( 808)							goto _hx_goto_81;
            						}
            						break;
            						case (int)1: {
            						}
            						break;
            						case (int)2: {
HXLINE( 810)							HX_STACK_DO_THROW(err1);
            						}
            						break;
            					}
            				}
            				else if (_hx_e.IsClass<  ::haxe::ValueException >() ){
            					HX_STACK_BEGIN_CATCH
            					 ::haxe::ValueException _g = _hx_e;
HXLINE( 804)					{
HXLINE( 804)						null();
            					}
HXLINE( 802)					if (::Std_obj::isOfType(_g->value,::hx::ClassOf< ::crowplexus::hscript::_Interp::Stop >())) {
HXLINE( 804)						 ::crowplexus::hscript::_Interp::Stop err1 = _g->value;
HXLINE( 805)						switch((int)(err1->_hx_getIndex())){
            							case (int)0: {
HXLINE( 808)								goto _hx_goto_81;
            							}
            							break;
            							case (int)1: {
            							}
            							break;
            							case (int)2: {
HXLINE( 810)								HX_STACK_DO_THROW(err1);
            							}
            							break;
            						}
            					}
            					else {
HXLINE( 802)						HX_STACK_DO_THROW(_g);
            					}
            				}
            				else {
            					HX_STACK_DO_THROW(_hx_e);
            				}
            			}
            		}
            		_hx_goto_81:;
HXLINE( 814)		this->restore(old);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,forLoop,(void))

bool Interp_obj::isMap( ::Dynamic o){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_818_isMap)
HXDLIN( 818)		return ::Std_obj::isOfType(o,::hx::ClassOf< ::haxe::IMap >());
            	}


HX_DEFINE_DYNAMIC_FUNC1(Interp_obj,isMap,return )

 ::Dynamic Interp_obj::getMapValue( ::Dynamic map, ::Dynamic key){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_822_getMapValue)
HXDLIN( 822)		return ::haxe::IMap_obj::get( ::hx::interface_check(map,0x09c2bd39),key);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,getMapValue,return )

void Interp_obj::setMapValue( ::Dynamic map, ::Dynamic key, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_826_setMapValue)
HXDLIN( 826)		::haxe::IMap_obj::set( ::hx::interface_check(map,0x09c2bd39),key,value);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,setMapValue,(void))

 ::Dynamic Interp_obj::get( ::Dynamic o,::String f){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_829_get)
HXLINE( 830)		if (::hx::IsNull( o )) {
HXLINE( 831)			HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            		}
HXLINE( 832)		return ::Reflect_obj::getProperty(o,f);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,get,return )

 ::Dynamic Interp_obj::set( ::Dynamic o,::String f, ::Dynamic v){
            	HX_GC_STACKFRAME(&_hx_pos_fc3952b268c01112_846_set)
HXLINE( 847)		if (::hx::IsNull( o )) {
HXLINE( 848)			HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidAccess(f),this->curExpr->pmin,this->curExpr->pmax,this->curExpr->origin,this->curExpr->line));
            		}
HXLINE( 849)		::Reflect_obj::setProperty(o,f,v);
HXLINE( 850)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,set,return )

 ::Dynamic Interp_obj::fcall( ::Dynamic o,::String f,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_854_fcall)
HXDLIN( 854)		return this->call(o,this->get(o,f),args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,fcall,return )

 ::Dynamic Interp_obj::call( ::Dynamic o, ::Dynamic f,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_858_call)
HXDLIN( 858)		return ::Reflect_obj::callMethod(o,f,args);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Interp_obj,call,return )

 ::Dynamic Interp_obj::cnew(::String cl,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_fc3952b268c01112_861_cnew)
HXLINE( 862)		::hx::Class c = ::Type_obj::resolveClass(cl);
HXLINE( 863)		if (::hx::IsNull( c )) {
HXLINE( 864)			c = this->resolve(cl);
            		}
HXLINE( 865)		return ::Type_obj::createInstance(c,args);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Interp_obj,cnew,return )


::hx::ObjectPtr< Interp_obj > Interp_obj::__new() {
	::hx::ObjectPtr< Interp_obj > __this = new Interp_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Interp_obj > Interp_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Interp_obj *__this = (Interp_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Interp_obj), true, "crowplexus.hscript.Interp"));
	*(void **)__this = Interp_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Interp_obj::Interp_obj()
{
}

void Interp_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Interp);
	HX_MARK_MEMBER_NAME(variables,"variables");
	HX_MARK_MEMBER_NAME(imports,"imports");
	HX_MARK_MEMBER_NAME(locals,"locals");
	HX_MARK_MEMBER_NAME(binops,"binops");
	HX_MARK_MEMBER_NAME(depth,"depth");
	HX_MARK_MEMBER_NAME(inTry,"inTry");
	HX_MARK_MEMBER_NAME(declared,"declared");
	HX_MARK_MEMBER_NAME(returnValue,"returnValue");
	HX_MARK_MEMBER_NAME(curExpr,"curExpr");
	HX_MARK_END_CLASS();
}

void Interp_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(variables,"variables");
	HX_VISIT_MEMBER_NAME(imports,"imports");
	HX_VISIT_MEMBER_NAME(locals,"locals");
	HX_VISIT_MEMBER_NAME(binops,"binops");
	HX_VISIT_MEMBER_NAME(depth,"depth");
	HX_VISIT_MEMBER_NAME(inTry,"inTry");
	HX_VISIT_MEMBER_NAME(declared,"declared");
	HX_VISIT_MEMBER_NAME(returnValue,"returnValue");
	HX_VISIT_MEMBER_NAME(curExpr,"curExpr");
}

::hx::Val Interp_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"get") ) { return ::hx::Val( get_dyn() ); }
		if (HX_FIELD_EQ(inName,"set") ) { return ::hx::Val( set_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"expr") ) { return ::hx::Val( expr_dyn() ); }
		if (HX_FIELD_EQ(inName,"call") ) { return ::hx::Val( call_dyn() ); }
		if (HX_FIELD_EQ(inName,"cnew") ) { return ::hx::Val( cnew_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { return ::hx::Val( depth ); }
		if (HX_FIELD_EQ(inName,"inTry") ) { return ::hx::Val( inTry ); }
		if (HX_FIELD_EQ(inName,"error") ) { return ::hx::Val( error_dyn() ); }
		if (HX_FIELD_EQ(inName,"isMap") ) { return ::hx::Val( isMap_dyn() ); }
		if (HX_FIELD_EQ(inName,"fcall") ) { return ::hx::Val( fcall_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { return ::hx::Val( locals ); }
		if (HX_FIELD_EQ(inName,"binops") ) { return ::hx::Val( binops ); }
		if (HX_FIELD_EQ(inName,"setVar") ) { return ::hx::Val( setVar_dyn() ); }
		if (HX_FIELD_EQ(inName,"assign") ) { return ::hx::Val( assign_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"imports") ) { return ::hx::Val( imports ); }
		if (HX_FIELD_EQ(inName,"curExpr") ) { return ::hx::Val( curExpr ); }
		if (HX_FIELD_EQ(inName,"initOps") ) { return ::hx::Val( initOps_dyn() ); }
		if (HX_FIELD_EQ(inName,"execute") ) { return ::hx::Val( execute_dyn() ); }
		if (HX_FIELD_EQ(inName,"restore") ) { return ::hx::Val( restore_dyn() ); }
		if (HX_FIELD_EQ(inName,"rethrow") ) { return ::hx::Val( rethrow_dyn() ); }
		if (HX_FIELD_EQ(inName,"resolve") ) { return ::hx::Val( resolve_dyn() ); }
		if (HX_FIELD_EQ(inName,"forLoop") ) { return ::hx::Val( forLoop_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { return ::hx::Val( declared ); }
		if (HX_FIELD_EQ(inName,"posInfos") ) { return ::hx::Val( posInfos_dyn() ); }
		if (HX_FIELD_EQ(inName,"assignOp") ) { return ::hx::Val( assignOp_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { return ::hx::Val( variables ); }
		if (HX_FIELD_EQ(inName,"increment") ) { return ::hx::Val( increment_dyn() ); }
		if (HX_FIELD_EQ(inName,"duplicate") ) { return ::hx::Val( duplicate_dyn() ); }
		if (HX_FIELD_EQ(inName,"whileLoop") ) { return ::hx::Val( whileLoop_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"exprReturn") ) { return ::hx::Val( exprReturn_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"returnValue") ) { return ::hx::Val( returnValue ); }
		if (HX_FIELD_EQ(inName,"doWhileLoop") ) { return ::hx::Val( doWhileLoop_dyn() ); }
		if (HX_FIELD_EQ(inName,"getMapValue") ) { return ::hx::Val( getMapValue_dyn() ); }
		if (HX_FIELD_EQ(inName,"setMapValue") ) { return ::hx::Val( setMapValue_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"evalAssignOp") ) { return ::hx::Val( evalAssignOp_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeIterator") ) { return ::hx::Val( makeIterator_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"resetVariables") ) { return ::hx::Val( resetVariables_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Interp_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"depth") ) { depth=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"inTry") ) { inTry=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"locals") ) { locals=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"binops") ) { binops=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"imports") ) { imports=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"curExpr") ) { curExpr=inValue.Cast<  ::crowplexus::hscript::Expr >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"declared") ) { declared=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"variables") ) { variables=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"returnValue") ) { returnValue=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Interp_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("variables",b7,e2,62,82));
	outFields->push(HX_("imports",6e,97,ca,69));
	outFields->push(HX_("locals",a8,74,bf,59));
	outFields->push(HX_("binops",cb,59,16,ed));
	outFields->push(HX_("depth",03,f1,29,d7));
	outFields->push(HX_("inTry",56,82,08,be));
	outFields->push(HX_("declared",fa,58,bc,c4));
	outFields->push(HX_("returnValue",a1,4c,95,3e));
	outFields->push(HX_("curExpr",d5,6e,33,ae));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Interp_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,variables),HX_("variables",b7,e2,62,82)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,imports),HX_("imports",6e,97,ca,69)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,locals),HX_("locals",a8,74,bf,59)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Interp_obj,binops),HX_("binops",cb,59,16,ed)},
	{::hx::fsInt,(int)offsetof(Interp_obj,depth),HX_("depth",03,f1,29,d7)},
	{::hx::fsBool,(int)offsetof(Interp_obj,inTry),HX_("inTry",56,82,08,be)},
	{::hx::fsObject /* ::Array< ::Dynamic> */ ,(int)offsetof(Interp_obj,declared),HX_("declared",fa,58,bc,c4)},
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Interp_obj,returnValue),HX_("returnValue",a1,4c,95,3e)},
	{::hx::fsObject /*  ::crowplexus::hscript::Expr */ ,(int)offsetof(Interp_obj,curExpr),HX_("curExpr",d5,6e,33,ae)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Interp_obj_sStaticStorageInfo = 0;
#endif

static ::String Interp_obj_sMemberFields[] = {
	HX_("variables",b7,e2,62,82),
	HX_("imports",6e,97,ca,69),
	HX_("locals",a8,74,bf,59),
	HX_("binops",cb,59,16,ed),
	HX_("depth",03,f1,29,d7),
	HX_("inTry",56,82,08,be),
	HX_("declared",fa,58,bc,c4),
	HX_("returnValue",a1,4c,95,3e),
	HX_("curExpr",d5,6e,33,ae),
	HX_("resetVariables",e8,46,d3,dc),
	HX_("posInfos",11,82,2e,5a),
	HX_("initOps",02,63,8b,cb),
	HX_("setVar",65,6c,71,6f),
	HX_("assign",2f,46,06,4c),
	HX_("assignOp",30,b5,c7,0e),
	HX_("evalAssignOp",ec,d8,94,19),
	HX_("increment",2f,06,ff,31),
	HX_("execute",35,0a,0d,cc),
	HX_("exprReturn",c5,6b,ed,86),
	HX_("duplicate",8b,21,17,a1),
	HX_("restore",4e,67,b0,6a),
	HX_("error",c8,cb,29,73),
	HX_("rethrow",93,b0,2a,f6),
	HX_("resolve",ec,12,60,67),
	HX_("expr",35,fd,1d,43),
	HX_("doWhileLoop",aa,01,97,3a),
	HX_("whileLoop",b5,42,98,e1),
	HX_("makeIterator",fc,dd,72,d8),
	HX_("forLoop",0d,52,69,c9),
	HX_("isMap",d2,34,51,c1),
	HX_("getMapValue",eb,b1,ee,ce),
	HX_("setMapValue",f7,b8,5b,d9),
	HX_("get",96,80,4e,00),
	HX_("set",a2,9b,57,00),
	HX_("fcall",04,44,99,fc),
	HX_("call",9e,18,ba,41),
	HX_("cnew",dd,ef,c3,41),
	::String(null()) };

::hx::Class Interp_obj::__mClass;

void Interp_obj::__register()
{
	Interp_obj _hx_dummy;
	Interp_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.Interp",59,23,fd,c5);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Interp_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Interp_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Interp_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Interp_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript
