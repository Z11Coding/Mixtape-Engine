// Generated by Haxe 4.3.5
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_CType
#include <crowplexus/hscript/CType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Const
#include <crowplexus/hscript/Const.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_EnumType
#include <crowplexus/hscript/EnumType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Error
#include <crowplexus/hscript/Error.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ErrorDef
#include <crowplexus/hscript/ErrorDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Expr
#include <crowplexus/hscript/Expr.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ExprDef
#include <crowplexus/hscript/ExprDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_FieldKind
#include <crowplexus/hscript/FieldKind.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ModuleDecl
#include <crowplexus/hscript/ModuleDecl.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ObjectDecl
#include <crowplexus/hscript/ObjectDecl.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Parser
#include <crowplexus/hscript/Parser.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_SwitchCase
#include <crowplexus/hscript/SwitchCase.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Token
#include <crowplexus/hscript/Token.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_TokenPos
#include <crowplexus/hscript/TokenPos.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Tools
#include <crowplexus/hscript/Tools.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_List
#include <haxe/ds/List.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_65_new,"crowplexus.hscript.Parser","new",0xbfe7e956,"crowplexus.hscript.Parser.new","crowplexus/hscript/Parser.hx",65,0x2e3b7998)
static const ::String _hx_array_data_14ff4664_3[] = {
	HX_("%",25,00,00,00),
};
static const ::String _hx_array_data_14ff4664_4[] = {
	HX_("*",2a,00,00,00),HX_("/",2f,00,00,00),
};
static const ::String _hx_array_data_14ff4664_5[] = {
	HX_("+",2b,00,00,00),HX_("-",2d,00,00,00),
};
static const ::String _hx_array_data_14ff4664_6[] = {
	HX_("<<",80,34,00,00),HX_(">>",40,36,00,00),HX_(">>>",fe,41,2f,00),
};
static const ::String _hx_array_data_14ff4664_7[] = {
	HX_("|",7c,00,00,00),HX_("&",26,00,00,00),HX_("^",5e,00,00,00),
};
static const ::String _hx_array_data_14ff4664_8[] = {
	HX_("==",60,35,00,00),HX_("!=",fc,1c,00,00),HX_(">",3e,00,00,00),HX_("<",3c,00,00,00),HX_(">=",3f,36,00,00),HX_("<=",81,34,00,00),
};
static const ::String _hx_array_data_14ff4664_9[] = {
	HX_("...",ee,0f,23,00),
};
static const ::String _hx_array_data_14ff4664_10[] = {
	HX_("&&",40,21,00,00),
};
static const ::String _hx_array_data_14ff4664_11[] = {
	HX_("||",80,6c,00,00),
};
static const ::String _hx_array_data_14ff4664_12[] = {
	HX_("->",71,27,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_167_error,"crowplexus.hscript.Parser","error",0x52ae8e3e,"crowplexus.hscript.Parser.error","crowplexus/hscript/Parser.hx",167,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_176_invalidChar,"crowplexus.hscript.Parser","invalidChar",0x7335ac63,"crowplexus.hscript.Parser.invalidChar","crowplexus/hscript/Parser.hx",176,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_179_initParser,"crowplexus.hscript.Parser","initParser",0xbde689d9,"crowplexus.hscript.Parser.initParser","crowplexus/hscript/Parser.hx",179,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_203_parseString,"crowplexus.hscript.Parser","parseString",0x55d3d45a,"crowplexus.hscript.Parser.parseString","crowplexus/hscript/Parser.hx",203,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_218_unexpected,"crowplexus.hscript.Parser","unexpected",0x920ca79b,"crowplexus.hscript.Parser.unexpected","crowplexus/hscript/Parser.hx",218,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_223_push,"crowplexus.hscript.Parser","push",0x2c62d024,"crowplexus.hscript.Parser.push","crowplexus/hscript/Parser.hx",223,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_233_ensure,"crowplexus.hscript.Parser","ensure",0xb9215a88,"crowplexus.hscript.Parser.ensure","crowplexus/hscript/Parser.hx",233,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_239_ensureToken,"crowplexus.hscript.Parser","ensureToken",0xb59a6b51,"crowplexus.hscript.Parser.ensureToken","crowplexus/hscript/Parser.hx",239,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_245_maybe,"crowplexus.hscript.Parser","maybe",0xe2abd61e,"crowplexus.hscript.Parser.maybe","crowplexus/hscript/Parser.hx",245,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_255_getIdent,"crowplexus.hscript.Parser","getIdent",0x4baffdc4,"crowplexus.hscript.Parser.getIdent","crowplexus/hscript/Parser.hx",255,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_259_extractIdent,"crowplexus.hscript.Parser","extractIdent",0x47b66a39,"crowplexus.hscript.Parser.extractIdent","crowplexus/hscript/Parser.hx",259,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_270_expr,"crowplexus.hscript.Parser","expr",0x251fbb7f,"crowplexus.hscript.Parser.expr","crowplexus/hscript/Parser.hx",270,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_278_pmin,"crowplexus.hscript.Parser","pmin",0x2c5cb56c,"crowplexus.hscript.Parser.pmin","crowplexus/hscript/Parser.hx",278,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_286_pmax,"crowplexus.hscript.Parser","pmax",0x2c5cae7e,"crowplexus.hscript.Parser.pmax","crowplexus/hscript/Parser.hx",286,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_292_mk,"crowplexus.hscript.Parser","mk",0x5b8d1728,"crowplexus.hscript.Parser.mk","crowplexus/hscript/Parser.hx",292,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_312_isBlock,"crowplexus.hscript.Parser","isBlock",0xad94e4f9,"crowplexus.hscript.Parser.isBlock","crowplexus/hscript/Parser.hx",312,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_333_parseFullExpr,"crowplexus.hscript.Parser","parseFullExpr",0xccbde62d,"crowplexus.hscript.Parser.parseFullExpr","crowplexus/hscript/Parser.hx",333,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_355_parseObject,"crowplexus.hscript.Parser","parseObject",0x59e32a48,"crowplexus.hscript.Parser.parseObject","crowplexus/hscript/Parser.hx",355,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_391_parseExpr,"crowplexus.hscript.Parser","parseExpr",0x6a1a847e,"crowplexus.hscript.Parser.parseExpr","crowplexus/hscript/Parser.hx",391,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_529_parseLambda,"crowplexus.hscript.Parser","parseLambda",0x9563de90,"crowplexus.hscript.Parser.parseLambda","crowplexus/hscript/Parser.hx",529,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_549_parseMetaArgs,"crowplexus.hscript.Parser","parseMetaArgs",0x9e90aa8b,"crowplexus.hscript.Parser.parseMetaArgs","crowplexus/hscript/Parser.hx",549,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_573_mapCompr,"crowplexus.hscript.Parser","mapCompr",0xf5ff4f91,"crowplexus.hscript.Parser.mapCompr","crowplexus/hscript/Parser.hx",573,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_595_makeUnop,"crowplexus.hscript.Parser","makeUnop",0x78a77012,"crowplexus.hscript.Parser.makeUnop","crowplexus/hscript/Parser.hx",595,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_605_makeBinop,"crowplexus.hscript.Parser","makeBinop",0x25eec650,"crowplexus.hscript.Parser.makeBinop","crowplexus/hscript/Parser.hx",605,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_619_parseStructure,"crowplexus.hscript.Parser","parseStructure",0xac96c44a,"crowplexus.hscript.Parser.parseStructure","crowplexus/hscript/Parser.hx",619,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_957_parseExprNext,"crowplexus.hscript.Parser","parseExprNext",0x24054c91,"crowplexus.hscript.Parser.parseExprNext","crowplexus/hscript/Parser.hx",957,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1006_parseFunctionArgs,"crowplexus.hscript.Parser","parseFunctionArgs",0x1fa248de,"crowplexus.hscript.Parser.parseFunctionArgs","crowplexus/hscript/Parser.hx",1006,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1050_parseFunctionDecl,"crowplexus.hscript.Parser","parseFunctionDecl",0x21940beb,"crowplexus.hscript.Parser.parseFunctionDecl","crowplexus/hscript/Parser.hx",1050,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1064_parsePath,"crowplexus.hscript.Parser","parsePath",0x714e6cee,"crowplexus.hscript.Parser.parsePath","crowplexus/hscript/Parser.hx",1064,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1077_parseType,"crowplexus.hscript.Parser","parseType",0x74057a03,"crowplexus.hscript.Parser.parseType","crowplexus/hscript/Parser.hx",1077,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1127_parseType,"crowplexus.hscript.Parser","parseType",0x74057a03,"crowplexus.hscript.Parser.parseType","crowplexus/hscript/Parser.hx",1127,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1224_parseTypeNext,"crowplexus.hscript.Parser","parseTypeNext",0x2b59e896,"crowplexus.hscript.Parser.parseTypeNext","crowplexus/hscript/Parser.hx",1224,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1250_parseExprList,"crowplexus.hscript.Parser","parseExprList",0x22b5e3fc,"crowplexus.hscript.Parser.parseExprList","crowplexus/hscript/Parser.hx",1250,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1273_parseModule,"crowplexus.hscript.Parser","parseModule",0x0576e035,"crowplexus.hscript.Parser.parseModule","crowplexus/hscript/Parser.hx",1273,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1290_parseMetadata,"crowplexus.hscript.Parser","parseMetadata",0xb5a64738,"crowplexus.hscript.Parser.parseMetadata","crowplexus/hscript/Parser.hx",1290,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1305_parseParams,"crowplexus.hscript.Parser","parseParams",0x321ea6cf,"crowplexus.hscript.Parser.parseParams","crowplexus/hscript/Parser.hx",1305,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1311_parseModuleDecl,"crowplexus.hscript.Parser","parseModuleDecl",0x6be31b3f,"crowplexus.hscript.Parser.parseModuleDecl","crowplexus/hscript/Parser.hx",1311,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1405_parseField,"crowplexus.hscript.Parser","parseField",0xf68d6d51,"crowplexus.hscript.Parser.parseField","crowplexus/hscript/Parser.hx",1405,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1480_readChar,"crowplexus.hscript.Parser","readChar",0x9e16e496,"crowplexus.hscript.Parser.readChar","crowplexus/hscript/Parser.hx",1480,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1483_readString,"crowplexus.hscript.Parser","readString",0xd6c49e91,"crowplexus.hscript.Parser.readString","crowplexus/hscript/Parser.hx",1483,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1554_token,"crowplexus.hscript.Parser","token",0xf3b0456f,"crowplexus.hscript.Parser.token","crowplexus/hscript/Parser.hx",1554,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1568__token,"crowplexus.hscript.Parser","_token",0xc4b82f04,"crowplexus.hscript.Parser._token","crowplexus/hscript/Parser.hx",1568,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1855_preprocValue,"crowplexus.hscript.Parser","preprocValue",0x990303c2,"crowplexus.hscript.Parser.preprocValue","crowplexus/hscript/Parser.hx",1855,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1860_parsePreproCond,"crowplexus.hscript.Parser","parsePreproCond",0xb6623ef5,"crowplexus.hscript.Parser.parsePreproCond","crowplexus/hscript/Parser.hx",1860,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1876_evalPreproCond,"crowplexus.hscript.Parser","evalPreproCond",0xd1786472,"crowplexus.hscript.Parser.evalPreproCond","crowplexus/hscript/Parser.hx",1876,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1894_preprocess,"crowplexus.hscript.Parser","preprocess",0x5e5f6e76,"crowplexus.hscript.Parser.preprocess","crowplexus/hscript/Parser.hx",1894,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1926_skipTokens,"crowplexus.hscript.Parser","skipTokens",0xc6039d03,"crowplexus.hscript.Parser.skipTokens","crowplexus/hscript/Parser.hx",1926,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1941_tokenComment,"crowplexus.hscript.Parser","tokenComment",0x96b378b0,"crowplexus.hscript.Parser.tokenComment","crowplexus/hscript/Parser.hx",1941,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1986_constString,"crowplexus.hscript.Parser","constString",0x7297418a,"crowplexus.hscript.Parser.constString","crowplexus/hscript/Parser.hx",1986,0x2e3b7998)
HX_LOCAL_STACK_FRAME(_hx_pos_33ecaaab98cb6dc7_1997_tokenString,"crowplexus.hscript.Parser","tokenString",0x6e451fa0,"crowplexus.hscript.Parser.tokenString","crowplexus/hscript/Parser.hx",1997,0x2e3b7998)
namespace crowplexus{
namespace hscript{

void Parser_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_65_new)
HXLINE( 110)		this->uid = 0;
HXLINE(  81)		this->preprocesorValues =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 131)		this->line = 1;
HXLINE( 132)		this->opChars = HX_("+*/-=!><&|^%~",e2,ec,c4,dc);
HXLINE( 133)		this->identChars = HX_("ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789_",e0,b5,3b,15);
HXLINE( 134)		::Array< ::Dynamic> priorities = ::Array_obj< ::Dynamic>::__new(11)->init(0,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_3,1))->init(1,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_4,2))->init(2,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_5,2))->init(3,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_6,3))->init(4,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_7,3))->init(5,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_8,6))->init(6,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_9,1))->init(7,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_10,1))->init(8,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_11,1))->init(9,::Array_obj< ::String >::__new(14)->init(0,HX_("=",3d,00,00,00))->init(1,HX_("+=",b2,25,00,00))->init(2,HX_("-=",70,27,00,00))->init(3,HX_("*=",d3,24,00,00))->init(4,HX_("/=",2e,29,00,00))->init(5,HX_("%=",78,20,00,00))->init(6,(HX_("??",20,37,00,00) + HX_("=",3d,00,00,00)))->init(7,HX_("<<=",bd,bb,2d,00))->init(8,HX_(">>=",fd,41,2f,00))->init(9,HX_(">>>=",7f,7c,2a,29))->init(10,HX_("|=",41,6c,00,00))->init(11,HX_("&=",57,21,00,00))->init(12,HX_("^=",1f,52,00,00))->init(13,HX_("=>",61,35,00,00)))->init(10,::Array_obj< ::String >::fromData( _hx_array_data_14ff4664_12,1));
HXLINE( 150)		this->opPriority =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 151)		this->opRightAssoc =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 156)		{
HXLINE( 156)			int _g = 0;
HXDLIN( 156)			int _g1 = priorities->length;
HXDLIN( 156)			while((_g < _g1)){
HXLINE( 156)				_g = (_g + 1);
HXDLIN( 156)				int i = (_g - 1);
HXLINE( 157)				{
HXLINE( 157)					int _g2 = 0;
HXDLIN( 157)					::Array< ::String > _g3 = priorities->__get(i).StaticCast< ::Array< ::String > >();
HXDLIN( 157)					while((_g2 < _g3->length)){
HXLINE( 157)						::String x = _g3->__get(_g2);
HXDLIN( 157)						_g2 = (_g2 + 1);
HXLINE( 158)						this->opPriority->set(x,i);
HXLINE( 159)						if ((i == 9)) {
HXLINE( 160)							this->opRightAssoc->set(x,true);
            						}
            					}
            				}
            			}
            		}
HXLINE( 162)		{
HXLINE( 163)			this->opPriority->set(HX_("!",21,00,00,00),-2);
HXDLIN( 163)			this->opPriority->set(HX_("++",a0,25,00,00),-1);
HXDLIN( 163)			this->opPriority->set(HX_("--",60,27,00,00),-1);
HXDLIN( 163)			this->opPriority->set(HX_("~",7e,00,00,00),-2);
            		}
            	}

Dynamic Parser_obj::__CreateEmpty() { return new Parser_obj; }

void *Parser_obj::_hx_vtable = 0;

Dynamic Parser_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Parser_obj > _hx_result = new Parser_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Parser_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x25dae6ce;
}

void Parser_obj::error( ::crowplexus::hscript::ErrorDef err,int pmin,int pmax){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_167_error)
HXDLIN( 167)		if (!(this->resumeErrors)) {
HXLINE( 169)			HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,pmin,pmax,this->origin,this->line));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,error,(void))

void Parser_obj::invalidChar(int c){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_176_invalidChar)
HXDLIN( 176)		if (!(this->resumeErrors)) {
HXDLIN( 176)			HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidChar(c),(this->readPos - 1),(this->readPos - 1),this->origin,this->line));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,invalidChar,(void))

void Parser_obj::initParser(::String origin){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_179_initParser)
HXLINE( 181)		this->preprocStack = ::Array_obj< bool >::__new(0);
HXLINE( 183)		this->origin = origin;
HXLINE( 184)		this->readPos = 0;
HXLINE( 185)		this->tokenMin = (this->oldTokenMin = 0);
HXLINE( 186)		this->tokenMax = (this->oldTokenMax = 0);
HXLINE( 187)		this->tokens =  ::haxe::ds::List_obj::__alloc( HX_CTX );
HXLINE( 193)		this->_hx_char = -1;
HXLINE( 194)		this->ops = ::Array_obj< bool >::__new();
HXLINE( 195)		this->idents = ::Array_obj< bool >::__new();
HXLINE( 196)		this->uid = 0;
HXLINE( 197)		{
HXLINE( 197)			int _g = 0;
HXDLIN( 197)			int _g1 = this->opChars.length;
HXDLIN( 197)			while((_g < _g1)){
HXLINE( 197)				_g = (_g + 1);
HXLINE( 198)				this->ops[( (int)(this->opChars.charCodeAt((_g - 1))) )] = true;
            			}
            		}
HXLINE( 199)		{
HXLINE( 199)			int _g2 = 0;
HXDLIN( 199)			int _g3 = this->identChars.length;
HXDLIN( 199)			while((_g2 < _g3)){
HXLINE( 199)				_g2 = (_g2 + 1);
HXLINE( 200)				this->idents[( (int)(this->identChars.charCodeAt((_g2 - 1))) )] = true;
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,initParser,(void))

 ::crowplexus::hscript::Expr Parser_obj::parseString(::String s,::String __o_origin){
            		::String origin = __o_origin;
            		if (::hx::IsNull(__o_origin)) origin = HX_("hscript",73,8c,18,2c);
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_203_parseString)
HXLINE( 204)		this->initParser(origin);
HXLINE( 205)		this->input = s;
HXLINE( 206)		this->readPos = 0;
HXLINE( 207)		::Array< ::Dynamic> a = ::Array_obj< ::Dynamic>::__new();
HXLINE( 208)		while(true){
HXLINE( 209)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 210)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() )) {
HXLINE( 211)				goto _hx_goto_18;
            			}
HXLINE( 212)			{
HXLINE( 212)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 212)				this->tokenMin = this->oldTokenMin;
HXDLIN( 212)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 213)			this->parseFullExpr(a);
            		}
            		_hx_goto_18:;
HXLINE( 215)		if ((a->length == 1)) {
HXLINE( 215)			return a->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
            		}
            		else {
HXLINE( 215)			 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EBlock(a);
HXDLIN( 215)			 ::Dynamic pmax = null();
HXDLIN( 215)			if (::hx::IsNull( e )) {
HXLINE( 215)				return null();
            			}
            			else {
HXLINE( 215)				pmax = this->tokenMax;
HXDLIN( 215)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,0,( (int)(pmax) ),this->origin,this->line);
            			}
            		}
HXDLIN( 215)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,parseString,return )

 ::Dynamic Parser_obj::unexpected( ::crowplexus::hscript::Token tk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_218_unexpected)
HXLINE( 219)		{
HXLINE( 219)			 ::crowplexus::hscript::ErrorDef err = ::crowplexus::hscript::ErrorDef_obj::EUnexpected(this->tokenString(tk));
HXDLIN( 219)			if (!(this->resumeErrors)) {
HXLINE( 219)				HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,this->tokenMin,this->tokenMax,this->origin,this->line));
            			}
            		}
HXLINE( 220)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,unexpected,return )

void Parser_obj::push( ::crowplexus::hscript::Token tk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_223_push)
HXLINE( 225)		this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXLINE( 226)		this->tokenMin = this->oldTokenMin;
HXLINE( 227)		this->tokenMax = this->oldTokenMax;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,push,(void))

void Parser_obj::ensure( ::crowplexus::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_233_ensure)
HXLINE( 234)		 ::crowplexus::hscript::Token t = this->token();
HXLINE( 235)		if (::hx::IsPointerNotEq( t,tk )) {
HXLINE( 236)			this->unexpected(t);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,ensure,(void))

void Parser_obj::ensureToken( ::crowplexus::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_239_ensureToken)
HXLINE( 240)		 ::crowplexus::hscript::Token t = this->token();
HXLINE( 241)		if (!(__hxcpp_enum_eq(t,tk))) {
HXLINE( 242)			this->unexpected(t);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,ensureToken,(void))

bool Parser_obj::maybe( ::crowplexus::hscript::Token tk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_245_maybe)
HXLINE( 246)		 ::crowplexus::hscript::Token t = this->token();
HXLINE( 247)		if (__hxcpp_enum_eq(t,tk)) {
HXLINE( 248)			return true;
            		}
HXLINE( 249)		{
HXLINE( 249)			this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN( 249)			this->tokenMin = this->oldTokenMin;
HXDLIN( 249)			this->tokenMax = this->oldTokenMax;
            		}
HXLINE( 250)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,maybe,return )

::String Parser_obj::getIdent(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_255_getIdent)
HXDLIN( 255)		return this->extractIdent(this->token());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,getIdent,return )

::String Parser_obj::extractIdent( ::crowplexus::hscript::Token tk){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_259_extractIdent)
HXDLIN( 259)		if ((tk->_hx_getIndex() == 2)) {
HXLINE( 261)			return tk->_hx_getString(0);
            		}
            		else {
HXLINE( 263)			this->unexpected(tk);
HXLINE( 264)			return null();
            		}
HXLINE( 259)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,extractIdent,return )

 ::crowplexus::hscript::ExprDef Parser_obj::expr( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_270_expr)
HXDLIN( 270)		return e->e;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,expr,return )

int Parser_obj::pmin( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_278_pmin)
HXDLIN( 278)		if (::hx::IsNull( e )) {
HXDLIN( 278)			return 0;
            		}
            		else {
HXDLIN( 278)			return e->pmin;
            		}
HXDLIN( 278)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,pmin,return )

int Parser_obj::pmax( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_286_pmax)
HXDLIN( 286)		if (::hx::IsNull( e )) {
HXDLIN( 286)			return 0;
            		}
            		else {
HXDLIN( 286)			return e->pmax;
            		}
HXDLIN( 286)		return 0;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,pmax,return )

 ::crowplexus::hscript::Expr Parser_obj::mk( ::crowplexus::hscript::ExprDef e, ::Dynamic pmin, ::Dynamic pmax){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_292_mk)
HXLINE( 294)		if (::hx::IsNull( e )) {
HXLINE( 295)			return null();
            		}
HXLINE( 296)		if (::hx::IsNull( pmin )) {
HXLINE( 297)			pmin = this->tokenMin;
            		}
HXLINE( 298)		if (::hx::IsNull( pmax )) {
HXLINE( 299)			pmax = this->tokenMax;
            		}
HXLINE( 300)		return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,mk,return )

bool Parser_obj::isBlock( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_312_isBlock)
HXLINE( 313)		if (::hx::IsNull( e )) {
HXLINE( 314)			return false;
            		}
HXLINE( 315)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 315)		switch((int)(_g->_hx_getIndex())){
            			case (int)0: {
HXLINE( 328)				return _g->_hx_getBool(0);
            			}
            			break;
            			case (int)4: {
HXLINE( 318)				 ::crowplexus::hscript::CType _g1 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >();
HXDLIN( 318)				 ::crowplexus::hscript::Expr _g2 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 318)				if (::hx::IsNotNull( _g2 )) {
HXLINE( 318)					return this->isBlock(_g2);
            				}
            				else {
HXLINE( 318)					if (::hx::IsNotNull( _g1 )) {
HXLINE( 318)						if (::hx::IsNull( _g1 )) {
HXLINE( 318)							return false;
            						}
            						else {
HXLINE( 318)							if ((_g1->_hx_getIndex() == 2)) {
HXLINE( 318)								return true;
            							}
            							else {
HXLINE( 318)								return false;
            							}
            						}
            					}
            					else {
HXLINE( 318)						return false;
            					}
            				}
            			}
            			break;
            			case (int)6: {
HXLINE( 316)				return true;
            			}
            			break;
            			case (int)8: {
HXLINE( 320)				return this->isBlock(_g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)9: {
HXLINE( 321)				if (!(_g->_hx_getBool(1))) {
HXLINE( 321)					return this->isBlock(_g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            				}
            				else {
HXLINE( 321)					return false;
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 319)				 ::crowplexus::hscript::Expr _g3 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 319)				if (::hx::IsNotNull( _g3 )) {
HXLINE( 319)					return this->isBlock(_g3);
            				}
            				else {
HXLINE( 319)					return this->isBlock(_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 322)				return this->isBlock(_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)13: {
HXLINE( 324)				return this->isBlock(_g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)16: {
HXLINE( 317)				return this->isBlock(_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)17: {
HXLINE( 325)				 ::crowplexus::hscript::Expr _g4 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 325)				if (::hx::IsNotNull( _g4 )) {
HXLINE( 325)					return this->isBlock(_g4);
            				}
            				else {
HXLINE( 325)					return false;
            				}
            			}
            			break;
            			case (int)22: {
HXLINE( 326)				return this->isBlock(_g->_hx_getObject(3).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)23: {
HXLINE( 316)				return true;
            			}
            			break;
            			case (int)25: {
HXLINE( 316)				return true;
            			}
            			break;
            			case (int)26: {
HXLINE( 323)				return this->isBlock(_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)27: {
HXLINE( 327)				return this->isBlock(_g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)29: {
HXLINE( 316)				return true;
            			}
            			break;
            			default:{
HXLINE( 329)				return false;
            			}
            		}
HXLINE( 315)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,isBlock,return )

void Parser_obj::parseFullExpr(::Array< ::Dynamic> exprs){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_333_parseFullExpr)
HXLINE( 334)		 ::crowplexus::hscript::Expr e = this->parseExpr();
HXLINE( 335)		bool _hx_tmp;
HXDLIN( 335)		if ((e->e->_hx_getIndex() == 0)) {
HXLINE( 335)			_hx_tmp = true;
            		}
            		else {
HXLINE( 335)			_hx_tmp = false;
            		}
HXDLIN( 335)		if (!(_hx_tmp)) {
HXLINE( 336)			exprs->push(e);
            		}
HXLINE( 338)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 340)		while(true){
HXLINE( 340)			bool _hx_tmp1;
HXDLIN( 340)			bool _hx_tmp2;
HXDLIN( 340)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TComma_dyn() )) {
HXLINE( 340)				_hx_tmp2 = ::hx::IsNotNull( e );
            			}
            			else {
HXLINE( 340)				_hx_tmp2 = false;
            			}
HXDLIN( 340)			if (_hx_tmp2) {
HXLINE( 340)				if ((e->e->_hx_getIndex() == 4)) {
HXLINE( 340)					_hx_tmp1 = true;
            				}
            				else {
HXLINE( 340)					_hx_tmp1 = false;
            				}
            			}
            			else {
HXLINE( 340)				_hx_tmp1 = false;
            			}
HXDLIN( 340)			if (!(_hx_tmp1)) {
HXLINE( 340)				goto _hx_goto_32;
            			}
HXLINE( 341)			e = this->parseStructure(HX_("var",e7,de,59,00));
HXLINE( 342)			bool _hx_tmp3;
HXDLIN( 342)			if ((e->e->_hx_getIndex() == 0)) {
HXLINE( 342)				_hx_tmp3 = true;
            			}
            			else {
HXLINE( 342)				_hx_tmp3 = false;
            			}
HXDLIN( 342)			if (!(_hx_tmp3)) {
HXLINE( 343)				exprs->push(e);
            			}
HXLINE( 344)			tk = this->token();
            		}
            		_hx_goto_32:;
HXLINE( 347)		bool _hx_tmp4;
HXDLIN( 347)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 347)			_hx_tmp4 = ::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() );
            		}
            		else {
HXLINE( 347)			_hx_tmp4 = false;
            		}
HXDLIN( 347)		if (_hx_tmp4) {
HXLINE( 348)			if (this->isBlock(e)) {
HXLINE( 349)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 349)				this->tokenMin = this->oldTokenMin;
HXDLIN( 349)				this->tokenMax = this->oldTokenMax;
            			}
            			else {
HXLINE( 351)				this->unexpected(tk);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseFullExpr,(void))

 ::crowplexus::hscript::Expr Parser_obj::parseObject( ::Dynamic p1){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_355_parseObject)
HXLINE( 357)		::Array< ::Dynamic> fl = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 358)		while(true){
HXLINE( 359)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 360)			::String id = null();
HXLINE( 361)			switch((int)(tk->_hx_getIndex())){
            				case (int)1: {
HXLINE( 364)					 ::crowplexus::hscript::Const _g = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN( 364)					{
HXLINE( 365)						if (!(this->allowJSON)) {
HXLINE( 366)							this->unexpected(tk);
            						}
HXLINE( 367)						if ((_g->_hx_getIndex() == 2)) {
HXLINE( 368)							id = _g->_hx_getString(0);
            						}
            						else {
HXLINE( 369)							this->unexpected(tk);
            						}
            					}
            				}
            				break;
            				case (int)2: {
HXLINE( 363)					id = tk->_hx_getString(0);
            				}
            				break;
            				case (int)7: {
HXLINE( 372)					goto _hx_goto_34;
            				}
            				break;
            				default:{
HXLINE( 374)					this->unexpected(tk);
HXLINE( 375)					goto _hx_goto_34;
            				}
            			}
HXLINE( 377)			{
HXLINE( 377)				 ::crowplexus::hscript::Token t = this->token();
HXDLIN( 377)				if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 377)					this->unexpected(t);
            				}
            			}
HXLINE( 378)			fl->push( ::crowplexus::hscript::ObjectDecl_obj::__alloc( HX_CTX ,id,this->parseExpr()));
HXLINE( 379)			tk = this->token();
HXLINE( 380)			switch((int)(tk->_hx_getIndex())){
            				case (int)7: {
HXLINE( 382)					goto _hx_goto_34;
            				}
            				break;
            				case (int)9: {
            				}
            				break;
            				default:{
HXLINE( 385)					this->unexpected(tk);
            				}
            			}
            		}
            		_hx_goto_34:;
HXLINE( 388)		 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EObject(fl);
HXDLIN( 388)		 ::Dynamic pmin = p1;
HXDLIN( 388)		 ::Dynamic pmax = null();
HXDLIN( 388)		 ::crowplexus::hscript::Expr _hx_tmp;
HXDLIN( 388)		if (::hx::IsNull( e )) {
HXLINE( 388)			_hx_tmp = null();
            		}
            		else {
HXLINE( 388)			if (::hx::IsNull( p1 )) {
HXLINE( 388)				pmin = this->tokenMin;
            			}
HXDLIN( 388)			pmax = this->tokenMax;
HXDLIN( 388)			_hx_tmp =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            		}
HXDLIN( 388)		return this->parseExprNext(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseObject,return )

 ::crowplexus::hscript::Expr Parser_obj::parseExpr(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_391_parseExpr)
HXLINE( 392)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 394)		int p1 = this->tokenMin;
HXLINE( 396)		switch((int)(tk->_hx_getIndex())){
            			case (int)1: {
HXLINE( 403)				 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EConst(tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >());
HXDLIN( 403)				 ::Dynamic pmin = null();
HXDLIN( 403)				 ::Dynamic pmax = null();
HXDLIN( 403)				 ::crowplexus::hscript::Expr _hx_tmp;
HXDLIN( 403)				if (::hx::IsNull( e )) {
HXLINE( 403)					_hx_tmp = null();
            				}
            				else {
HXLINE( 403)					pmin = this->tokenMin;
HXDLIN( 403)					pmax = this->tokenMax;
HXDLIN( 403)					_hx_tmp =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            				}
HXDLIN( 403)				return this->parseExprNext(_hx_tmp);
            			}
            			break;
            			case (int)2: {
HXLINE( 397)				::String _g = tk->_hx_getString(0);
HXLINE( 398)				 ::crowplexus::hscript::Expr e1 = this->parseStructure(_g);
HXLINE( 399)				if (::hx::IsNull( e1 )) {
HXLINE( 400)					 ::crowplexus::hscript::ExprDef e2 = ::crowplexus::hscript::ExprDef_obj::EIdent(_g);
HXDLIN( 400)					 ::Dynamic pmin1 = null();
HXDLIN( 400)					 ::Dynamic pmax1 = null();
HXDLIN( 400)					if (::hx::IsNull( e2 )) {
HXLINE( 400)						e1 = null();
            					}
            					else {
HXLINE( 400)						pmin1 = this->tokenMin;
HXDLIN( 400)						pmax1 = this->tokenMax;
HXDLIN( 400)						e1 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e2,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
            				}
HXLINE( 401)				return this->parseExprNext(e1);
            			}
            			break;
            			case (int)3: {
HXLINE( 480)				::String _g1 = tk->_hx_getString(0);
HXLINE( 481)				if ((_g1 == HX_("-",2d,00,00,00))) {
HXLINE( 482)					int start = this->tokenMin;
HXLINE( 483)					 ::crowplexus::hscript::Expr e3 = this->parseExpr();
HXLINE( 484)					if (::hx::IsNull( e3 )) {
HXLINE( 485)						return this->makeUnop(_g1,e3);
            					}
HXLINE( 486)					 ::crowplexus::hscript::ExprDef _g2 = e3->e;
HXDLIN( 486)					if ((_g2->_hx_getIndex() == 1)) {
HXLINE( 489)						 ::crowplexus::hscript::Const _g3 = _g2->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN( 489)						switch((int)(_g3->_hx_getIndex())){
            							case (int)0: {
HXLINE( 488)								 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EConst(::crowplexus::hscript::Const_obj::CInt(-(_g3->_hx_getInt(0))));
HXDLIN( 488)								 ::Dynamic pmin2 = start;
HXDLIN( 488)								 ::Dynamic pmax2;
HXDLIN( 488)								if (::hx::IsNull( e3 )) {
HXLINE( 488)									pmax2 = 0;
            								}
            								else {
HXLINE( 488)									pmax2 = e3->pmax;
            								}
HXDLIN( 488)								if (::hx::IsNull( e4 )) {
HXLINE( 488)									return null();
            								}
            								else {
HXLINE( 488)									if (::hx::IsNull( pmin2 )) {
HXLINE( 488)										pmin2 = this->tokenMin;
            									}
HXDLIN( 488)									if (::hx::IsNull( pmax2 )) {
HXLINE( 488)										pmax2 = this->tokenMax;
            									}
HXDLIN( 488)									return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            								}
            							}
            							break;
            							case (int)1: {
HXLINE( 490)								 ::crowplexus::hscript::ExprDef e5 = ::crowplexus::hscript::ExprDef_obj::EConst(::crowplexus::hscript::Const_obj::CFloat(-(_g3->_hx_getFloat(0))));
HXDLIN( 490)								 ::Dynamic pmin3 = start;
HXDLIN( 490)								 ::Dynamic pmax3;
HXDLIN( 490)								if (::hx::IsNull( e3 )) {
HXLINE( 490)									pmax3 = 0;
            								}
            								else {
HXLINE( 490)									pmax3 = e3->pmax;
            								}
HXDLIN( 490)								if (::hx::IsNull( e5 )) {
HXLINE( 490)									return null();
            								}
            								else {
HXLINE( 490)									if (::hx::IsNull( pmin3 )) {
HXLINE( 490)										pmin3 = this->tokenMin;
            									}
HXDLIN( 490)									if (::hx::IsNull( pmax3 )) {
HXLINE( 490)										pmax3 = this->tokenMax;
            									}
HXDLIN( 490)									return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e5,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            								}
            							}
            							break;
            							default:{
HXLINE( 492)								return this->makeUnop(_g1,e3);
            							}
            						}
            					}
            					else {
HXLINE( 492)						return this->makeUnop(_g1,e3);
            					}
            				}
HXLINE( 495)				if (::hx::IsLess( this->opPriority->get(_g1),0 )) {
HXLINE( 496)					return this->makeUnop(_g1,this->parseExpr());
            				}
HXLINE( 497)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            			break;
            			case (int)4: {
HXLINE( 405)				tk = this->token();
HXLINE( 406)				if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 407)					{
HXLINE( 407)						 ::crowplexus::hscript::Token t = this->token();
HXDLIN( 407)						if (!(__hxcpp_enum_eq(t,::crowplexus::hscript::Token_obj::TOp(HX_("->",71,27,00,00))))) {
HXLINE( 407)							this->unexpected(t);
            						}
            					}
HXLINE( 409)					 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EReturn(this->parseExpr());
HXDLIN( 409)					 ::Dynamic pmin4 = p1;
HXDLIN( 409)					 ::Dynamic pmax4 = null();
HXDLIN( 409)					 ::crowplexus::hscript::Expr e7;
HXDLIN( 409)					if (::hx::IsNull( e6 )) {
HXLINE( 409)						e7 = null();
            					}
            					else {
HXLINE( 409)						if (::hx::IsNull( pmin4 )) {
HXLINE( 409)							pmin4 = this->tokenMin;
            						}
HXDLIN( 409)						pmax4 = this->tokenMax;
HXDLIN( 409)						e7 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            					}
HXDLIN( 409)					 ::crowplexus::hscript::ExprDef e8 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(0),e7,null(),null());
HXDLIN( 409)					 ::Dynamic pmin5 = p1;
HXDLIN( 409)					 ::Dynamic pmax5 = null();
HXDLIN( 409)					if (::hx::IsNull( e8 )) {
HXLINE( 409)						return null();
            					}
            					else {
HXLINE( 409)						if (::hx::IsNull( pmin5 )) {
HXLINE( 409)							pmin5 = this->tokenMin;
            						}
HXDLIN( 409)						pmax5 = this->tokenMax;
HXDLIN( 409)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e8,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            					}
            				}
HXLINE( 411)				{
HXLINE( 411)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 411)					this->tokenMin = this->oldTokenMin;
HXDLIN( 411)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 412)				 ::crowplexus::hscript::Expr e9 = this->parseExpr();
HXLINE( 413)				tk = this->token();
HXLINE( 414)				switch((int)(tk->_hx_getIndex())){
            					case (int)5: {
HXLINE( 416)						 ::crowplexus::hscript::ExprDef e10 = ::crowplexus::hscript::ExprDef_obj::EParent(e9);
HXDLIN( 416)						 ::Dynamic pmin6 = p1;
HXDLIN( 416)						 ::Dynamic pmax6 = this->tokenMax;
HXDLIN( 416)						 ::crowplexus::hscript::Expr _hx_tmp1;
HXDLIN( 416)						if (::hx::IsNull( e10 )) {
HXLINE( 416)							_hx_tmp1 = null();
            						}
            						else {
HXLINE( 416)							if (::hx::IsNull( pmin6 )) {
HXLINE( 416)								pmin6 = this->tokenMin;
            							}
HXDLIN( 416)							if (::hx::IsNull( pmax6 )) {
HXLINE( 416)								pmax6 = this->tokenMax;
            							}
HXDLIN( 416)							_hx_tmp1 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e10,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            						}
HXDLIN( 416)						return this->parseExprNext(_hx_tmp1);
            					}
            					break;
            					case (int)9: {
HXLINE( 431)						 ::crowplexus::hscript::ExprDef _g4 = e9->e;
HXDLIN( 431)						if ((_g4->_hx_getIndex() == 2)) {
HXLINE( 432)							int _hx_tmp2;
HXDLIN( 432)							if (::hx::IsNull( e9 )) {
HXLINE( 432)								_hx_tmp2 = 0;
            							}
            							else {
HXLINE( 432)								_hx_tmp2 = e9->pmin;
            							}
HXDLIN( 432)							return this->parseLambda(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            								->setFixed(0,HX_("name",4b,72,ff,48),_g4->_hx_getString(0)))),_hx_tmp2);
            						}
            					}
            					break;
            					case (int)14: {
HXLINE( 418)						 ::crowplexus::hscript::CType t1 = this->parseType();
HXLINE( 419)						tk = this->token();
HXLINE( 420)						switch((int)(tk->_hx_getIndex())){
            							case (int)5: {
HXLINE( 422)								 ::crowplexus::hscript::ExprDef e11 = ::crowplexus::hscript::ExprDef_obj::ECheckType(e9,t1);
HXDLIN( 422)								 ::Dynamic pmin7 = p1;
HXDLIN( 422)								 ::Dynamic pmax7 = this->tokenMax;
HXDLIN( 422)								 ::crowplexus::hscript::Expr _hx_tmp3;
HXDLIN( 422)								if (::hx::IsNull( e11 )) {
HXLINE( 422)									_hx_tmp3 = null();
            								}
            								else {
HXLINE( 422)									if (::hx::IsNull( pmin7 )) {
HXLINE( 422)										pmin7 = this->tokenMin;
            									}
HXDLIN( 422)									if (::hx::IsNull( pmax7 )) {
HXLINE( 422)										pmax7 = this->tokenMax;
            									}
HXDLIN( 422)									_hx_tmp3 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e11,( (int)(pmin7) ),( (int)(pmax7) ),this->origin,this->line);
            								}
HXDLIN( 422)								return this->parseExprNext(_hx_tmp3);
            							}
            							break;
            							case (int)9: {
HXLINE( 424)								 ::crowplexus::hscript::ExprDef _g5 = e9->e;
HXDLIN( 424)								if ((_g5->_hx_getIndex() == 2)) {
HXLINE( 425)									int _hx_tmp4;
HXDLIN( 425)									if (::hx::IsNull( e9 )) {
HXLINE( 425)										_hx_tmp4 = 0;
            									}
            									else {
HXLINE( 425)										_hx_tmp4 = e9->pmin;
            									}
HXDLIN( 425)									return this->parseLambda(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            										->setFixed(0,HX_("t",74,00,00,00),t1)
            										->setFixed(1,HX_("name",4b,72,ff,48),_g5->_hx_getString(0)))),_hx_tmp4);
            								}
            							}
            							break;
            							default:{
            							}
            						}
            					}
            					break;
            					default:{
            					}
            				}
HXLINE( 437)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            			break;
            			case (int)6: {
HXLINE( 439)				tk = this->token();
HXLINE( 440)				switch((int)(tk->_hx_getIndex())){
            					case (int)1: {
HXLINE( 453)						if (this->allowJSON) {
HXLINE( 454)							if ((tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >()->_hx_getIndex() == 2)) {
HXLINE( 456)								 ::crowplexus::hscript::Token tk2 = this->token();
HXLINE( 457)								{
HXLINE( 457)									this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk2,this->tokenMin,this->tokenMax));
HXDLIN( 457)									this->tokenMin = this->oldTokenMin;
HXDLIN( 457)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 458)								{
HXLINE( 458)									this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 458)									this->tokenMin = this->oldTokenMin;
HXDLIN( 458)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 459)								if ((tk2->_hx_getIndex() == 14)) {
HXLINE( 461)									return this->parseExprNext(this->parseObject(p1));
            								}
            							}
            							else {
HXLINE( 465)								this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 465)								this->tokenMin = this->oldTokenMin;
HXDLIN( 465)								this->tokenMax = this->oldTokenMax;
            							}
            						}
            						else {
HXLINE( 467)							this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 467)							this->tokenMin = this->oldTokenMin;
HXDLIN( 467)							this->tokenMax = this->oldTokenMax;
            						}
            					}
            					break;
            					case (int)2: {
HXLINE( 444)						 ::crowplexus::hscript::Token tk21 = this->token();
HXLINE( 445)						{
HXLINE( 445)							this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk21,this->tokenMin,this->tokenMax));
HXDLIN( 445)							this->tokenMin = this->oldTokenMin;
HXDLIN( 445)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE( 446)						{
HXLINE( 446)							this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 446)							this->tokenMin = this->oldTokenMin;
HXDLIN( 446)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE( 447)						if ((tk21->_hx_getIndex() == 14)) {
HXLINE( 449)							return this->parseExprNext(this->parseObject(p1));
            						}
            					}
            					break;
            					case (int)7: {
HXLINE( 442)						 ::crowplexus::hscript::ExprDef e12 = ::crowplexus::hscript::ExprDef_obj::EObject(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 442)						 ::Dynamic pmin8 = p1;
HXDLIN( 442)						 ::Dynamic pmax8 = null();
HXDLIN( 442)						 ::crowplexus::hscript::Expr _hx_tmp5;
HXDLIN( 442)						if (::hx::IsNull( e12 )) {
HXLINE( 442)							_hx_tmp5 = null();
            						}
            						else {
HXLINE( 442)							if (::hx::IsNull( pmin8 )) {
HXLINE( 442)								pmin8 = this->tokenMin;
            							}
HXDLIN( 442)							pmax8 = this->tokenMax;
HXDLIN( 442)							_hx_tmp5 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e12,( (int)(pmin8) ),( (int)(pmax8) ),this->origin,this->line);
            						}
HXDLIN( 442)						return this->parseExprNext(_hx_tmp5);
            					}
            					break;
            					default:{
HXLINE( 469)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 469)						this->tokenMin = this->oldTokenMin;
HXDLIN( 469)						this->tokenMax = this->oldTokenMax;
            					}
            				}
HXLINE( 471)				::Array< ::Dynamic> a = ::Array_obj< ::Dynamic>::__new();
HXLINE( 472)				while(true){
HXLINE( 473)					this->parseFullExpr(a);
HXLINE( 474)					tk = this->token();
HXLINE( 475)					bool _hx_tmp6;
HXDLIN( 475)					if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TBrClose_dyn() )) {
HXLINE( 475)						if (this->resumeErrors) {
HXLINE( 475)							_hx_tmp6 = ::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() );
            						}
            						else {
HXLINE( 475)							_hx_tmp6 = false;
            						}
            					}
            					else {
HXLINE( 475)						_hx_tmp6 = true;
            					}
HXDLIN( 475)					if (_hx_tmp6) {
HXLINE( 476)						goto _hx_goto_36;
            					}
HXLINE( 477)					{
HXLINE( 477)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 477)						this->tokenMin = this->oldTokenMin;
HXDLIN( 477)						this->tokenMax = this->oldTokenMax;
            					}
            				}
            				_hx_goto_36:;
HXLINE( 479)				 ::crowplexus::hscript::ExprDef e13 = ::crowplexus::hscript::ExprDef_obj::EBlock(a);
HXDLIN( 479)				 ::Dynamic pmin9 = p1;
HXDLIN( 479)				 ::Dynamic pmax9 = null();
HXDLIN( 479)				if (::hx::IsNull( e13 )) {
HXLINE( 479)					return null();
            				}
            				else {
HXLINE( 479)					if (::hx::IsNull( pmin9 )) {
HXLINE( 479)						pmin9 = this->tokenMin;
            					}
HXDLIN( 479)					pmax9 = this->tokenMax;
HXDLIN( 479)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e13,( (int)(pmin9) ),( (int)(pmax9) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 499)				::Array< ::Dynamic> a1 = ::Array_obj< ::Dynamic>::__new();
HXLINE( 500)				tk = this->token();
HXLINE( 501)				while(true){
HXLINE( 501)					bool _hx_tmp7;
HXDLIN( 501)					if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TBkClose_dyn() )) {
HXLINE( 501)						if (this->resumeErrors) {
HXLINE( 501)							_hx_tmp7 = ::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() );
            						}
            						else {
HXLINE( 501)							_hx_tmp7 = true;
            						}
            					}
            					else {
HXLINE( 501)						_hx_tmp7 = false;
            					}
HXDLIN( 501)					if (!(_hx_tmp7)) {
HXLINE( 501)						goto _hx_goto_37;
            					}
HXLINE( 502)					{
HXLINE( 502)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 502)						this->tokenMin = this->oldTokenMin;
HXDLIN( 502)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE( 503)					a1->push(this->parseExpr());
HXLINE( 504)					tk = this->token();
HXLINE( 505)					if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TComma_dyn() )) {
HXLINE( 506)						tk = this->token();
            					}
            				}
            				_hx_goto_37:;
HXLINE( 508)				bool _hx_tmp8;
HXDLIN( 508)				if ((a1->length == 1)) {
HXLINE( 508)					_hx_tmp8 = ::hx::IsNotNull( a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >() );
            				}
            				else {
HXLINE( 508)					_hx_tmp8 = false;
            				}
HXDLIN( 508)				if (_hx_tmp8) {
HXLINE( 509)					switch((int)(a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >()->e->_hx_getIndex())){
            						case (int)12: {
HXLINE( 511)							::String tmp = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 513)							 ::crowplexus::hscript::ExprDef e14 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 513)							 ::Dynamic pmin10 = p1;
HXDLIN( 513)							 ::Dynamic pmax10 = null();
HXDLIN( 513)							 ::crowplexus::hscript::Expr e15;
HXDLIN( 513)							if (::hx::IsNull( e14 )) {
HXLINE( 513)								e15 = null();
            							}
            							else {
HXLINE( 513)								if (::hx::IsNull( pmin10 )) {
HXLINE( 513)									pmin10 = this->tokenMin;
            								}
HXDLIN( 513)								pmax10 = this->tokenMax;
HXDLIN( 513)								e15 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e14,( (int)(pmin10) ),( (int)(pmax10) ),this->origin,this->line);
            							}
HXDLIN( 513)							 ::crowplexus::hscript::ExprDef e16 = ::crowplexus::hscript::ExprDef_obj::EVar(tmp,null(),e15,null());
HXDLIN( 513)							 ::Dynamic pmin11 = p1;
HXDLIN( 513)							 ::Dynamic pmax11 = null();
HXDLIN( 513)							 ::crowplexus::hscript::Expr e17;
HXDLIN( 513)							if (::hx::IsNull( e16 )) {
HXLINE( 513)								e17 = null();
            							}
            							else {
HXLINE( 513)								if (::hx::IsNull( pmin11 )) {
HXLINE( 513)									pmin11 = this->tokenMin;
            								}
HXDLIN( 513)								pmax11 = this->tokenMax;
HXDLIN( 513)								e17 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e16,( (int)(pmin11) ),( (int)(pmax11) ),this->origin,this->line);
            							}
HXLINE( 514)							 ::crowplexus::hscript::Expr e18 = this->mapCompr(tmp,a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 515)							 ::crowplexus::hscript::ExprDef e19 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 515)							 ::Dynamic pmin12 = p1;
HXDLIN( 515)							 ::Dynamic pmax12 = null();
HXDLIN( 515)							 ::crowplexus::hscript::Expr e20;
HXDLIN( 515)							if (::hx::IsNull( e19 )) {
HXLINE( 515)								e20 = null();
            							}
            							else {
HXLINE( 515)								if (::hx::IsNull( pmin12 )) {
HXLINE( 515)									pmin12 = this->tokenMin;
            								}
HXDLIN( 515)								pmax12 = this->tokenMax;
HXDLIN( 515)								e20 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e19,( (int)(pmin12) ),( (int)(pmax12) ),this->origin,this->line);
            							}
HXLINE( 512)							 ::crowplexus::hscript::ExprDef e21 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e17)->init(1,e18)->init(2,e20));
HXDLIN( 512)							 ::Dynamic pmin13 = p1;
HXDLIN( 512)							 ::Dynamic pmax13 = null();
HXDLIN( 512)							 ::crowplexus::hscript::Expr e22;
HXDLIN( 512)							if (::hx::IsNull( e21 )) {
HXLINE( 512)								e22 = null();
            							}
            							else {
HXLINE( 512)								if (::hx::IsNull( pmin13 )) {
HXLINE( 512)									pmin13 = this->tokenMin;
            								}
HXDLIN( 512)								pmax13 = this->tokenMax;
HXDLIN( 512)								e22 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e21,( (int)(pmin13) ),( (int)(pmax13) ),this->origin,this->line);
            							}
HXLINE( 517)							return this->parseExprNext(e22);
            						}
            						break;
            						case (int)13: {
HXLINE( 511)							::String tmp1 = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 513)							 ::crowplexus::hscript::ExprDef e23 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 513)							 ::Dynamic pmin14 = p1;
HXDLIN( 513)							 ::Dynamic pmax14 = null();
HXDLIN( 513)							 ::crowplexus::hscript::Expr e24;
HXDLIN( 513)							if (::hx::IsNull( e23 )) {
HXLINE( 513)								e24 = null();
            							}
            							else {
HXLINE( 513)								if (::hx::IsNull( pmin14 )) {
HXLINE( 513)									pmin14 = this->tokenMin;
            								}
HXDLIN( 513)								pmax14 = this->tokenMax;
HXDLIN( 513)								e24 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e23,( (int)(pmin14) ),( (int)(pmax14) ),this->origin,this->line);
            							}
HXDLIN( 513)							 ::crowplexus::hscript::ExprDef e25 = ::crowplexus::hscript::ExprDef_obj::EVar(tmp1,null(),e24,null());
HXDLIN( 513)							 ::Dynamic pmin15 = p1;
HXDLIN( 513)							 ::Dynamic pmax15 = null();
HXDLIN( 513)							 ::crowplexus::hscript::Expr e26;
HXDLIN( 513)							if (::hx::IsNull( e25 )) {
HXLINE( 513)								e26 = null();
            							}
            							else {
HXLINE( 513)								if (::hx::IsNull( pmin15 )) {
HXLINE( 513)									pmin15 = this->tokenMin;
            								}
HXDLIN( 513)								pmax15 = this->tokenMax;
HXDLIN( 513)								e26 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e25,( (int)(pmin15) ),( (int)(pmax15) ),this->origin,this->line);
            							}
HXLINE( 514)							 ::crowplexus::hscript::Expr e27 = this->mapCompr(tmp1,a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 515)							 ::crowplexus::hscript::ExprDef e28 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp1);
HXDLIN( 515)							 ::Dynamic pmin16 = p1;
HXDLIN( 515)							 ::Dynamic pmax16 = null();
HXDLIN( 515)							 ::crowplexus::hscript::Expr e29;
HXDLIN( 515)							if (::hx::IsNull( e28 )) {
HXLINE( 515)								e29 = null();
            							}
            							else {
HXLINE( 515)								if (::hx::IsNull( pmin16 )) {
HXLINE( 515)									pmin16 = this->tokenMin;
            								}
HXDLIN( 515)								pmax16 = this->tokenMax;
HXDLIN( 515)								e29 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e28,( (int)(pmin16) ),( (int)(pmax16) ),this->origin,this->line);
            							}
HXLINE( 512)							 ::crowplexus::hscript::ExprDef e30 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e26)->init(1,e27)->init(2,e29));
HXDLIN( 512)							 ::Dynamic pmin17 = p1;
HXDLIN( 512)							 ::Dynamic pmax17 = null();
HXDLIN( 512)							 ::crowplexus::hscript::Expr e31;
HXDLIN( 512)							if (::hx::IsNull( e30 )) {
HXLINE( 512)								e31 = null();
            							}
            							else {
HXLINE( 512)								if (::hx::IsNull( pmin17 )) {
HXLINE( 512)									pmin17 = this->tokenMin;
            								}
HXDLIN( 512)								pmax17 = this->tokenMax;
HXDLIN( 512)								e31 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e30,( (int)(pmin17) ),( (int)(pmax17) ),this->origin,this->line);
            							}
HXLINE( 517)							return this->parseExprNext(e31);
            						}
            						break;
            						case (int)26: {
HXLINE( 511)							::String tmp2 = (HX_("__a_",fe,af,13,3f) + this->uid++);
HXLINE( 513)							 ::crowplexus::hscript::ExprDef e32 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 513)							 ::Dynamic pmin18 = p1;
HXDLIN( 513)							 ::Dynamic pmax18 = null();
HXDLIN( 513)							 ::crowplexus::hscript::Expr e33;
HXDLIN( 513)							if (::hx::IsNull( e32 )) {
HXLINE( 513)								e33 = null();
            							}
            							else {
HXLINE( 513)								if (::hx::IsNull( pmin18 )) {
HXLINE( 513)									pmin18 = this->tokenMin;
            								}
HXDLIN( 513)								pmax18 = this->tokenMax;
HXDLIN( 513)								e33 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e32,( (int)(pmin18) ),( (int)(pmax18) ),this->origin,this->line);
            							}
HXDLIN( 513)							 ::crowplexus::hscript::ExprDef e34 = ::crowplexus::hscript::ExprDef_obj::EVar(tmp2,null(),e33,null());
HXDLIN( 513)							 ::Dynamic pmin19 = p1;
HXDLIN( 513)							 ::Dynamic pmax19 = null();
HXDLIN( 513)							 ::crowplexus::hscript::Expr e35;
HXDLIN( 513)							if (::hx::IsNull( e34 )) {
HXLINE( 513)								e35 = null();
            							}
            							else {
HXLINE( 513)								if (::hx::IsNull( pmin19 )) {
HXLINE( 513)									pmin19 = this->tokenMin;
            								}
HXDLIN( 513)								pmax19 = this->tokenMax;
HXDLIN( 513)								e35 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e34,( (int)(pmin19) ),( (int)(pmax19) ),this->origin,this->line);
            							}
HXLINE( 514)							 ::crowplexus::hscript::Expr e36 = this->mapCompr(tmp2,a1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 515)							 ::crowplexus::hscript::ExprDef e37 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp2);
HXDLIN( 515)							 ::Dynamic pmin20 = p1;
HXDLIN( 515)							 ::Dynamic pmax20 = null();
HXDLIN( 515)							 ::crowplexus::hscript::Expr e38;
HXDLIN( 515)							if (::hx::IsNull( e37 )) {
HXLINE( 515)								e38 = null();
            							}
            							else {
HXLINE( 515)								if (::hx::IsNull( pmin20 )) {
HXLINE( 515)									pmin20 = this->tokenMin;
            								}
HXDLIN( 515)								pmax20 = this->tokenMax;
HXDLIN( 515)								e38 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e37,( (int)(pmin20) ),( (int)(pmax20) ),this->origin,this->line);
            							}
HXLINE( 512)							 ::crowplexus::hscript::ExprDef e39 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(3)->init(0,e35)->init(1,e36)->init(2,e38));
HXDLIN( 512)							 ::Dynamic pmin21 = p1;
HXDLIN( 512)							 ::Dynamic pmax21 = null();
HXDLIN( 512)							 ::crowplexus::hscript::Expr e40;
HXDLIN( 512)							if (::hx::IsNull( e39 )) {
HXLINE( 512)								e40 = null();
            							}
            							else {
HXLINE( 512)								if (::hx::IsNull( pmin21 )) {
HXLINE( 512)									pmin21 = this->tokenMin;
            								}
HXDLIN( 512)								pmax21 = this->tokenMax;
HXDLIN( 512)								e40 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e39,( (int)(pmin21) ),( (int)(pmax21) ),this->origin,this->line);
            							}
HXLINE( 517)							return this->parseExprNext(e40);
            						}
            						break;
            						default:{
            						}
            					}
            				}
HXLINE( 520)				 ::crowplexus::hscript::ExprDef e41 = ::crowplexus::hscript::ExprDef_obj::EArrayDecl(a1);
HXDLIN( 520)				 ::Dynamic pmin22 = p1;
HXDLIN( 520)				 ::Dynamic pmax22 = null();
HXDLIN( 520)				 ::crowplexus::hscript::Expr _hx_tmp9;
HXDLIN( 520)				if (::hx::IsNull( e41 )) {
HXLINE( 520)					_hx_tmp9 = null();
            				}
            				else {
HXLINE( 520)					if (::hx::IsNull( pmin22 )) {
HXLINE( 520)						pmin22 = this->tokenMin;
            					}
HXDLIN( 520)					pmax22 = this->tokenMax;
HXDLIN( 520)					_hx_tmp9 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e41,( (int)(pmin22) ),( (int)(pmax22) ),this->origin,this->line);
            				}
HXDLIN( 520)				return this->parseExprNext(_hx_tmp9);
            			}
            			break;
            			case (int)15: {
HXLINE( 521)				if (this->allowMetadata) {
HXLINE( 522)					::Array< ::Dynamic> args = this->parseMetaArgs();
HXLINE( 523)					 ::crowplexus::hscript::ExprDef e42 = ::crowplexus::hscript::ExprDef_obj::EMeta(tk->_hx_getString(0),args,this->parseExpr());
HXDLIN( 523)					 ::Dynamic pmin23 = p1;
HXDLIN( 523)					 ::Dynamic pmax23 = null();
HXDLIN( 523)					if (::hx::IsNull( e42 )) {
HXLINE( 523)						return null();
            					}
            					else {
HXLINE( 523)						if (::hx::IsNull( pmin23 )) {
HXLINE( 523)							pmin23 = this->tokenMin;
            						}
HXDLIN( 523)						pmax23 = this->tokenMax;
HXDLIN( 523)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e42,( (int)(pmin23) ),( (int)(pmax23) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE( 525)					return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            				}
            			}
            			break;
            			default:{
HXLINE( 525)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            		}
HXLINE( 396)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseExpr,return )

 ::crowplexus::hscript::Expr Parser_obj::parseLambda(::Array< ::Dynamic> args, ::Dynamic pmin){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_529_parseLambda)
HXLINE( 530)		while(true){
HXLINE( 531)			::String id = this->getIdent();
HXLINE( 532)			 ::crowplexus::hscript::CType t;
HXDLIN( 532)			if (this->maybe(::crowplexus::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE( 532)				t = this->parseType();
            			}
            			else {
HXLINE( 532)				t = null();
            			}
HXLINE( 533)			args->push( ::Dynamic(::hx::Anon_obj::Create(2)
            				->setFixed(0,HX_("t",74,00,00,00),t)
            				->setFixed(1,HX_("name",4b,72,ff,48),id)));
HXLINE( 534)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 535)			switch((int)(tk->_hx_getIndex())){
            				case (int)5: {
HXLINE( 538)					goto _hx_goto_39;
            				}
            				break;
            				case (int)9: {
            				}
            				break;
            				default:{
HXLINE( 540)					this->unexpected(tk);
HXLINE( 541)					goto _hx_goto_39;
            				}
            			}
            		}
            		_hx_goto_39:;
HXLINE( 544)		{
HXLINE( 544)			 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN( 544)			if (!(__hxcpp_enum_eq(t1,::crowplexus::hscript::Token_obj::TOp(HX_("->",71,27,00,00))))) {
HXLINE( 544)				this->unexpected(t1);
            			}
            		}
HXLINE( 546)		 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EReturn(this->parseExpr());
HXDLIN( 546)		 ::Dynamic pmin1 = pmin;
HXDLIN( 546)		 ::Dynamic pmax = null();
HXDLIN( 546)		 ::crowplexus::hscript::Expr e1;
HXDLIN( 546)		if (::hx::IsNull( e )) {
HXLINE( 546)			e1 = null();
            		}
            		else {
HXLINE( 546)			if (::hx::IsNull( pmin )) {
HXLINE( 546)				pmin1 = this->tokenMin;
            			}
HXDLIN( 546)			pmax = this->tokenMax;
HXDLIN( 546)			e1 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin1) ),( (int)(pmax) ),this->origin,this->line);
            		}
HXDLIN( 546)		 ::crowplexus::hscript::ExprDef e2 = ::crowplexus::hscript::ExprDef_obj::EFunction(args,e1,null(),null());
HXDLIN( 546)		 ::Dynamic pmin2 = pmin;
HXDLIN( 546)		 ::Dynamic pmax1 = null();
HXDLIN( 546)		if (::hx::IsNull( e2 )) {
HXLINE( 546)			return null();
            		}
            		else {
HXLINE( 546)			if (::hx::IsNull( pmin )) {
HXLINE( 546)				pmin2 = this->tokenMin;
            			}
HXDLIN( 546)			pmax1 = this->tokenMax;
HXDLIN( 546)			return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e2,( (int)(pmin2) ),( (int)(pmax1) ),this->origin,this->line);
            		}
HXDLIN( 546)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,parseLambda,return )

::Array< ::Dynamic> Parser_obj::parseMetaArgs(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_549_parseMetaArgs)
HXLINE( 550)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 551)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 552)			{
HXLINE( 552)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 552)				this->tokenMin = this->oldTokenMin;
HXDLIN( 552)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 553)			return null();
            		}
HXLINE( 555)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 556)		tk = this->token();
HXLINE( 557)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 558)			{
HXLINE( 558)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 558)				this->tokenMin = this->oldTokenMin;
HXDLIN( 558)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 559)			while(true){
HXLINE( 560)				args->push(this->parseExpr());
HXLINE( 561)				{
HXLINE( 561)					 ::crowplexus::hscript::Token _g = this->token();
HXDLIN( 561)					switch((int)(_g->_hx_getIndex())){
            						case (int)5: {
HXLINE( 564)							goto _hx_goto_41;
            						}
            						break;
            						case (int)9: {
            						}
            						break;
            						default:{
HXLINE( 566)							this->unexpected(_g);
            						}
            					}
            				}
            			}
            			_hx_goto_41:;
            		}
HXLINE( 570)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseMetaArgs,return )

 ::crowplexus::hscript::Expr Parser_obj::mapCompr(::String tmp, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_573_mapCompr)
HXLINE( 574)		if (::hx::IsNull( e )) {
HXLINE( 575)			return null();
            		}
HXLINE( 576)		 ::crowplexus::hscript::ExprDef edef;
HXDLIN( 576)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 576)		switch((int)(_g->_hx_getIndex())){
            			case (int)5: {
HXLINE( 576)				edef = ::crowplexus::hscript::ExprDef_obj::EParent(this->mapCompr(tmp,_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()));
            			}
            			break;
            			case (int)6: {
HXLINE( 585)				::Array< ::Dynamic> _g1 = _g->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 585)				if ((_g1->length == 1)) {
HXLINE( 576)					edef = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(1)->init(0,this->mapCompr(tmp,_g1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >())));
            				}
            				else {
HXLINE( 590)					 ::crowplexus::hscript::ExprDef e1 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 590)					 ::Dynamic pmin;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmin = 0;
            					}
            					else {
HXLINE( 590)						pmin = e->pmin;
            					}
HXDLIN( 590)					 ::Dynamic pmax;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmax = 0;
            					}
            					else {
HXLINE( 590)						pmax = e->pmax;
            					}
HXDLIN( 590)					 ::crowplexus::hscript::Expr e2;
HXDLIN( 590)					if (::hx::IsNull( e1 )) {
HXLINE( 590)						e2 = null();
            					}
            					else {
HXLINE( 590)						if (::hx::IsNull( pmin )) {
HXLINE( 590)							pmin = this->tokenMin;
            						}
HXDLIN( 590)						if (::hx::IsNull( pmax )) {
HXLINE( 590)							pmax = this->tokenMax;
            						}
HXDLIN( 590)						e2 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e1,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            					}
HXDLIN( 590)					 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EField(e2,HX_("push",da,11,61,4a),false);
HXDLIN( 590)					 ::Dynamic pmin1;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmin1 = 0;
            					}
            					else {
HXLINE( 590)						pmin1 = e->pmin;
            					}
HXDLIN( 590)					 ::Dynamic pmax1;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmax1 = 0;
            					}
            					else {
HXLINE( 590)						pmax1 = e->pmax;
            					}
HXDLIN( 590)					 ::crowplexus::hscript::Expr edef1;
HXDLIN( 590)					if (::hx::IsNull( e3 )) {
HXLINE( 590)						edef1 = null();
            					}
            					else {
HXLINE( 590)						if (::hx::IsNull( pmin1 )) {
HXLINE( 590)							pmin1 = this->tokenMin;
            						}
HXDLIN( 590)						if (::hx::IsNull( pmax1 )) {
HXLINE( 590)							pmax1 = this->tokenMax;
            						}
HXDLIN( 590)						edef1 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
HXLINE( 576)					edef = ::crowplexus::hscript::ExprDef_obj::ECall(edef1,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 583)				if (::hx::IsNull( _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >() )) {
HXLINE( 576)					edef = ::crowplexus::hscript::ExprDef_obj::EIf(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >(),this->mapCompr(tmp,_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >()),null());
            				}
            				else {
HXLINE( 590)					 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 590)					 ::Dynamic pmin2;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmin2 = 0;
            					}
            					else {
HXLINE( 590)						pmin2 = e->pmin;
            					}
HXDLIN( 590)					 ::Dynamic pmax2;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmax2 = 0;
            					}
            					else {
HXLINE( 590)						pmax2 = e->pmax;
            					}
HXDLIN( 590)					 ::crowplexus::hscript::Expr e5;
HXDLIN( 590)					if (::hx::IsNull( e4 )) {
HXLINE( 590)						e5 = null();
            					}
            					else {
HXLINE( 590)						if (::hx::IsNull( pmin2 )) {
HXLINE( 590)							pmin2 = this->tokenMin;
            						}
HXDLIN( 590)						if (::hx::IsNull( pmax2 )) {
HXLINE( 590)							pmax2 = this->tokenMax;
            						}
HXDLIN( 590)						e5 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            					}
HXDLIN( 590)					 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EField(e5,HX_("push",da,11,61,4a),false);
HXDLIN( 590)					 ::Dynamic pmin3;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmin3 = 0;
            					}
            					else {
HXLINE( 590)						pmin3 = e->pmin;
            					}
HXDLIN( 590)					 ::Dynamic pmax3;
HXDLIN( 590)					if (::hx::IsNull( e )) {
HXLINE( 590)						pmax3 = 0;
            					}
            					else {
HXLINE( 590)						pmax3 = e->pmax;
            					}
HXDLIN( 590)					 ::crowplexus::hscript::Expr edef2;
HXDLIN( 590)					if (::hx::IsNull( e6 )) {
HXLINE( 590)						edef2 = null();
            					}
            					else {
HXLINE( 590)						if (::hx::IsNull( pmin3 )) {
HXLINE( 590)							pmin3 = this->tokenMin;
            						}
HXDLIN( 590)						if (::hx::IsNull( pmax3 )) {
HXLINE( 590)							pmax3 = this->tokenMax;
            						}
HXDLIN( 590)						edef2 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            					}
HXLINE( 576)					edef = ::crowplexus::hscript::ExprDef_obj::ECall(edef2,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 576)				edef = ::crowplexus::hscript::ExprDef_obj::EWhile(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >(),this->mapCompr(tmp,_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >()));
            			}
            			break;
            			case (int)13: {
HXLINE( 576)				edef = ::crowplexus::hscript::ExprDef_obj::EFor(_g->_hx_getString(0),_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >(),this->mapCompr(tmp,_g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >()));
            			}
            			break;
            			case (int)26: {
HXLINE( 576)				edef = ::crowplexus::hscript::ExprDef_obj::EDoWhile(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >(),this->mapCompr(tmp,_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >()));
            			}
            			break;
            			default:{
HXLINE( 590)				 ::crowplexus::hscript::ExprDef e7 = ::crowplexus::hscript::ExprDef_obj::EIdent(tmp);
HXDLIN( 590)				 ::Dynamic pmin4;
HXDLIN( 590)				if (::hx::IsNull( e )) {
HXLINE( 590)					pmin4 = 0;
            				}
            				else {
HXLINE( 590)					pmin4 = e->pmin;
            				}
HXDLIN( 590)				 ::Dynamic pmax4;
HXDLIN( 590)				if (::hx::IsNull( e )) {
HXLINE( 590)					pmax4 = 0;
            				}
            				else {
HXLINE( 590)					pmax4 = e->pmax;
            				}
HXDLIN( 590)				 ::crowplexus::hscript::Expr e8;
HXDLIN( 590)				if (::hx::IsNull( e7 )) {
HXLINE( 590)					e8 = null();
            				}
            				else {
HXLINE( 590)					if (::hx::IsNull( pmin4 )) {
HXLINE( 590)						pmin4 = this->tokenMin;
            					}
HXDLIN( 590)					if (::hx::IsNull( pmax4 )) {
HXLINE( 590)						pmax4 = this->tokenMax;
            					}
HXDLIN( 590)					e8 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e7,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            				}
HXDLIN( 590)				 ::crowplexus::hscript::ExprDef e9 = ::crowplexus::hscript::ExprDef_obj::EField(e8,HX_("push",da,11,61,4a),false);
HXDLIN( 590)				 ::Dynamic pmin5;
HXDLIN( 590)				if (::hx::IsNull( e )) {
HXLINE( 590)					pmin5 = 0;
            				}
            				else {
HXLINE( 590)					pmin5 = e->pmin;
            				}
HXDLIN( 590)				 ::Dynamic pmax5;
HXDLIN( 590)				if (::hx::IsNull( e )) {
HXLINE( 590)					pmax5 = 0;
            				}
            				else {
HXLINE( 590)					pmax5 = e->pmax;
            				}
HXDLIN( 590)				 ::crowplexus::hscript::Expr edef3;
HXDLIN( 590)				if (::hx::IsNull( e9 )) {
HXLINE( 590)					edef3 = null();
            				}
            				else {
HXLINE( 590)					if (::hx::IsNull( pmin5 )) {
HXLINE( 590)						pmin5 = this->tokenMin;
            					}
HXDLIN( 590)					if (::hx::IsNull( pmax5 )) {
HXLINE( 590)						pmax5 = this->tokenMax;
            					}
HXDLIN( 590)					edef3 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e9,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            				}
HXLINE( 576)				edef = ::crowplexus::hscript::ExprDef_obj::ECall(edef3,::Array_obj< ::Dynamic>::__new(1)->init(0,e));
            			}
            		}
HXLINE( 592)		 ::Dynamic pmin6;
HXDLIN( 592)		if (::hx::IsNull( e )) {
HXLINE( 592)			pmin6 = 0;
            		}
            		else {
HXLINE( 592)			pmin6 = e->pmin;
            		}
HXDLIN( 592)		 ::Dynamic pmax6;
HXDLIN( 592)		if (::hx::IsNull( e )) {
HXLINE( 592)			pmax6 = 0;
            		}
            		else {
HXLINE( 592)			pmax6 = e->pmax;
            		}
HXDLIN( 592)		if (::hx::IsNull( edef )) {
HXLINE( 592)			return null();
            		}
            		else {
HXLINE( 592)			if (::hx::IsNull( pmin6 )) {
HXLINE( 592)				pmin6 = this->tokenMin;
            			}
HXDLIN( 592)			if (::hx::IsNull( pmax6 )) {
HXLINE( 592)				pmax6 = this->tokenMax;
            			}
HXDLIN( 592)			return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,edef,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            		}
HXDLIN( 592)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,mapCompr,return )

 ::crowplexus::hscript::Expr Parser_obj::makeUnop(::String op, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_595_makeUnop)
HXLINE( 596)		bool _hx_tmp;
HXDLIN( 596)		if (::hx::IsNull( e )) {
HXLINE( 596)			_hx_tmp = this->resumeErrors;
            		}
            		else {
HXLINE( 596)			_hx_tmp = false;
            		}
HXDLIN( 596)		if (_hx_tmp) {
HXLINE( 597)			return null();
            		}
HXLINE( 598)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 598)		switch((int)(_g->_hx_getIndex())){
            			case (int)8: {
HXLINE( 599)				 ::crowplexus::hscript::Expr _g1 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 599)				 ::crowplexus::hscript::Expr _g2 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 599)				 ::crowplexus::hscript::ExprDef e1 = ::crowplexus::hscript::ExprDef_obj::EBinop(_g->_hx_getString(0),this->makeUnop(op,_g1),_g2);
HXDLIN( 599)				 ::Dynamic pmin;
HXDLIN( 599)				if (::hx::IsNull( _g1 )) {
HXLINE( 599)					pmin = 0;
            				}
            				else {
HXLINE( 599)					pmin = _g1->pmin;
            				}
HXDLIN( 599)				 ::Dynamic pmax;
HXDLIN( 599)				if (::hx::IsNull( _g2 )) {
HXLINE( 599)					pmax = 0;
            				}
            				else {
HXLINE( 599)					pmax = _g2->pmax;
            				}
HXDLIN( 599)				if (::hx::IsNull( e1 )) {
HXLINE( 599)					return null();
            				}
            				else {
HXLINE( 599)					if (::hx::IsNull( pmin )) {
HXLINE( 599)						pmin = this->tokenMin;
            					}
HXDLIN( 599)					if (::hx::IsNull( pmax )) {
HXLINE( 599)						pmax = this->tokenMax;
            					}
HXDLIN( 599)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e1,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)24: {
HXLINE( 600)				 ::crowplexus::hscript::Expr _g3 = _g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 600)				 ::crowplexus::hscript::Expr _g4 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 600)				 ::crowplexus::hscript::ExprDef e2 = ::crowplexus::hscript::ExprDef_obj::ETernary(this->makeUnop(op,_g3),_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >(),_g4);
HXDLIN( 600)				 ::Dynamic pmin1;
HXDLIN( 600)				if (::hx::IsNull( _g3 )) {
HXLINE( 600)					pmin1 = 0;
            				}
            				else {
HXLINE( 600)					pmin1 = _g3->pmin;
            				}
HXDLIN( 600)				 ::Dynamic pmax1;
HXDLIN( 600)				if (::hx::IsNull( _g4 )) {
HXLINE( 600)					pmax1 = 0;
            				}
            				else {
HXLINE( 600)					pmax1 = _g4->pmax;
            				}
HXDLIN( 600)				if (::hx::IsNull( e2 )) {
HXLINE( 600)					return null();
            				}
            				else {
HXLINE( 600)					if (::hx::IsNull( pmin1 )) {
HXLINE( 600)						pmin1 = this->tokenMin;
            					}
HXDLIN( 600)					if (::hx::IsNull( pmax1 )) {
HXLINE( 600)						pmax1 = this->tokenMax;
            					}
HXDLIN( 600)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e2,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            				}
            			}
            			break;
            			default:{
HXLINE( 601)				 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EUnop(op,true,e);
HXDLIN( 601)				 ::Dynamic pmin2;
HXDLIN( 601)				if (::hx::IsNull( e )) {
HXLINE( 601)					pmin2 = 0;
            				}
            				else {
HXLINE( 601)					pmin2 = e->pmin;
            				}
HXDLIN( 601)				 ::Dynamic pmax2;
HXDLIN( 601)				if (::hx::IsNull( e )) {
HXLINE( 601)					pmax2 = 0;
            				}
            				else {
HXLINE( 601)					pmax2 = e->pmax;
            				}
HXDLIN( 601)				if (::hx::IsNull( e3 )) {
HXLINE( 601)					return null();
            				}
            				else {
HXLINE( 601)					if (::hx::IsNull( pmin2 )) {
HXLINE( 601)						pmin2 = this->tokenMin;
            					}
HXDLIN( 601)					if (::hx::IsNull( pmax2 )) {
HXLINE( 601)						pmax2 = this->tokenMax;
            					}
HXDLIN( 601)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            				}
            			}
            		}
HXLINE( 598)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,makeUnop,return )

 ::crowplexus::hscript::Expr Parser_obj::makeBinop(::String op, ::crowplexus::hscript::Expr e1, ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_605_makeBinop)
HXLINE( 606)		bool _hx_tmp;
HXDLIN( 606)		if (::hx::IsNull( e )) {
HXLINE( 606)			_hx_tmp = this->resumeErrors;
            		}
            		else {
HXLINE( 606)			_hx_tmp = false;
            		}
HXDLIN( 606)		if (_hx_tmp) {
HXLINE( 607)			 ::crowplexus::hscript::ExprDef e2 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 607)			 ::Dynamic pmin;
HXDLIN( 607)			if (::hx::IsNull( e1 )) {
HXLINE( 607)				pmin = 0;
            			}
            			else {
HXLINE( 607)				pmin = e1->pmin;
            			}
HXDLIN( 607)			 ::Dynamic pmax;
HXDLIN( 607)			if (::hx::IsNull( e1 )) {
HXLINE( 607)				pmax = 0;
            			}
            			else {
HXLINE( 607)				pmax = e1->pmax;
            			}
HXDLIN( 607)			if (::hx::IsNull( e2 )) {
HXLINE( 607)				return null();
            			}
            			else {
HXLINE( 607)				if (::hx::IsNull( pmin )) {
HXLINE( 607)					pmin = this->tokenMin;
            				}
HXDLIN( 607)				if (::hx::IsNull( pmax )) {
HXLINE( 607)					pmax = this->tokenMax;
            				}
HXDLIN( 607)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e2,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            			}
            		}
HXLINE( 608)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN( 608)		switch((int)(_g->_hx_getIndex())){
            			case (int)8: {
HXLINE( 609)				::String _g1 = _g->_hx_getString(0);
HXDLIN( 609)				 ::crowplexus::hscript::Expr _g2 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXLINE( 610)				bool _hx_tmp1;
HXDLIN( 610)				 ::Dynamic _hx_tmp2 = this->opPriority->get(op);
HXDLIN( 610)				if (::hx::IsLessEq( _hx_tmp2,this->opPriority->get(_g1) )) {
HXLINE( 610)					_hx_tmp1 = !(this->opRightAssoc->exists(op));
            				}
            				else {
HXLINE( 610)					_hx_tmp1 = false;
            				}
HXDLIN( 610)				if (_hx_tmp1) {
HXLINE( 611)					 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EBinop(_g1,this->makeBinop(op,e1,_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >()),_g2);
HXDLIN( 611)					 ::Dynamic pmin1;
HXDLIN( 611)					if (::hx::IsNull( e1 )) {
HXLINE( 611)						pmin1 = 0;
            					}
            					else {
HXLINE( 611)						pmin1 = e1->pmin;
            					}
HXDLIN( 611)					 ::Dynamic pmax1;
HXDLIN( 611)					if (::hx::IsNull( _g2 )) {
HXLINE( 611)						pmax1 = 0;
            					}
            					else {
HXLINE( 611)						pmax1 = _g2->pmax;
            					}
HXDLIN( 611)					if (::hx::IsNull( e3 )) {
HXLINE( 611)						return null();
            					}
            					else {
HXLINE( 611)						if (::hx::IsNull( pmin1 )) {
HXLINE( 611)							pmin1 = this->tokenMin;
            						}
HXDLIN( 611)						if (::hx::IsNull( pmax1 )) {
HXLINE( 611)							pmax1 = this->tokenMax;
            						}
HXDLIN( 611)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE( 611)					 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 611)					 ::Dynamic pmin2;
HXDLIN( 611)					if (::hx::IsNull( e1 )) {
HXLINE( 611)						pmin2 = 0;
            					}
            					else {
HXLINE( 611)						pmin2 = e1->pmin;
            					}
HXDLIN( 611)					 ::Dynamic pmax2;
HXDLIN( 611)					if (::hx::IsNull( e )) {
HXLINE( 611)						pmax2 = 0;
            					}
            					else {
HXLINE( 611)						pmax2 = e->pmax;
            					}
HXDLIN( 611)					if (::hx::IsNull( e4 )) {
HXLINE( 611)						return null();
            					}
            					else {
HXLINE( 611)						if (::hx::IsNull( pmin2 )) {
HXLINE( 611)							pmin2 = this->tokenMin;
            						}
HXDLIN( 611)						if (::hx::IsNull( pmax2 )) {
HXLINE( 611)							pmax2 = this->tokenMax;
            						}
HXDLIN( 611)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            					}
            				}
            			}
            			break;
            			case (int)24: {
HXLINE( 613)				if (this->opRightAssoc->exists(op)) {
HXLINE( 613)					 ::crowplexus::hscript::ExprDef e5 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 613)					 ::Dynamic pmin3;
HXDLIN( 613)					if (::hx::IsNull( e1 )) {
HXLINE( 613)						pmin3 = 0;
            					}
            					else {
HXLINE( 613)						pmin3 = e1->pmin;
            					}
HXDLIN( 613)					 ::Dynamic pmax3;
HXDLIN( 613)					if (::hx::IsNull( e )) {
HXLINE( 613)						pmax3 = 0;
            					}
            					else {
HXLINE( 613)						pmax3 = e->pmax;
            					}
HXDLIN( 613)					if (::hx::IsNull( e5 )) {
HXLINE( 613)						return null();
            					}
            					else {
HXLINE( 613)						if (::hx::IsNull( pmin3 )) {
HXLINE( 613)							pmin3 = this->tokenMin;
            						}
HXDLIN( 613)						if (::hx::IsNull( pmax3 )) {
HXLINE( 613)							pmax3 = this->tokenMax;
            						}
HXDLIN( 613)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e5,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE( 613)					 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::ETernary(this->makeBinop(op,e1,_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()),_g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >(),_g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
HXDLIN( 613)					 ::Dynamic pmin4;
HXDLIN( 613)					if (::hx::IsNull( e1 )) {
HXLINE( 613)						pmin4 = 0;
            					}
            					else {
HXLINE( 613)						pmin4 = e1->pmin;
            					}
HXDLIN( 613)					 ::Dynamic pmax4;
HXDLIN( 613)					if (::hx::IsNull( e )) {
HXLINE( 613)						pmax4 = 0;
            					}
            					else {
HXLINE( 613)						pmax4 = e->pmax;
            					}
HXDLIN( 613)					if (::hx::IsNull( e6 )) {
HXLINE( 613)						return null();
            					}
            					else {
HXLINE( 613)						if (::hx::IsNull( pmin4 )) {
HXLINE( 613)							pmin4 = this->tokenMin;
            						}
HXDLIN( 613)						if (::hx::IsNull( pmax4 )) {
HXLINE( 613)							pmax4 = this->tokenMax;
            						}
HXDLIN( 613)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            					}
            				}
            			}
            			break;
            			default:{
HXLINE( 615)				 ::crowplexus::hscript::ExprDef e7 = ::crowplexus::hscript::ExprDef_obj::EBinop(op,e1,e);
HXDLIN( 615)				 ::Dynamic pmin5;
HXDLIN( 615)				if (::hx::IsNull( e1 )) {
HXLINE( 615)					pmin5 = 0;
            				}
            				else {
HXLINE( 615)					pmin5 = e1->pmin;
            				}
HXDLIN( 615)				 ::Dynamic pmax5;
HXDLIN( 615)				if (::hx::IsNull( e )) {
HXLINE( 615)					pmax5 = 0;
            				}
            				else {
HXLINE( 615)					pmax5 = e->pmax;
            				}
HXDLIN( 615)				if (::hx::IsNull( e7 )) {
HXLINE( 615)					return null();
            				}
            				else {
HXLINE( 615)					if (::hx::IsNull( pmin5 )) {
HXLINE( 615)						pmin5 = this->tokenMin;
            					}
HXDLIN( 615)					if (::hx::IsNull( pmax5 )) {
HXLINE( 615)						pmax5 = this->tokenMax;
            					}
HXDLIN( 615)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e7,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            				}
            			}
            		}
HXLINE( 608)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC3(Parser_obj,makeBinop,return )

 ::crowplexus::hscript::Expr Parser_obj::parseStructure(::String id){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_619_parseStructure)
HXLINE( 621)		int p1 = this->tokenMin;
HXLINE( 623)		::String _hx_switch_0 = id;
            		if (  (_hx_switch_0==HX_("break",bf,24,ec,b8)) ){
HXLINE( 679)			 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EBreak_dyn();
HXDLIN( 679)			 ::Dynamic pmin = null();
HXDLIN( 679)			 ::Dynamic pmax = null();
HXDLIN( 679)			if (::hx::IsNull( e )) {
HXLINE( 679)				return null();
            			}
            			else {
HXLINE( 679)				pmin = this->tokenMin;
HXDLIN( 679)				pmax = this->tokenMax;
HXDLIN( 679)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            			}
HXDLIN( 679)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("continue",67,e0,c8,31)) ){
HXLINE( 680)			 ::crowplexus::hscript::ExprDef e1 = ::crowplexus::hscript::ExprDef_obj::EContinue_dyn();
HXDLIN( 680)			 ::Dynamic pmin1 = null();
HXDLIN( 680)			 ::Dynamic pmax1 = null();
HXDLIN( 680)			if (::hx::IsNull( e1 )) {
HXLINE( 680)				return null();
            			}
            			else {
HXLINE( 680)				pmin1 = this->tokenMin;
HXDLIN( 680)				pmax1 = this->tokenMax;
HXDLIN( 680)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e1,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            			}
HXDLIN( 680)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("do",8b,57,00,00)) ){
HXLINE( 663)			 ::crowplexus::hscript::Expr e2 = this->parseExpr();
HXLINE( 664)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 665)			if ((tk->_hx_getIndex() == 2)) {
HXLINE( 666)				if ((tk->_hx_getString(0) != HX_("while",b1,43,bd,c9))) {
HXLINE( 667)					this->unexpected(tk);
            				}
            			}
            			else {
HXLINE( 667)				this->unexpected(tk);
            			}
HXLINE( 669)			 ::crowplexus::hscript::Expr econd = this->parseExpr();
HXLINE( 670)			 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EDoWhile(econd,e2);
HXDLIN( 670)			 ::Dynamic pmin2 = p1;
HXDLIN( 670)			 ::Dynamic pmax2;
HXDLIN( 670)			if (::hx::IsNull( econd )) {
HXLINE( 670)				pmax2 = 0;
            			}
            			else {
HXLINE( 670)				pmax2 = econd->pmax;
            			}
HXDLIN( 670)			if (::hx::IsNull( e3 )) {
HXLINE( 670)				return null();
            			}
            			else {
HXLINE( 670)				if (::hx::IsNull( pmin2 )) {
HXLINE( 670)					pmin2 = this->tokenMin;
            				}
HXDLIN( 670)				if (::hx::IsNull( pmax2 )) {
HXLINE( 670)					pmax2 = this->tokenMax;
            				}
HXDLIN( 670)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            			}
HXLINE( 662)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("else",b9,e4,14,43)) ){
HXLINE( 681)			return ( ( ::crowplexus::hscript::Expr)(this->unexpected(::crowplexus::hscript::Token_obj::TId(id))) );
HXDLIN( 681)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("enum",01,6b,16,43)) ){
HXLINE( 860)			::String name = this->getIdent();
HXLINE( 862)			{
HXLINE( 862)				 ::crowplexus::hscript::Token t = this->token();
HXDLIN( 862)				if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE( 862)					this->unexpected(t);
            				}
            			}
HXLINE( 864)			::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 866)			::String currentName = HX_("",00,00,00,00);
HXLINE( 867)			::Array< ::Dynamic> currentArgs = null();
HXLINE( 869)			while(true){
HXLINE( 870)				 ::crowplexus::hscript::Token tk1 = this->token();
HXLINE( 871)				switch((int)(tk1->_hx_getIndex())){
            					case (int)4: {
HXLINE( 886)						if (::hx::IsNotNull( currentArgs )) {
HXLINE( 887)							if (!(this->resumeErrors)) {
HXLINE( 887)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Cannot have multiple argument lists in one enum constructor",37,b9,8a,85)),this->tokenMin,this->tokenMax,this->origin,this->line));
            							}
HXLINE( 888)							goto _hx_goto_47;
            						}
HXLINE( 890)						currentArgs = this->parseFunctionArgs();
            					}
            					break;
            					case (int)7: {
HXLINE( 873)						goto _hx_goto_47;
            					}
            					break;
            					case (int)9: case (int)10: {
HXLINE( 875)						if ((currentName == HX_("",00,00,00,00))) {
HXLINE( 876)							continue;
            						}
HXLINE( 878)						bool _hx_tmp;
HXDLIN( 878)						if (::hx::IsNotNull( currentArgs )) {
HXLINE( 878)							_hx_tmp = (currentArgs->length > 0);
            						}
            						else {
HXLINE( 878)							_hx_tmp = false;
            						}
HXDLIN( 878)						if (_hx_tmp) {
HXLINE( 879)							fields->push(::crowplexus::hscript::EnumType_obj::EConstructor(currentName,currentArgs));
HXLINE( 880)							currentArgs = null();
            						}
            						else {
HXLINE( 882)							fields->push(::crowplexus::hscript::EnumType_obj::ESimple(currentName));
            						}
HXLINE( 884)						currentName = HX_("",00,00,00,00);
            					}
            					break;
            					default:{
HXLINE( 892)						if ((currentName != HX_("",00,00,00,00))) {
HXLINE( 893)							if (!(this->resumeErrors)) {
HXLINE( 893)								HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Expected comma or semicolon",a7,36,88,7d)),this->tokenMin,this->tokenMax,this->origin,this->line));
            							}
HXLINE( 894)							goto _hx_goto_47;
            						}
HXLINE( 897)						currentName = this->extractIdent(tk1);
            					}
            				}
            			}
            			_hx_goto_47:;
HXLINE( 901)			 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EEnum(name,fields);
HXDLIN( 901)			 ::Dynamic pmin3 = null();
HXDLIN( 901)			 ::Dynamic pmax3 = null();
HXDLIN( 901)			if (::hx::IsNull( e4 )) {
HXLINE( 901)				return null();
            			}
            			else {
HXLINE( 901)				pmin3 = this->tokenMin;
HXDLIN( 901)				pmax3 = this->tokenMax;
HXDLIN( 901)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            			}
HXLINE( 859)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("final",76,5f,9a,00)) ||  (_hx_switch_0==HX_("var",e7,de,59,00)) ){
HXLINE( 645)			::String ident = this->getIdent();
HXLINE( 646)			 ::crowplexus::hscript::Token tk2 = this->token();
HXLINE( 647)			 ::crowplexus::hscript::CType t1 = null();
HXLINE( 648)			bool _hx_tmp1;
HXDLIN( 648)			if (::hx::IsPointerEq( tk2,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 648)				_hx_tmp1 = this->allowTypes;
            			}
            			else {
HXLINE( 648)				_hx_tmp1 = false;
            			}
HXDLIN( 648)			if (_hx_tmp1) {
HXLINE( 649)				t1 = this->parseType();
HXLINE( 650)				tk2 = this->token();
            			}
HXLINE( 652)			 ::crowplexus::hscript::Expr e5 = null();
HXLINE( 653)			if (__hxcpp_enum_eq(tk2,::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE( 654)				e5 = this->parseExpr();
            			}
            			else {
HXLINE( 656)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk2,this->tokenMin,this->tokenMax));
HXDLIN( 656)				this->tokenMin = this->oldTokenMin;
HXDLIN( 656)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 657)			 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EVar(ident,t1,e5,(id == HX_("final",76,5f,9a,00)));
HXDLIN( 657)			 ::Dynamic pmin4 = p1;
HXDLIN( 657)			 ::Dynamic pmax4;
HXDLIN( 657)			if (::hx::IsNull( e5 )) {
HXLINE( 657)				pmax4 = this->tokenMax;
            			}
            			else {
HXLINE( 657)				if (::hx::IsNull( e5 )) {
HXLINE( 657)					pmax4 = 0;
            				}
            				else {
HXLINE( 657)					pmax4 = e5->pmax;
            				}
            			}
HXDLIN( 657)			if (::hx::IsNull( e6 )) {
HXLINE( 657)				return null();
            			}
            			else {
HXLINE( 657)				if (::hx::IsNull( pmin4 )) {
HXLINE( 657)					pmin4 = this->tokenMin;
            				}
HXDLIN( 657)				if (::hx::IsNull( pmax4 )) {
HXLINE( 657)					pmax4 = this->tokenMax;
            				}
HXDLIN( 657)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            			}
HXLINE( 644)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("for",09,c7,4d,00)) ){
HXLINE( 672)			{
HXLINE( 672)				 ::crowplexus::hscript::Token t2 = this->token();
HXDLIN( 672)				if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 672)					this->unexpected(t2);
            				}
            			}
HXLINE( 673)			::String vname = this->getIdent();
HXLINE( 674)			{
HXLINE( 674)				 ::crowplexus::hscript::Token t3 = this->token();
HXDLIN( 674)				if (!(__hxcpp_enum_eq(t3,::crowplexus::hscript::Token_obj::TId(HX_("in",e5,5b,00,00))))) {
HXLINE( 674)					this->unexpected(t3);
            				}
            			}
HXLINE( 675)			 ::crowplexus::hscript::Expr eiter = this->parseExpr();
HXLINE( 676)			{
HXLINE( 676)				 ::crowplexus::hscript::Token t4 = this->token();
HXDLIN( 676)				if (::hx::IsPointerNotEq( t4,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 676)					this->unexpected(t4);
            				}
            			}
HXLINE( 677)			 ::crowplexus::hscript::Expr e7 = this->parseExpr();
HXLINE( 678)			 ::crowplexus::hscript::ExprDef e8 = ::crowplexus::hscript::ExprDef_obj::EFor(vname,eiter,e7);
HXDLIN( 678)			 ::Dynamic pmin5 = p1;
HXDLIN( 678)			 ::Dynamic pmax5;
HXDLIN( 678)			if (::hx::IsNull( e7 )) {
HXLINE( 678)				pmax5 = 0;
            			}
            			else {
HXLINE( 678)				pmax5 = e7->pmax;
            			}
HXDLIN( 678)			if (::hx::IsNull( e8 )) {
HXLINE( 678)				return null();
            			}
            			else {
HXLINE( 678)				if (::hx::IsNull( pmin5 )) {
HXLINE( 678)					pmin5 = this->tokenMin;
            				}
HXDLIN( 678)				if (::hx::IsNull( pmax5 )) {
HXLINE( 678)					pmax5 = this->tokenMax;
            				}
HXDLIN( 678)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e8,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            			}
HXLINE( 671)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("function",18,ab,52,14)) ){
HXLINE( 687)			 ::crowplexus::hscript::Token tk3 = this->token();
HXLINE( 688)			::String name1 = null();
HXLINE( 689)			if ((tk3->_hx_getIndex() == 2)) {
HXLINE( 690)				name1 = tk3->_hx_getString(0);
            			}
            			else {
HXLINE( 691)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk3,this->tokenMin,this->tokenMax));
HXDLIN( 691)				this->tokenMin = this->oldTokenMin;
HXDLIN( 691)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 693)			 ::Dynamic inf = this->parseFunctionDecl();
HXLINE( 694)			 ::crowplexus::hscript::ExprDef e9 = ::crowplexus::hscript::ExprDef_obj::EFunction( ::Dynamic(inf->__Field(HX_("args",5d,8d,74,40),::hx::paccDynamic)), ::Dynamic(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic)),name1, ::Dynamic(inf->__Field(HX_("ret",61,d9,56,00),::hx::paccDynamic)));
HXDLIN( 694)			 ::Dynamic pmin6 = p1;
HXDLIN( 694)			 ::crowplexus::hscript::Expr e10 = ( ( ::crowplexus::hscript::Expr)(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic)) );
HXDLIN( 694)			 ::Dynamic pmax6;
HXDLIN( 694)			if (::hx::IsNull( e10 )) {
HXLINE( 694)				pmax6 = 0;
            			}
            			else {
HXLINE( 694)				pmax6 = e10->pmax;
            			}
HXDLIN( 694)			if (::hx::IsNull( e9 )) {
HXLINE( 694)				return null();
            			}
            			else {
HXLINE( 694)				if (::hx::IsNull( pmin6 )) {
HXLINE( 694)					pmin6 = this->tokenMin;
            				}
HXDLIN( 694)				if (::hx::IsNull( pmax6 )) {
HXLINE( 694)					pmax6 = this->tokenMax;
            				}
HXDLIN( 694)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e9,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            			}
HXLINE( 686)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("if",dd,5b,00,00)) ){
HXLINE( 625)			{
HXLINE( 625)				 ::crowplexus::hscript::Token t5 = this->token();
HXDLIN( 625)				if (::hx::IsPointerNotEq( t5,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 625)					this->unexpected(t5);
            				}
            			}
HXLINE( 626)			 ::crowplexus::hscript::Expr cond = this->parseExpr();
HXLINE( 627)			{
HXLINE( 627)				 ::crowplexus::hscript::Token t6 = this->token();
HXDLIN( 627)				if (::hx::IsPointerNotEq( t6,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 627)					this->unexpected(t6);
            				}
            			}
HXLINE( 628)			 ::crowplexus::hscript::Expr e11 = this->parseExpr();
HXLINE( 629)			 ::crowplexus::hscript::Expr e21 = null();
HXLINE( 630)			bool semic = false;
HXLINE( 631)			 ::crowplexus::hscript::Token tk4 = this->token();
HXLINE( 632)			if (::hx::IsPointerEq( tk4,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 633)				semic = true;
HXLINE( 634)				tk4 = this->token();
            			}
HXLINE( 636)			if (__hxcpp_enum_eq(tk4,::crowplexus::hscript::Token_obj::TId(HX_("else",b9,e4,14,43)))) {
HXLINE( 637)				e21 = this->parseExpr();
            			}
            			else {
HXLINE( 639)				{
HXLINE( 639)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk4,this->tokenMin,this->tokenMax));
HXDLIN( 639)					this->tokenMin = this->oldTokenMin;
HXDLIN( 639)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE( 640)				if (semic) {
HXLINE( 641)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,::crowplexus::hscript::Token_obj::TSemicolon_dyn(),this->tokenMin,this->tokenMax));
HXDLIN( 641)					this->tokenMin = this->oldTokenMin;
HXDLIN( 641)					this->tokenMax = this->oldTokenMax;
            				}
            			}
HXLINE( 643)			 ::crowplexus::hscript::ExprDef e12 = ::crowplexus::hscript::ExprDef_obj::EIf(cond,e11,e21);
HXDLIN( 643)			 ::Dynamic pmin7 = p1;
HXDLIN( 643)			 ::Dynamic pmax7;
HXDLIN( 643)			if (::hx::IsNull( e21 )) {
HXLINE( 643)				pmax7 = this->tokenMax;
            			}
            			else {
HXLINE( 643)				if (::hx::IsNull( e21 )) {
HXLINE( 643)					pmax7 = 0;
            				}
            				else {
HXLINE( 643)					pmax7 = e21->pmax;
            				}
            			}
HXDLIN( 643)			if (::hx::IsNull( e12 )) {
HXLINE( 643)				return null();
            			}
            			else {
HXLINE( 643)				if (::hx::IsNull( pmin7 )) {
HXLINE( 643)					pmin7 = this->tokenMin;
            				}
HXDLIN( 643)				if (::hx::IsNull( pmax7 )) {
HXLINE( 643)					pmax7 = this->tokenMax;
            				}
HXDLIN( 643)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e12,( (int)(pmin7) ),( (int)(pmax7) ),this->origin,this->line);
            			}
HXLINE( 624)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("import",65,a1,82,08)) ){
HXLINE( 822)			::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE( 823)			::String asStr = null();
HXLINE( 826)			while(true){
HXLINE( 827)				 ::crowplexus::hscript::Token t7 = this->token();
HXLINE( 828)				if (::hx::IsPointerNotEq( t7,::crowplexus::hscript::Token_obj::TDot_dyn() )) {
HXLINE( 829)					{
HXLINE( 829)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t7,this->tokenMin,this->tokenMax));
HXDLIN( 829)						this->tokenMin = this->oldTokenMin;
HXDLIN( 829)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE( 830)					goto _hx_goto_48;
            				}
HXLINE( 832)				t7 = this->token();
HXLINE( 833)				switch((int)(t7->_hx_getIndex())){
            					case (int)2: {
HXLINE( 835)						path->push(t7->_hx_getString(0));
            					}
            					break;
            					case (int)3: {
HXLINE( 834)						if ((t7->_hx_getString(0) != HX_("*",2a,00,00,00))) {
HXLINE( 836)							this->unexpected(t7);
            						}
            					}
            					break;
            					default:{
HXLINE( 836)						this->unexpected(t7);
            					}
            				}
            			}
            			_hx_goto_48:;
HXLINE( 840)			::String asErr = (((HX_(" -> ",6f,2f,49,15) + path->join(HX_(".",2e,00,00,00))) + HX_(" as ",ce,d2,70,15)) + asStr);
HXLINE( 842)			if (this->maybe(::crowplexus::hscript::Token_obj::TId(HX_("as",f2,54,00,00)))) {
HXLINE( 843)				asStr = this->getIdent();
HXLINE( 844)				::String uppercased = asStr.charAt(0);
HXDLIN( 844)				bool uppercased1 = (uppercased == asStr.charAt(0).toUpperCase());
HXLINE( 845)				bool _hx_tmp2;
HXDLIN( 845)				bool _hx_tmp3;
HXDLIN( 845)				if (::hx::IsNotNull( asStr )) {
HXLINE( 845)					_hx_tmp3 = (asStr == HX_("null",87,9e,0e,49));
            				}
            				else {
HXLINE( 845)					_hx_tmp3 = true;
            				}
HXDLIN( 845)				if (!(_hx_tmp3)) {
HXLINE( 845)					_hx_tmp2 = (asStr == HX_("",00,00,00,00));
            				}
            				else {
HXLINE( 845)					_hx_tmp2 = true;
            				}
HXDLIN( 845)				if (_hx_tmp2) {
HXLINE( 846)					this->unexpected(::crowplexus::hscript::Token_obj::TId(HX_("as",f2,54,00,00)));
            				}
HXLINE( 847)				if (!(uppercased1)) {
HXLINE( 848)					if (!(this->resumeErrors)) {
HXLINE( 848)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Import aliases must begin with an uppercase letter.",f0,ef,d9,b9) + asErr)),this->readPos,this->readPos,this->origin,this->line));
            					}
            				}
            			}
HXLINE( 857)			 ::crowplexus::hscript::ExprDef e13 = ::crowplexus::hscript::ExprDef_obj::EImport(path->join(HX_(".",2e,00,00,00)),asStr);
HXDLIN( 857)			 ::Dynamic pmin8 = null();
HXDLIN( 857)			 ::Dynamic pmax8 = null();
HXDLIN( 857)			if (::hx::IsNull( e13 )) {
HXLINE( 857)				return null();
            			}
            			else {
HXLINE( 857)				pmin8 = this->tokenMin;
HXDLIN( 857)				pmax8 = this->tokenMax;
HXDLIN( 857)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e13,( (int)(pmin8) ),( (int)(pmax8) ),this->origin,this->line);
            			}
HXLINE( 821)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("inline",59,ca,3f,99)) ){
HXLINE( 683)			if (!(this->maybe(::crowplexus::hscript::Token_obj::TId(HX_("function",18,ab,52,14))))) {
HXLINE( 684)				this->unexpected(::crowplexus::hscript::Token_obj::TId(HX_("inline",59,ca,3f,99)));
            			}
HXLINE( 685)			return this->parseStructure(HX_("function",18,ab,52,14));
HXLINE( 682)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("new",60,d0,53,00)) ){
HXLINE( 701)			::Array< ::String > a = ::Array_obj< ::String >::__new();
HXLINE( 702)			a->push(this->getIdent());
HXLINE( 703)			while(true){
HXLINE( 704)				 ::crowplexus::hscript::Token tk5 = this->token();
HXLINE( 705)				switch((int)(tk5->_hx_getIndex())){
            					case (int)4: {
HXLINE( 709)						goto _hx_goto_49;
            					}
            					break;
            					case (int)8: {
HXLINE( 707)						a->push(this->getIdent());
            					}
            					break;
            					default:{
HXLINE( 711)						this->unexpected(tk5);
HXLINE( 712)						goto _hx_goto_49;
            					}
            				}
            			}
            			_hx_goto_49:;
HXLINE( 715)			::Array< ::Dynamic> args = this->parseExprList(::crowplexus::hscript::Token_obj::TPClose_dyn());
HXLINE( 716)			 ::crowplexus::hscript::ExprDef e14 = ::crowplexus::hscript::ExprDef_obj::ENew(a->join(HX_(".",2e,00,00,00)),args);
HXDLIN( 716)			 ::Dynamic pmin9 = p1;
HXDLIN( 716)			 ::Dynamic pmax9 = null();
HXDLIN( 716)			if (::hx::IsNull( e14 )) {
HXLINE( 716)				return null();
            			}
            			else {
HXLINE( 716)				if (::hx::IsNull( pmin9 )) {
HXLINE( 716)					pmin9 = this->tokenMin;
            				}
HXDLIN( 716)				pmax9 = this->tokenMax;
HXDLIN( 716)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e14,( (int)(pmin9) ),( (int)(pmax9) ),this->origin,this->line);
            			}
HXLINE( 700)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("return",b0,a4,2d,09)) ){
HXLINE( 696)			 ::crowplexus::hscript::Token tk6 = this->token();
HXLINE( 697)			{
HXLINE( 697)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk6,this->tokenMin,this->tokenMax));
HXDLIN( 697)				this->tokenMin = this->oldTokenMin;
HXDLIN( 697)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE( 698)			 ::crowplexus::hscript::Expr e15;
HXDLIN( 698)			if (::hx::IsPointerEq( tk6,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE( 698)				e15 = null();
            			}
            			else {
HXLINE( 698)				e15 = this->parseExpr();
            			}
HXLINE( 699)			 ::crowplexus::hscript::ExprDef e16 = ::crowplexus::hscript::ExprDef_obj::EReturn(e15);
HXDLIN( 699)			 ::Dynamic pmin10 = p1;
HXDLIN( 699)			 ::Dynamic pmax10;
HXDLIN( 699)			if (::hx::IsNull( e15 )) {
HXLINE( 699)				pmax10 = this->tokenMax;
            			}
            			else {
HXLINE( 699)				if (::hx::IsNull( e15 )) {
HXLINE( 699)					pmax10 = 0;
            				}
            				else {
HXLINE( 699)					pmax10 = e15->pmax;
            				}
            			}
HXDLIN( 699)			if (::hx::IsNull( e16 )) {
HXLINE( 699)				return null();
            			}
            			else {
HXLINE( 699)				if (::hx::IsNull( pmin10 )) {
HXLINE( 699)					pmin10 = this->tokenMin;
            				}
HXDLIN( 699)				if (::hx::IsNull( pmax10 )) {
HXLINE( 699)					pmax10 = this->tokenMax;
            				}
HXDLIN( 699)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e16,( (int)(pmin10) ),( (int)(pmax10) ),this->origin,this->line);
            			}
HXLINE( 695)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("switch",f4,49,79,c5)) ){
HXLINE( 735)			 ::crowplexus::hscript::Expr parentExpr = this->parseExpr();
HXLINE( 736)			 ::crowplexus::hscript::Expr def = null();
HXDLIN( 736)			::Array< ::Dynamic> cases = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 737)			{
HXLINE( 737)				 ::crowplexus::hscript::Token t8 = this->token();
HXDLIN( 737)				if (::hx::IsPointerNotEq( t8,::crowplexus::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE( 737)					this->unexpected(t8);
            				}
            			}
HXLINE( 738)			while(true){
HXLINE( 739)				 ::crowplexus::hscript::Token tk7 = this->token();
HXLINE( 740)				switch((int)(tk7->_hx_getIndex())){
            					case (int)2: {
HXLINE( 794)						::String _hx_switch_1 = tk7->_hx_getString(0);
            						if (  (_hx_switch_1==HX_("case",b0,1e,ba,41)) ){
HXLINE( 742)							 ::crowplexus::hscript::SwitchCase c =  ::crowplexus::hscript::SwitchCase_obj::__alloc( HX_CTX ,::Array_obj< ::Dynamic>::__new(0),null(),null());
HXLINE( 743)							cases->push(c);
HXLINE( 744)							while(true){
HXLINE( 745)								 ::crowplexus::hscript::Expr e17 = this->parseExpr();
HXLINE( 746)								c->values->push(e17);
HXLINE( 747)								tk7 = this->token();
HXLINE( 748)								switch((int)(tk7->_hx_getIndex())){
            									case (int)2: {
HXLINE( 751)										if ((tk7->_hx_getString(0) == HX_("if",dd,5b,00,00))) {
HXLINE( 756)											c->ifExpr = this->parseExpr();
HXLINE( 757)											{
HXLINE( 757)												tk7 = this->token();
HXDLIN( 757)												switch((int)(tk7->_hx_getIndex())){
            													case (int)9: {
            													}
            													break;
            													case (int)14: {
HXLINE( 759)														goto _hx_goto_52;
            													}
            													break;
            													default:{
HXLINE( 761)														this->unexpected(tk7);
HXLINE( 762)														goto _hx_goto_52;
            													}
            												}
            											}
            										}
            										else {
HXLINE( 767)											this->unexpected(tk7);
HXLINE( 768)											goto _hx_goto_52;
            										}
            									}
            									break;
            									case (int)9: {
            									}
            									break;
            									case (int)14: {
HXLINE( 765)										goto _hx_goto_52;
            									}
            									break;
            									default:{
HXLINE( 767)										this->unexpected(tk7);
HXLINE( 768)										goto _hx_goto_52;
            									}
            								}
            							}
            							_hx_goto_52:;
HXLINE( 771)							::Array< ::Dynamic> exprs = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 772)							while(true){
HXLINE( 773)								tk7 = this->token();
HXLINE( 774)								{
HXLINE( 774)									this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk7,this->tokenMin,this->tokenMax));
HXDLIN( 774)									this->tokenMin = this->oldTokenMin;
HXDLIN( 774)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 775)								switch((int)(tk7->_hx_getIndex())){
            									case (int)0: {
HXLINE( 778)										if (this->resumeErrors) {
HXLINE( 779)											goto _hx_goto_53;
            										}
            										else {
HXLINE( 781)											this->parseFullExpr(exprs);
            										}
            									}
            									break;
            									case (int)2: {
HXLINE( 776)										::String _hx_switch_2 = tk7->_hx_getString(0);
            										if (  (_hx_switch_2==HX_("case",b0,1e,ba,41)) ||  (_hx_switch_2==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 777)											goto _hx_goto_53;
HXDLIN( 777)											goto _hx_goto_54;
            										}
            										/* default */{
HXLINE( 781)											this->parseFullExpr(exprs);
            										}
            										_hx_goto_54:;
            									}
            									break;
            									case (int)7: {
HXLINE( 777)										goto _hx_goto_53;
            									}
            									break;
            									default:{
HXLINE( 781)										this->parseFullExpr(exprs);
            									}
            								}
            							}
            							_hx_goto_53:;
HXLINE( 784)							 ::crowplexus::hscript::Expr _hx_tmp4;
HXDLIN( 784)							if ((exprs->length == 1)) {
HXLINE( 784)								_hx_tmp4 = exprs->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
            							}
            							else {
HXLINE( 784)								if ((exprs->length == 0)) {
HXLINE( 784)									 ::crowplexus::hscript::ExprDef e18 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 784)									 ::Dynamic pmin11 = this->tokenMin;
HXDLIN( 784)									 ::Dynamic pmax11 = this->tokenMin;
HXDLIN( 784)									if (::hx::IsNull( e18 )) {
HXLINE( 784)										_hx_tmp4 = null();
            									}
            									else {
HXLINE( 784)										if (::hx::IsNull( pmin11 )) {
HXLINE( 784)											pmin11 = this->tokenMin;
            										}
HXDLIN( 784)										if (::hx::IsNull( pmax11 )) {
HXLINE( 784)											pmax11 = this->tokenMax;
            										}
HXDLIN( 784)										_hx_tmp4 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e18,( (int)(pmin11) ),( (int)(pmax11) ),this->origin,this->line);
            									}
            								}
            								else {
HXLINE( 785)									 ::crowplexus::hscript::ExprDef e19 = ::crowplexus::hscript::ExprDef_obj::EBlock(exprs);
HXDLIN( 785)									 ::crowplexus::hscript::Expr e20 = exprs->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 785)									 ::Dynamic pmin12;
HXDLIN( 785)									if (::hx::IsNull( e20 )) {
HXLINE( 785)										pmin12 = 0;
            									}
            									else {
HXLINE( 785)										pmin12 = e20->pmin;
            									}
HXDLIN( 785)									 ::crowplexus::hscript::Expr e22 = exprs->__get((exprs->length - 1)).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 785)									 ::Dynamic pmax12;
HXDLIN( 785)									if (::hx::IsNull( e22 )) {
HXLINE( 785)										pmax12 = 0;
            									}
            									else {
HXLINE( 785)										pmax12 = e22->pmax;
            									}
HXDLIN( 785)									if (::hx::IsNull( e19 )) {
HXLINE( 784)										_hx_tmp4 = null();
            									}
            									else {
HXLINE( 785)										if (::hx::IsNull( pmin12 )) {
HXLINE( 785)											pmin12 = this->tokenMin;
            										}
HXDLIN( 785)										if (::hx::IsNull( pmax12 )) {
HXLINE( 785)											pmax12 = this->tokenMax;
            										}
HXLINE( 784)										_hx_tmp4 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e19,( (int)(pmin12) ),( (int)(pmax12) ),this->origin,this->line);
            									}
            								}
            							}
HXDLIN( 784)							c->expr = _hx_tmp4;
HXLINE( 787)							{
HXLINE( 787)								int _g = 0;
HXDLIN( 787)								::Array< ::Dynamic> _g1 = c->values;
HXDLIN( 787)								while((_g < _g1->length)){
HXLINE( 787)									 ::crowplexus::hscript::Expr i = _g1->__get(_g).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 787)									_g = (_g + 1);
HXLINE( 788)									{
HXLINE( 788)										 ::crowplexus::hscript::ExprDef _g2 = i->e;
HXDLIN( 788)										if ((_g2->_hx_getIndex() == 2)) {
HXLINE( 789)											if ((_g2->_hx_getString(0) == HX_("_",5f,00,00,00))) {
HXLINE( 790)												def = c->expr;
            											}
            										}
            									}
            								}
            							}
HXLINE( 741)							goto _hx_goto_51;
            						}
            						if (  (_hx_switch_1==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 795)							if (::hx::IsNotNull( def )) {
HXLINE( 796)								this->unexpected(tk7);
            							}
HXLINE( 797)							{
HXLINE( 797)								 ::crowplexus::hscript::Token t9 = this->token();
HXDLIN( 797)								if (::hx::IsPointerNotEq( t9,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 797)									this->unexpected(t9);
            								}
            							}
HXLINE( 798)							::Array< ::Dynamic> exprs1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 799)							while(true){
HXLINE( 800)								tk7 = this->token();
HXLINE( 801)								{
HXLINE( 801)									this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk7,this->tokenMin,this->tokenMax));
HXDLIN( 801)									this->tokenMin = this->oldTokenMin;
HXDLIN( 801)									this->tokenMax = this->oldTokenMax;
            								}
HXLINE( 802)								switch((int)(tk7->_hx_getIndex())){
            									case (int)0: {
HXLINE( 805)										if (this->resumeErrors) {
HXLINE( 806)											goto _hx_goto_56;
            										}
            										else {
HXLINE( 808)											this->parseFullExpr(exprs1);
            										}
            									}
            									break;
            									case (int)2: {
HXLINE( 803)										::String _hx_switch_3 = tk7->_hx_getString(0);
            										if (  (_hx_switch_3==HX_("case",b0,1e,ba,41)) ||  (_hx_switch_3==HX_("default",c1,d8,c3,9b)) ){
HXLINE( 804)											goto _hx_goto_56;
HXDLIN( 804)											goto _hx_goto_57;
            										}
            										/* default */{
HXLINE( 808)											this->parseFullExpr(exprs1);
            										}
            										_hx_goto_57:;
            									}
            									break;
            									case (int)7: {
HXLINE( 804)										goto _hx_goto_56;
            									}
            									break;
            									default:{
HXLINE( 808)										this->parseFullExpr(exprs1);
            									}
            								}
            							}
            							_hx_goto_56:;
HXLINE( 811)							if ((exprs1->length == 1)) {
HXLINE( 811)								def = exprs1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
            							}
            							else {
HXLINE( 811)								if ((exprs1->length == 0)) {
HXLINE( 811)									 ::crowplexus::hscript::ExprDef e23 = ::crowplexus::hscript::ExprDef_obj::EBlock(::Array_obj< ::Dynamic>::__new(0));
HXDLIN( 811)									 ::Dynamic pmin13 = this->tokenMin;
HXDLIN( 811)									 ::Dynamic pmax13 = this->tokenMin;
HXDLIN( 811)									if (::hx::IsNull( e23 )) {
HXLINE( 811)										def = null();
            									}
            									else {
HXLINE( 811)										if (::hx::IsNull( pmin13 )) {
HXLINE( 811)											pmin13 = this->tokenMin;
            										}
HXDLIN( 811)										if (::hx::IsNull( pmax13 )) {
HXLINE( 811)											pmax13 = this->tokenMax;
            										}
HXDLIN( 811)										def =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e23,( (int)(pmin13) ),( (int)(pmax13) ),this->origin,this->line);
            									}
            								}
            								else {
HXLINE( 812)									 ::crowplexus::hscript::ExprDef e24 = ::crowplexus::hscript::ExprDef_obj::EBlock(exprs1);
HXDLIN( 812)									 ::crowplexus::hscript::Expr e25 = exprs1->__get(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 812)									 ::Dynamic pmin14;
HXDLIN( 812)									if (::hx::IsNull( e25 )) {
HXLINE( 812)										pmin14 = 0;
            									}
            									else {
HXLINE( 812)										pmin14 = e25->pmin;
            									}
HXDLIN( 812)									 ::crowplexus::hscript::Expr e26 = exprs1->__get((exprs1->length - 1)).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 812)									 ::Dynamic pmax14;
HXDLIN( 812)									if (::hx::IsNull( e26 )) {
HXLINE( 812)										pmax14 = 0;
            									}
            									else {
HXLINE( 812)										pmax14 = e26->pmax;
            									}
HXDLIN( 812)									if (::hx::IsNull( e24 )) {
HXLINE( 812)										def = null();
            									}
            									else {
HXLINE( 812)										if (::hx::IsNull( pmin14 )) {
HXLINE( 812)											pmin14 = this->tokenMin;
            										}
HXDLIN( 812)										if (::hx::IsNull( pmax14 )) {
HXLINE( 812)											pmax14 = this->tokenMax;
            										}
HXDLIN( 812)										def =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e24,( (int)(pmin14) ),( (int)(pmax14) ),this->origin,this->line);
            									}
            								}
            							}
HXLINE( 794)							goto _hx_goto_51;
            						}
            						/* default */{
HXLINE( 816)							this->unexpected(tk7);
HXLINE( 817)							goto _hx_goto_50;
            						}
            						_hx_goto_51:;
            					}
            					break;
            					case (int)7: {
HXLINE( 814)						goto _hx_goto_50;
            					}
            					break;
            					default:{
HXLINE( 816)						this->unexpected(tk7);
HXLINE( 817)						goto _hx_goto_50;
            					}
            				}
            			}
            			_hx_goto_50:;
HXLINE( 820)			 ::crowplexus::hscript::ExprDef e27 = ::crowplexus::hscript::ExprDef_obj::ESwitch(parentExpr,cases,def);
HXDLIN( 820)			 ::Dynamic pmin15 = p1;
HXDLIN( 820)			 ::Dynamic pmax15 = this->tokenMax;
HXDLIN( 820)			if (::hx::IsNull( e27 )) {
HXLINE( 820)				return null();
            			}
            			else {
HXLINE( 820)				if (::hx::IsNull( pmin15 )) {
HXLINE( 820)					pmin15 = this->tokenMin;
            				}
HXDLIN( 820)				if (::hx::IsNull( pmax15 )) {
HXLINE( 820)					pmax15 = this->tokenMax;
            				}
HXDLIN( 820)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e27,( (int)(pmin15) ),( (int)(pmax15) ),this->origin,this->line);
            			}
HXLINE( 734)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("throw",26,5d,90,0f)) ){
HXLINE( 718)			 ::crowplexus::hscript::Expr e28 = this->parseExpr();
HXLINE( 719)			 ::crowplexus::hscript::ExprDef e29 = ::crowplexus::hscript::ExprDef_obj::EThrow(e28);
HXDLIN( 719)			 ::Dynamic pmin16 = p1;
HXDLIN( 719)			 ::Dynamic pmax16;
HXDLIN( 719)			if (::hx::IsNull( e28 )) {
HXLINE( 719)				pmax16 = 0;
            			}
            			else {
HXLINE( 719)				pmax16 = e28->pmax;
            			}
HXDLIN( 719)			if (::hx::IsNull( e29 )) {
HXLINE( 719)				return null();
            			}
            			else {
HXLINE( 719)				if (::hx::IsNull( pmin16 )) {
HXLINE( 719)					pmin16 = this->tokenMin;
            				}
HXDLIN( 719)				if (::hx::IsNull( pmax16 )) {
HXLINE( 719)					pmax16 = this->tokenMax;
            				}
HXDLIN( 719)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e29,( (int)(pmin16) ),( (int)(pmax16) ),this->origin,this->line);
            			}
HXLINE( 717)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("try",3b,69,58,00)) ){
HXLINE( 721)			 ::crowplexus::hscript::Expr e30 = this->parseExpr();
HXLINE( 722)			{
HXLINE( 722)				 ::crowplexus::hscript::Token t10 = this->token();
HXDLIN( 722)				if (!(__hxcpp_enum_eq(t10,::crowplexus::hscript::Token_obj::TId(HX_("catch",3b,7c,21,41))))) {
HXLINE( 722)					this->unexpected(t10);
            				}
            			}
HXLINE( 723)			{
HXLINE( 723)				 ::crowplexus::hscript::Token t11 = this->token();
HXDLIN( 723)				if (::hx::IsPointerNotEq( t11,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE( 723)					this->unexpected(t11);
            				}
            			}
HXLINE( 724)			::String vname1 = this->getIdent();
HXLINE( 725)			{
HXLINE( 725)				 ::crowplexus::hscript::Token t12 = this->token();
HXDLIN( 725)				if (::hx::IsPointerNotEq( t12,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 725)					this->unexpected(t12);
            				}
            			}
HXLINE( 726)			 ::crowplexus::hscript::CType t13 = null();
HXLINE( 727)			if (this->allowTypes) {
HXLINE( 728)				t13 = this->parseType();
            			}
            			else {
HXLINE( 730)				 ::crowplexus::hscript::Token t14 = this->token();
HXDLIN( 730)				if (!(__hxcpp_enum_eq(t14,::crowplexus::hscript::Token_obj::TId(HX_("Dynamic",5f,c7,66,03))))) {
HXLINE( 730)					this->unexpected(t14);
            				}
            			}
HXLINE( 731)			{
HXLINE( 731)				 ::crowplexus::hscript::Token t15 = this->token();
HXDLIN( 731)				if (::hx::IsPointerNotEq( t15,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE( 731)					this->unexpected(t15);
            				}
            			}
HXLINE( 732)			 ::crowplexus::hscript::Expr ec = this->parseExpr();
HXLINE( 733)			 ::crowplexus::hscript::ExprDef e31 = ::crowplexus::hscript::ExprDef_obj::ETry(e30,vname1,t13,ec);
HXDLIN( 733)			 ::Dynamic pmin17 = p1;
HXDLIN( 733)			 ::Dynamic pmax17;
HXDLIN( 733)			if (::hx::IsNull( ec )) {
HXLINE( 733)				pmax17 = 0;
            			}
            			else {
HXLINE( 733)				pmax17 = ec->pmax;
            			}
HXDLIN( 733)			if (::hx::IsNull( e31 )) {
HXLINE( 733)				return null();
            			}
            			else {
HXLINE( 733)				if (::hx::IsNull( pmin17 )) {
HXLINE( 733)					pmin17 = this->tokenMin;
            				}
HXDLIN( 733)				if (::hx::IsNull( pmax17 )) {
HXLINE( 733)					pmax17 = this->tokenMax;
            				}
HXDLIN( 733)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e31,( (int)(pmin17) ),( (int)(pmax17) ),this->origin,this->line);
            			}
HXLINE( 720)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("typedef",4b,37,d8,f8)) ){
HXLINE( 915)			::String name2 = this->getIdent();
HXLINE( 917)			{
HXLINE( 917)				 ::crowplexus::hscript::Token t16 = this->token();
HXDLIN( 917)				if (!(__hxcpp_enum_eq(t16,::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00))))) {
HXLINE( 917)					this->unexpected(t16);
            				}
            			}
HXLINE( 919)			 ::crowplexus::hscript::CType t17 = this->parseType();
HXLINE( 921)			switch((int)(t17->_hx_getIndex())){
            				case (int)0: {
HXLINE( 924)					 ::Dynamic _g3 = t17->_hx_getObject(0);
HXLINE( 925)					::Array< ::String > path1 = ( (::Array< ::String >)(_g3->__Field(HX_("pack",d9,d6,51,4a),::hx::paccDynamic)) )->concat(::Array_obj< ::String >::__new(1)->init(0, ::Dynamic(_g3->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic))));
HXLINE( 926)					::Array< ::Dynamic> params = ( (::Array< ::Dynamic>)(_g3->__Field(HX_("params",46,fb,7a,ed),::hx::paccDynamic)) );
HXLINE( 927)					bool _hx_tmp5;
HXDLIN( 927)					if (::hx::IsNotNull( params )) {
HXLINE( 927)						_hx_tmp5 = (params->length > 1);
            					}
            					else {
HXLINE( 927)						_hx_tmp5 = false;
            					}
HXDLIN( 927)					if (_hx_tmp5) {
HXLINE( 928)						if (!(this->resumeErrors)) {
HXLINE( 928)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Typedefs can't have parameters",87,c6,2a,8a)),this->tokenMin,this->tokenMax,this->origin,this->line));
            						}
            					}
HXLINE( 930)					if ((path1->length == 0)) {
HXLINE( 931)						if (!(this->resumeErrors)) {
HXLINE( 931)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Typedefs can't be empty",ab,14,b5,9d)),this->tokenMin,this->tokenMax,this->origin,this->line));
            						}
            					}
HXLINE( 933)					{
HXLINE( 934)						::String className = path1->join(HX_(".",2e,00,00,00));
HXLINE( 935)						 ::Dynamic cl = ::crowplexus::hscript::Tools_obj::getClass(className);
HXLINE( 936)						if (::hx::IsNotNull( cl )) {
HXLINE( 937)							 ::crowplexus::hscript::ExprDef e32 = ::crowplexus::hscript::ExprDef_obj::EDirectValue(cl);
HXDLIN( 937)							 ::Dynamic pmin18 = null();
HXDLIN( 937)							 ::Dynamic pmax18 = null();
HXDLIN( 937)							 ::crowplexus::hscript::Expr e33;
HXDLIN( 937)							if (::hx::IsNull( e32 )) {
HXLINE( 937)								e33 = null();
            							}
            							else {
HXLINE( 937)								pmin18 = this->tokenMin;
HXDLIN( 937)								pmax18 = this->tokenMax;
HXDLIN( 937)								e33 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e32,( (int)(pmin18) ),( (int)(pmax18) ),this->origin,this->line);
            							}
HXDLIN( 937)							 ::crowplexus::hscript::ExprDef e34 = ::crowplexus::hscript::ExprDef_obj::EVar(name2,null(),e33,null());
HXDLIN( 937)							 ::Dynamic pmin19 = null();
HXDLIN( 937)							 ::Dynamic pmax19 = null();
HXDLIN( 937)							if (::hx::IsNull( e34 )) {
HXLINE( 937)								return null();
            							}
            							else {
HXLINE( 937)								pmin19 = this->tokenMin;
HXDLIN( 937)								pmax19 = this->tokenMax;
HXDLIN( 937)								return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e34,( (int)(pmin19) ),( (int)(pmax19) ),this->origin,this->line);
            							}
            						}
            					}
HXLINE( 941)					 ::crowplexus::hscript::ExprDef e35 = ::crowplexus::hscript::ExprDef_obj::EIdent(path1->shift());
HXDLIN( 941)					 ::Dynamic pmin20 = null();
HXDLIN( 941)					 ::Dynamic pmax20 = null();
HXDLIN( 941)					 ::crowplexus::hscript::Expr expr;
HXDLIN( 941)					if (::hx::IsNull( e35 )) {
HXLINE( 941)						expr = null();
            					}
            					else {
HXLINE( 941)						pmin20 = this->tokenMin;
HXDLIN( 941)						pmax20 = this->tokenMax;
HXDLIN( 941)						expr =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e35,( (int)(pmin20) ),( (int)(pmax20) ),this->origin,this->line);
            					}
HXLINE( 942)					while((path1->length > 0)){
HXLINE( 943)						 ::crowplexus::hscript::ExprDef e36 = ::crowplexus::hscript::ExprDef_obj::EField(expr,path1->shift(),false);
HXDLIN( 943)						 ::Dynamic pmin21 = null();
HXDLIN( 943)						 ::Dynamic pmax21 = null();
HXDLIN( 943)						if (::hx::IsNull( e36 )) {
HXLINE( 943)							expr = null();
            						}
            						else {
HXLINE( 943)							pmin21 = this->tokenMin;
HXDLIN( 943)							pmax21 = this->tokenMax;
HXDLIN( 943)							expr =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e36,( (int)(pmin21) ),( (int)(pmax21) ),this->origin,this->line);
            						}
            					}
HXLINE( 947)					 ::crowplexus::hscript::ExprDef e37 = ::crowplexus::hscript::ExprDef_obj::EVar(name2,null(),expr,null());
HXDLIN( 947)					 ::Dynamic pmin22 = null();
HXDLIN( 947)					 ::Dynamic pmax22 = null();
HXDLIN( 947)					if (::hx::IsNull( e37 )) {
HXLINE( 947)						return null();
            					}
            					else {
HXLINE( 947)						pmin22 = this->tokenMin;
HXDLIN( 947)						pmax22 = this->tokenMax;
HXDLIN( 947)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e37,( (int)(pmin22) ),( (int)(pmax22) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)1: {
HXLINE( 923)					 ::crowplexus::hscript::ExprDef e38 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 923)					 ::Dynamic pmin23 = null();
HXDLIN( 923)					 ::Dynamic pmax23 = null();
HXDLIN( 923)					if (::hx::IsNull( e38 )) {
HXLINE( 923)						return null();
            					}
            					else {
HXLINE( 923)						pmin23 = this->tokenMin;
HXDLIN( 923)						pmax23 = this->tokenMax;
HXDLIN( 923)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e38,( (int)(pmin23) ),( (int)(pmax23) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)2: {
HXLINE( 923)					 ::crowplexus::hscript::ExprDef e39 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 923)					 ::Dynamic pmin24 = null();
HXDLIN( 923)					 ::Dynamic pmax24 = null();
HXDLIN( 923)					if (::hx::IsNull( e39 )) {
HXLINE( 923)						return null();
            					}
            					else {
HXLINE( 923)						pmin24 = this->tokenMin;
HXDLIN( 923)						pmax24 = this->tokenMax;
HXDLIN( 923)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e39,( (int)(pmin24) ),( (int)(pmax24) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)3: {
HXLINE( 923)					 ::crowplexus::hscript::ExprDef e40 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 923)					 ::Dynamic pmin25 = null();
HXDLIN( 923)					 ::Dynamic pmax25 = null();
HXDLIN( 923)					if (::hx::IsNull( e40 )) {
HXLINE( 923)						return null();
            					}
            					else {
HXLINE( 923)						pmin25 = this->tokenMin;
HXDLIN( 923)						pmax25 = this->tokenMax;
HXDLIN( 923)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e40,( (int)(pmin25) ),( (int)(pmax25) ),this->origin,this->line);
            					}
            				}
            				break;
            				case (int)7: {
HXLINE( 923)					 ::crowplexus::hscript::ExprDef e41 = ::crowplexus::hscript::ExprDef_obj::EIgnore(true);
HXDLIN( 923)					 ::Dynamic pmin26 = null();
HXDLIN( 923)					 ::Dynamic pmax26 = null();
HXDLIN( 923)					if (::hx::IsNull( e41 )) {
HXLINE( 923)						return null();
            					}
            					else {
HXLINE( 923)						pmin26 = this->tokenMin;
HXDLIN( 923)						pmax26 = this->tokenMax;
HXDLIN( 923)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e41,( (int)(pmin26) ),( (int)(pmax26) ),this->origin,this->line);
            					}
            				}
            				break;
            				default:{
HXLINE( 949)					{
HXLINE( 949)						 ::crowplexus::hscript::ErrorDef err = ::crowplexus::hscript::ErrorDef_obj::ECustom((HX_("Typedef, unknown type ",51,ad,fa,44) + ::Std_obj::string(t17)));
HXDLIN( 949)						if (!(this->resumeErrors)) {
HXLINE( 949)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,this->tokenMin,this->tokenMax,this->origin,this->line));
            						}
            					}
HXLINE( 950)					return null();
            				}
            			}
HXLINE( 902)			goto _hx_goto_46;
            		}
            		if (  (_hx_switch_0==HX_("while",b1,43,bd,c9)) ){
HXLINE( 659)			 ::crowplexus::hscript::Expr econd1 = this->parseExpr();
HXLINE( 660)			 ::crowplexus::hscript::Expr e42 = this->parseExpr();
HXLINE( 661)			 ::crowplexus::hscript::ExprDef e43 = ::crowplexus::hscript::ExprDef_obj::EWhile(econd1,e42);
HXDLIN( 661)			 ::Dynamic pmin27 = p1;
HXDLIN( 661)			 ::Dynamic pmax27;
HXDLIN( 661)			if (::hx::IsNull( e42 )) {
HXLINE( 661)				pmax27 = 0;
            			}
            			else {
HXLINE( 661)				pmax27 = e42->pmax;
            			}
HXDLIN( 661)			if (::hx::IsNull( e43 )) {
HXLINE( 661)				return null();
            			}
            			else {
HXLINE( 661)				if (::hx::IsNull( pmin27 )) {
HXLINE( 661)					pmin27 = this->tokenMin;
            				}
HXDLIN( 661)				if (::hx::IsNull( pmax27 )) {
HXLINE( 661)					pmax27 = this->tokenMax;
            				}
HXDLIN( 661)				return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e43,( (int)(pmin27) ),( (int)(pmax27) ),this->origin,this->line);
            			}
HXLINE( 658)			goto _hx_goto_46;
            		}
            		/* default */{
HXLINE( 953)			return null();
            		}
            		_hx_goto_46:;
HXLINE( 623)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseStructure,return )

 ::crowplexus::hscript::Expr Parser_obj::parseExprNext( ::crowplexus::hscript::Expr e1){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_957_parseExprNext)
HXLINE( 958)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE( 959)		switch((int)(tk->_hx_getIndex())){
            			case (int)3: {
HXLINE( 960)				::String _g = tk->_hx_getString(0);
HXLINE( 961)				if ((_g == HX_("->",71,27,00,00))) {
HXLINE( 963)					{
HXLINE( 963)						 ::crowplexus::hscript::ExprDef _g1 = e1->e;
HXDLIN( 963)						switch((int)(_g1->_hx_getIndex())){
            							case (int)2: {
HXLINE( 965)								 ::crowplexus::hscript::Expr eret = this->parseExpr();
HXLINE( 966)								 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EReturn(eret);
HXDLIN( 966)								 ::Dynamic pmin;
HXDLIN( 966)								if (::hx::IsNull( eret )) {
HXLINE( 966)									pmin = 0;
            								}
            								else {
HXLINE( 966)									pmin = eret->pmin;
            								}
HXDLIN( 966)								 ::Dynamic pmax = null();
HXDLIN( 966)								 ::crowplexus::hscript::Expr e2;
HXDLIN( 966)								if (::hx::IsNull( e )) {
HXLINE( 966)									e2 = null();
            								}
            								else {
HXLINE( 966)									if (::hx::IsNull( pmin )) {
HXLINE( 966)										pmin = this->tokenMin;
            									}
HXDLIN( 966)									pmax = this->tokenMax;
HXDLIN( 966)									e2 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            								}
HXDLIN( 966)								 ::crowplexus::hscript::ExprDef e3 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            									->setFixed(0,HX_("name",4b,72,ff,48),_g1->_hx_getString(0)))),e2,null(),null());
HXDLIN( 966)								 ::Dynamic pmin1;
HXDLIN( 966)								if (::hx::IsNull( e1 )) {
HXLINE( 966)									pmin1 = 0;
            								}
            								else {
HXLINE( 966)									pmin1 = e1->pmin;
            								}
HXDLIN( 966)								 ::Dynamic pmax1 = null();
HXDLIN( 966)								if (::hx::IsNull( e3 )) {
HXLINE( 966)									return null();
            								}
            								else {
HXLINE( 966)									if (::hx::IsNull( pmin1 )) {
HXLINE( 966)										pmin1 = this->tokenMin;
            									}
HXDLIN( 966)									pmax1 = this->tokenMax;
HXDLIN( 966)									return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e3,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            								}
            							}
            							break;
            							case (int)5: {
HXLINE( 964)								 ::crowplexus::hscript::ExprDef _hx_tmp = _g1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()->e;
HXDLIN( 964)								if ((_hx_tmp->_hx_getIndex() == 2)) {
HXLINE( 965)									 ::crowplexus::hscript::Expr eret1 = this->parseExpr();
HXLINE( 966)									 ::crowplexus::hscript::ExprDef e4 = ::crowplexus::hscript::ExprDef_obj::EReturn(eret1);
HXDLIN( 966)									 ::Dynamic pmin2;
HXDLIN( 966)									if (::hx::IsNull( eret1 )) {
HXLINE( 966)										pmin2 = 0;
            									}
            									else {
HXLINE( 966)										pmin2 = eret1->pmin;
            									}
HXDLIN( 966)									 ::Dynamic pmax2 = null();
HXDLIN( 966)									 ::crowplexus::hscript::Expr e5;
HXDLIN( 966)									if (::hx::IsNull( e4 )) {
HXLINE( 966)										e5 = null();
            									}
            									else {
HXLINE( 966)										if (::hx::IsNull( pmin2 )) {
HXLINE( 966)											pmin2 = this->tokenMin;
            										}
HXDLIN( 966)										pmax2 = this->tokenMax;
HXDLIN( 966)										e5 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e4,( (int)(pmin2) ),( (int)(pmax2) ),this->origin,this->line);
            									}
HXDLIN( 966)									 ::crowplexus::hscript::ExprDef e6 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(1)
            										->setFixed(0,HX_("name",4b,72,ff,48),_hx_tmp->_hx_getString(0)))),e5,null(),null());
HXDLIN( 966)									 ::Dynamic pmin3;
HXDLIN( 966)									if (::hx::IsNull( e1 )) {
HXLINE( 966)										pmin3 = 0;
            									}
            									else {
HXLINE( 966)										pmin3 = e1->pmin;
            									}
HXDLIN( 966)									 ::Dynamic pmax3 = null();
HXDLIN( 966)									if (::hx::IsNull( e6 )) {
HXLINE( 966)										return null();
            									}
            									else {
HXLINE( 966)										if (::hx::IsNull( pmin3 )) {
HXLINE( 966)											pmin3 = this->tokenMin;
            										}
HXDLIN( 966)										pmax3 = this->tokenMax;
HXDLIN( 966)										return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e6,( (int)(pmin3) ),( (int)(pmax3) ),this->origin,this->line);
            									}
            								}
            							}
            							break;
            							case (int)28: {
HXLINE( 967)								 ::crowplexus::hscript::ExprDef _hx_tmp1 = _g1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >()->e;
HXDLIN( 967)								if ((_hx_tmp1->_hx_getIndex() == 2)) {
HXLINE( 968)									 ::crowplexus::hscript::Expr eret2 = this->parseExpr();
HXLINE( 969)									 ::crowplexus::hscript::ExprDef e7 = ::crowplexus::hscript::ExprDef_obj::EReturn(eret2);
HXDLIN( 969)									 ::Dynamic pmin4;
HXDLIN( 969)									if (::hx::IsNull( eret2 )) {
HXLINE( 969)										pmin4 = 0;
            									}
            									else {
HXLINE( 969)										pmin4 = eret2->pmin;
            									}
HXDLIN( 969)									 ::Dynamic pmax4 = null();
HXDLIN( 969)									 ::crowplexus::hscript::Expr e8;
HXDLIN( 969)									if (::hx::IsNull( e7 )) {
HXLINE( 969)										e8 = null();
            									}
            									else {
HXLINE( 969)										if (::hx::IsNull( pmin4 )) {
HXLINE( 969)											pmin4 = this->tokenMin;
            										}
HXDLIN( 969)										pmax4 = this->tokenMax;
HXDLIN( 969)										e8 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e7,( (int)(pmin4) ),( (int)(pmax4) ),this->origin,this->line);
            									}
HXDLIN( 969)									 ::crowplexus::hscript::ExprDef e9 = ::crowplexus::hscript::ExprDef_obj::EFunction(::Array_obj< ::Dynamic>::__new(1)->init(0, ::Dynamic(::hx::Anon_obj::Create(2)
            										->setFixed(0,HX_("t",74,00,00,00),_g1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::CType >())
            										->setFixed(1,HX_("name",4b,72,ff,48),_hx_tmp1->_hx_getString(0)))),e8,null(),null());
HXDLIN( 969)									 ::Dynamic pmin5;
HXDLIN( 969)									if (::hx::IsNull( e1 )) {
HXLINE( 969)										pmin5 = 0;
            									}
            									else {
HXLINE( 969)										pmin5 = e1->pmin;
            									}
HXDLIN( 969)									 ::Dynamic pmax5 = null();
HXDLIN( 969)									if (::hx::IsNull( e9 )) {
HXLINE( 969)										return null();
            									}
            									else {
HXLINE( 969)										if (::hx::IsNull( pmin5 )) {
HXLINE( 969)											pmin5 = this->tokenMin;
            										}
HXDLIN( 969)										pmax5 = this->tokenMax;
HXDLIN( 969)										return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e9,( (int)(pmin5) ),( (int)(pmax5) ),this->origin,this->line);
            									}
            								}
            							}
            							break;
            							default:{
            							}
            						}
            					}
HXLINE( 972)					this->unexpected(tk);
            				}
HXLINE( 975)				if (::hx::IsEq( this->opPriority->get(_g),-1 )) {
HXLINE( 976)					bool _hx_tmp2;
HXDLIN( 976)					if (!(this->isBlock(e1))) {
HXLINE( 976)						if ((e1->e->_hx_getIndex() == 5)) {
HXLINE( 976)							_hx_tmp2 = true;
            						}
            						else {
HXLINE( 976)							_hx_tmp2 = false;
            						}
            					}
            					else {
HXLINE( 976)						_hx_tmp2 = true;
            					}
HXDLIN( 976)					if (_hx_tmp2) {
HXLINE( 980)						{
HXLINE( 980)							this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN( 980)							this->tokenMin = this->oldTokenMin;
HXDLIN( 980)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE( 981)						return e1;
            					}
HXLINE( 983)					 ::crowplexus::hscript::ExprDef e10 = ::crowplexus::hscript::ExprDef_obj::EUnop(_g,false,e1);
HXDLIN( 983)					 ::Dynamic pmin6;
HXDLIN( 983)					if (::hx::IsNull( e1 )) {
HXLINE( 983)						pmin6 = 0;
            					}
            					else {
HXLINE( 983)						pmin6 = e1->pmin;
            					}
HXDLIN( 983)					 ::Dynamic pmax6 = null();
HXDLIN( 983)					 ::crowplexus::hscript::Expr _hx_tmp3;
HXDLIN( 983)					if (::hx::IsNull( e10 )) {
HXLINE( 983)						_hx_tmp3 = null();
            					}
            					else {
HXLINE( 983)						if (::hx::IsNull( pmin6 )) {
HXLINE( 983)							pmin6 = this->tokenMin;
            						}
HXDLIN( 983)						pmax6 = this->tokenMax;
HXDLIN( 983)						_hx_tmp3 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e10,( (int)(pmin6) ),( (int)(pmax6) ),this->origin,this->line);
            					}
HXDLIN( 983)					return this->parseExprNext(_hx_tmp3);
            				}
HXLINE( 985)				return this->makeBinop(_g,e1,this->parseExpr());
            			}
            			break;
            			case (int)4: {
HXLINE( 990)				 ::crowplexus::hscript::ExprDef e11 = ::crowplexus::hscript::ExprDef_obj::ECall(e1,this->parseExprList(::crowplexus::hscript::Token_obj::TPClose_dyn()));
HXDLIN( 990)				 ::Dynamic pmin7;
HXDLIN( 990)				if (::hx::IsNull( e1 )) {
HXLINE( 990)					pmin7 = 0;
            				}
            				else {
HXLINE( 990)					pmin7 = e1->pmin;
            				}
HXDLIN( 990)				 ::Dynamic pmax7 = null();
HXDLIN( 990)				 ::crowplexus::hscript::Expr _hx_tmp4;
HXDLIN( 990)				if (::hx::IsNull( e11 )) {
HXLINE( 990)					_hx_tmp4 = null();
            				}
            				else {
HXLINE( 990)					if (::hx::IsNull( pmin7 )) {
HXLINE( 990)						pmin7 = this->tokenMin;
            					}
HXDLIN( 990)					pmax7 = this->tokenMax;
HXDLIN( 990)					_hx_tmp4 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e11,( (int)(pmin7) ),( (int)(pmax7) ),this->origin,this->line);
            				}
HXDLIN( 990)				return this->parseExprNext(_hx_tmp4);
            			}
            			break;
            			case (int)11: {
HXLINE( 992)				 ::crowplexus::hscript::Expr e21 = this->parseExpr();
HXLINE( 993)				{
HXLINE( 993)					 ::crowplexus::hscript::Token t = this->token();
HXDLIN( 993)					if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TBkClose_dyn() )) {
HXLINE( 993)						this->unexpected(t);
            					}
            				}
HXLINE( 994)				 ::crowplexus::hscript::ExprDef e12 = ::crowplexus::hscript::ExprDef_obj::EArray(e1,e21);
HXDLIN( 994)				 ::Dynamic pmin8;
HXDLIN( 994)				if (::hx::IsNull( e1 )) {
HXLINE( 994)					pmin8 = 0;
            				}
            				else {
HXLINE( 994)					pmin8 = e1->pmin;
            				}
HXDLIN( 994)				 ::Dynamic pmax8 = null();
HXDLIN( 994)				 ::crowplexus::hscript::Expr _hx_tmp5;
HXDLIN( 994)				if (::hx::IsNull( e12 )) {
HXLINE( 994)					_hx_tmp5 = null();
            				}
            				else {
HXLINE( 994)					if (::hx::IsNull( pmin8 )) {
HXLINE( 994)						pmin8 = this->tokenMin;
            					}
HXDLIN( 994)					pmax8 = this->tokenMax;
HXDLIN( 994)					_hx_tmp5 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e12,( (int)(pmin8) ),( (int)(pmax8) ),this->origin,this->line);
            				}
HXDLIN( 994)				return this->parseExprNext(_hx_tmp5);
            			}
            			break;
            			case (int)13: {
HXLINE( 996)				 ::crowplexus::hscript::Expr e22 = this->parseExpr();
HXLINE( 997)				{
HXLINE( 997)					 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN( 997)					if (::hx::IsPointerNotEq( t1,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE( 997)						this->unexpected(t1);
            					}
            				}
HXLINE( 998)				 ::crowplexus::hscript::Expr e31 = this->parseExpr();
HXLINE( 999)				 ::crowplexus::hscript::ExprDef e13 = ::crowplexus::hscript::ExprDef_obj::ETernary(e1,e22,e31);
HXDLIN( 999)				 ::Dynamic pmin9;
HXDLIN( 999)				if (::hx::IsNull( e1 )) {
HXLINE( 999)					pmin9 = 0;
            				}
            				else {
HXLINE( 999)					pmin9 = e1->pmin;
            				}
HXDLIN( 999)				 ::Dynamic pmax9;
HXDLIN( 999)				if (::hx::IsNull( e31 )) {
HXLINE( 999)					pmax9 = 0;
            				}
            				else {
HXLINE( 999)					pmax9 = e31->pmax;
            				}
HXDLIN( 999)				if (::hx::IsNull( e13 )) {
HXLINE( 999)					return null();
            				}
            				else {
HXLINE( 999)					if (::hx::IsNull( pmin9 )) {
HXLINE( 999)						pmin9 = this->tokenMin;
            					}
HXDLIN( 999)					if (::hx::IsNull( pmax9 )) {
HXLINE( 999)						pmax9 = this->tokenMax;
            					}
HXDLIN( 999)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e13,( (int)(pmin9) ),( (int)(pmax9) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)8: case (int)17: {
HXLINE( 988)				 ::crowplexus::hscript::ExprDef e14 = ::crowplexus::hscript::ExprDef_obj::EField(e1,this->getIdent(),::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TQuestionDot_dyn() ));
HXDLIN( 988)				 ::Dynamic pmin10;
HXDLIN( 988)				if (::hx::IsNull( e1 )) {
HXLINE( 988)					pmin10 = 0;
            				}
            				else {
HXLINE( 988)					pmin10 = e1->pmin;
            				}
HXDLIN( 988)				 ::Dynamic pmax10 = null();
HXDLIN( 988)				 ::crowplexus::hscript::Expr _hx_tmp6;
HXDLIN( 988)				if (::hx::IsNull( e14 )) {
HXLINE( 988)					_hx_tmp6 = null();
            				}
            				else {
HXLINE( 988)					if (::hx::IsNull( pmin10 )) {
HXLINE( 988)						pmin10 = this->tokenMin;
            					}
HXDLIN( 988)					pmax10 = this->tokenMax;
HXDLIN( 988)					_hx_tmp6 =  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e14,( (int)(pmin10) ),( (int)(pmax10) ),this->origin,this->line);
            				}
HXDLIN( 988)				return this->parseExprNext(_hx_tmp6);
            			}
            			break;
            			default:{
HXLINE(1001)				{
HXLINE(1001)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1001)					this->tokenMin = this->oldTokenMin;
HXDLIN(1001)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1002)				return e1;
            			}
            		}
HXLINE( 959)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseExprNext,return )

::Array< ::Dynamic> Parser_obj::parseFunctionArgs(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1006_parseFunctionArgs)
HXLINE(1007)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new();
HXLINE(1008)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1009)		if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1010)			bool done = false;
HXLINE(1011)			while(!(done)){
HXLINE(1012)				::String name = null();
HXDLIN(1012)				bool opt = false;
HXLINE(1013)				if ((tk->_hx_getIndex() == 13)) {
HXLINE(1015)					opt = true;
HXLINE(1016)					tk = this->token();
            				}
HXLINE(1019)				if ((tk->_hx_getIndex() == 2)) {
HXLINE(1021)					name = tk->_hx_getString(0);
            				}
            				else {
HXLINE(1023)					this->unexpected(tk);
HXLINE(1024)					goto _hx_goto_61;
            				}
HXLINE(1026)				 ::Dynamic arg =  ::Dynamic(::hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("name",4b,72,ff,48),name));
HXLINE(1027)				args->push(arg);
HXLINE(1028)				if (opt) {
HXLINE(1029)					arg->__SetField(HX_("opt",33,9c,54,00),true,::hx::paccDynamic);
            				}
HXLINE(1030)				if (this->allowTypes) {
HXLINE(1031)					if (this->maybe(::crowplexus::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE(1032)						arg->__SetField(HX_("t",74,00,00,00),this->parseType(),::hx::paccDynamic);
            					}
HXLINE(1033)					if (this->maybe(::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE(1034)						arg->__SetField(HX_("value",71,7f,b8,31),this->parseExpr(),::hx::paccDynamic);
            					}
            				}
HXLINE(1036)				tk = this->token();
HXLINE(1037)				switch((int)(tk->_hx_getIndex())){
            					case (int)5: {
HXLINE(1041)						done = true;
            					}
            					break;
            					case (int)9: {
HXLINE(1039)						tk = this->token();
            					}
            					break;
            					default:{
HXLINE(1043)						this->unexpected(tk);
            					}
            				}
            			}
            			_hx_goto_61:;
            		}
HXLINE(1047)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseFunctionArgs,return )

 ::Dynamic Parser_obj::parseFunctionDecl(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1050_parseFunctionDecl)
HXLINE(1051)		{
HXLINE(1051)			 ::crowplexus::hscript::Token t = this->token();
HXDLIN(1051)			if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TPOpen_dyn() )) {
HXLINE(1051)				this->unexpected(t);
            			}
            		}
HXLINE(1052)		::Array< ::Dynamic> args = this->parseFunctionArgs();
HXLINE(1053)		 ::crowplexus::hscript::CType ret = null();
HXLINE(1054)		if (this->allowTypes) {
HXLINE(1055)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1056)			if (::hx::IsPointerNotEq( tk,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE(1057)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1057)				this->tokenMin = this->oldTokenMin;
HXDLIN(1057)				this->tokenMax = this->oldTokenMax;
            			}
            			else {
HXLINE(1059)				ret = this->parseType();
            			}
            		}
HXLINE(1061)		return  ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("ret",61,d9,56,00),ret)
            			->setFixed(1,HX_("args",5d,8d,74,40),args)
            			->setFixed(2,HX_("body",a2,7a,1b,41),this->parseExpr()));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseFunctionDecl,return )

::Array< ::String > Parser_obj::parsePath(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1064_parsePath)
HXLINE(1065)		::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE(1066)		while(true){
HXLINE(1067)			 ::crowplexus::hscript::Token t = this->token();
HXLINE(1068)			if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TDot_dyn() )) {
HXLINE(1069)				{
HXLINE(1069)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1069)					this->tokenMin = this->oldTokenMin;
HXDLIN(1069)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1070)				goto _hx_goto_64;
            			}
HXLINE(1072)			path->push(this->getIdent());
            		}
            		_hx_goto_64:;
HXLINE(1074)		return path;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parsePath,return )

 ::crowplexus::hscript::CType Parser_obj::parseType(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1077_parseType)
HXDLIN(1077)		 ::crowplexus::hscript::Parser _gthis = ::hx::ObjectPtr<OBJ_>(this);
HXLINE(1078)		 ::crowplexus::hscript::Token t = this->token();
HXLINE(1079)		switch((int)(t->_hx_getIndex())){
            			case (int)2: {
HXLINE(1081)				{
HXLINE(1081)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1081)					this->tokenMin = this->oldTokenMin;
HXDLIN(1081)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1082)				::Array< ::String > path = this->parsePath();
HXLINE(1083)				::String name = ( (::String)(path->pop()) );
HXLINE(1084)				::Array< ::Dynamic> params = null();
HXLINE(1085)				t = this->token();
HXLINE(1086)				if ((t->_hx_getIndex() == 3)) {
HXLINE(1088)					if ((t->_hx_getString(0) == HX_("<",3c,00,00,00))) {
HXLINE(1089)						params = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1090)						while(true){
HXLINE(1091)							params->push(this->parseType());
HXLINE(1092)							t = this->token();
HXLINE(1093)							switch((int)(t->_hx_getIndex())){
            								case (int)3: {
HXLINE(1095)									::String _g = t->_hx_getString(0);
HXDLIN(1095)									{
HXLINE(1096)										if ((_g == HX_(">",3e,00,00,00))) {
HXLINE(1097)											goto _hx_goto_66;
            										}
HXLINE(1098)										if (::hx::IsEq( _g.charCodeAt(0),62 )) {
HXLINE(1100)											 ::haxe::ds::List _hx_tmp = this->tokens;
HXDLIN(1100)											 ::crowplexus::hscript::Token _hx_tmp1 = ::crowplexus::hscript::Token_obj::TOp(_g.substr(1,null()));
HXDLIN(1100)											_hx_tmp->add( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,_hx_tmp1,((this->tokenMax - _g.length) - 1),this->tokenMax));
HXLINE(1104)											goto _hx_goto_66;
            										}
            									}
            								}
            								break;
            								case (int)9: {
HXLINE(1094)									continue;
            								}
            								break;
            								default:{
            								}
            							}
HXLINE(1108)							this->unexpected(t);
HXLINE(1109)							goto _hx_goto_66;
            						}
            						_hx_goto_66:;
            					}
            					else {
HXLINE(1111)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1111)						this->tokenMin = this->oldTokenMin;
HXDLIN(1111)						this->tokenMax = this->oldTokenMax;
            					}
            				}
            				else {
HXLINE(1113)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1113)					this->tokenMin = this->oldTokenMin;
HXDLIN(1113)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1115)				return this->parseTypeNext(::crowplexus::hscript::CType_obj::CTPath( ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("params",46,fb,7a,ed),params)
            					->setFixed(1,HX_("sub",80,a9,57,00),null())
            					->setFixed(2,HX_("name",4b,72,ff,48),name)
            					->setFixed(3,HX_("pack",d9,d6,51,4a),path))));
            			}
            			break;
            			case (int)4: {
            				HX_BEGIN_LOCAL_FUNC_S1(::hx::LocalFunc,_hx_Closure_0, ::crowplexus::hscript::Parser,_gthis) HXARGC(1)
            				 ::crowplexus::hscript::CType _hx_run(::Array< ::Dynamic> args){
            					HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1127_parseType)
HXLINE(1128)					{
HXLINE(1128)						 ::crowplexus::hscript::Token _g = _gthis->token();
HXDLIN(1128)						if ((_g->_hx_getIndex() == 3)) {
HXLINE(1129)							if ((_g->_hx_getString(0) != HX_("->",71,27,00,00))) {
HXLINE(1131)								_gthis->unexpected(_g);
            							}
            						}
            						else {
HXLINE(1131)							_gthis->unexpected(_g);
            						}
            					}
HXLINE(1134)					return ::crowplexus::hscript::CType_obj::CTFun(args,_gthis->parseType());
            				}
            				HX_END_LOCAL_FUNC1(return)

HXLINE(1122)				 ::crowplexus::hscript::Token a = this->token();
HXDLIN(1122)				 ::crowplexus::hscript::Token b = this->token();
HXLINE(1124)				{
HXLINE(1124)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,b,this->tokenMin,this->tokenMax));
HXDLIN(1124)					this->tokenMin = this->oldTokenMin;
HXDLIN(1124)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1125)				{
HXLINE(1125)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,a,this->tokenMin,this->tokenMax));
HXDLIN(1125)					this->tokenMin = this->oldTokenMin;
HXDLIN(1125)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1127)				 ::Dynamic withReturn =  ::Dynamic(new _hx_Closure_0(_gthis));
HXLINE(1137)				switch((int)(a->_hx_getIndex())){
            					case (int)2: {
HXLINE(1137)						if ((b->_hx_getIndex() == 14)) {
HXLINE(1139)							::Array< ::Dynamic> _g1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1140)							{
HXLINE(1140)								int _g2 = 0;
HXDLIN(1140)								::Array< ::Dynamic> _g3 = this->parseFunctionArgs();
HXDLIN(1140)								while((_g2 < _g3->length)){
HXLINE(1140)									 ::Dynamic arg = _g3->__get(_g2);
HXDLIN(1140)									_g2 = (_g2 + 1);
HXLINE(1141)									{
HXLINE(1141)										 ::crowplexus::hscript::Expr _g4 = ( ( ::crowplexus::hscript::Expr)(arg->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic)) );
HXLINE(1142)										if (::hx::IsNotNull( _g4 )) {
HXLINE(1144)											if (!(this->resumeErrors)) {
HXLINE(1144)												HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Default values not allowed in function types",28,46,7a,e6)),_g4->pmin,_g4->pmax,this->origin,this->line));
            											}
            										}
            									}
HXLINE(1147)									 ::crowplexus::hscript::CType _hx_tmp2;
HXDLIN(1147)									if (( (bool)(arg->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE(1147)										_hx_tmp2 = ::crowplexus::hscript::CType_obj::CTOpt( ::Dynamic(arg->__Field(HX_("t",74,00,00,00),::hx::paccDynamic)));
            									}
            									else {
HXLINE(1147)										_hx_tmp2 = arg->__Field(HX_("t",74,00,00,00),::hx::paccDynamic);
            									}
HXDLIN(1147)									_g1->push(::crowplexus::hscript::CType_obj::CTNamed( ::Dynamic(arg->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)),_hx_tmp2));
            								}
            							}
HXLINE(1151)							return withReturn(_g1);
            						}
            						else {
HXLINE(1153)							 ::crowplexus::hscript::CType t1 = this->parseType();
HXLINE(1154)							 ::crowplexus::hscript::Token _g5 = this->token();
HXDLIN(1154)							switch((int)(_g5->_hx_getIndex())){
            								case (int)5: {
HXLINE(1166)									return this->parseTypeNext(::crowplexus::hscript::CType_obj::CTParent(t1));
            								}
            								break;
            								case (int)9: {
HXLINE(1156)									::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new(1)->init(0,t1);
HXLINE(1158)									do {
HXLINE(1159)										args->push(this->parseType());
            									} while(this->maybe(::crowplexus::hscript::Token_obj::TComma_dyn()));
;
HXLINE(1163)									{
HXLINE(1163)										 ::crowplexus::hscript::Token t2 = this->token();
HXDLIN(1163)										if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1163)											this->unexpected(t2);
            										}
            									}
HXLINE(1164)									return withReturn(args);
            								}
            								break;
            								default:{
HXLINE(1167)									return this->unexpected(_g5);
            								}
            							}
            						}
            					}
            					break;
            					case (int)5: {
HXLINE(1139)						::Array< ::Dynamic> _g6 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1140)						{
HXLINE(1140)							int _g7 = 0;
HXDLIN(1140)							::Array< ::Dynamic> _g8 = this->parseFunctionArgs();
HXDLIN(1140)							while((_g7 < _g8->length)){
HXLINE(1140)								 ::Dynamic arg1 = _g8->__get(_g7);
HXDLIN(1140)								_g7 = (_g7 + 1);
HXLINE(1141)								{
HXLINE(1141)									 ::crowplexus::hscript::Expr _g9 = ( ( ::crowplexus::hscript::Expr)(arg1->__Field(HX_("value",71,7f,b8,31),::hx::paccDynamic)) );
HXLINE(1142)									if (::hx::IsNotNull( _g9 )) {
HXLINE(1144)										if (!(this->resumeErrors)) {
HXLINE(1144)											HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::ECustom(HX_("Default values not allowed in function types",28,46,7a,e6)),_g9->pmin,_g9->pmax,this->origin,this->line));
            										}
            									}
            								}
HXLINE(1147)								 ::crowplexus::hscript::CType _hx_tmp3;
HXDLIN(1147)								if (( (bool)(arg1->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) )) {
HXLINE(1147)									_hx_tmp3 = ::crowplexus::hscript::CType_obj::CTOpt( ::Dynamic(arg1->__Field(HX_("t",74,00,00,00),::hx::paccDynamic)));
            								}
            								else {
HXLINE(1147)									_hx_tmp3 = arg1->__Field(HX_("t",74,00,00,00),::hx::paccDynamic);
            								}
HXDLIN(1147)								_g6->push(::crowplexus::hscript::CType_obj::CTNamed( ::Dynamic(arg1->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)),_hx_tmp3));
            							}
            						}
HXLINE(1151)						return withReturn(_g6);
            					}
            					break;
            					default:{
HXLINE(1153)						 ::crowplexus::hscript::CType t3 = this->parseType();
HXLINE(1154)						 ::crowplexus::hscript::Token _g10 = this->token();
HXDLIN(1154)						switch((int)(_g10->_hx_getIndex())){
            							case (int)5: {
HXLINE(1166)								return this->parseTypeNext(::crowplexus::hscript::CType_obj::CTParent(t3));
            							}
            							break;
            							case (int)9: {
HXLINE(1156)								::Array< ::Dynamic> args1 = ::Array_obj< ::Dynamic>::__new(1)->init(0,t3);
HXLINE(1158)								do {
HXLINE(1159)									args1->push(this->parseType());
            								} while(this->maybe(::crowplexus::hscript::Token_obj::TComma_dyn()));
;
HXLINE(1163)								{
HXLINE(1163)									 ::crowplexus::hscript::Token t4 = this->token();
HXDLIN(1163)									if (::hx::IsPointerNotEq( t4,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1163)										this->unexpected(t4);
            									}
            								}
HXLINE(1164)								return withReturn(args1);
            							}
            							break;
            							default:{
HXLINE(1167)								return this->unexpected(_g10);
            							}
            						}
            					}
            				}
            			}
            			break;
            			case (int)6: {
HXLINE(1172)				::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1173)				::Array< ::Dynamic> tps = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1174)				::Array< ::Dynamic> meta = null();
HXLINE(1175)				while(true){
HXLINE(1176)					t = this->token();
HXLINE(1177)					switch((int)(t->_hx_getIndex())){
            						case (int)2: {
HXLINE(1185)							::String _g11 = t->_hx_getString(0);
HXDLIN(1185)							if ((_g11 == HX_("var",e7,de,59,00))) {
HXLINE(1180)								::String name1 = this->getIdent();
HXLINE(1181)								{
HXLINE(1181)									 ::crowplexus::hscript::Token t5 = this->token();
HXDLIN(1181)									if (::hx::IsPointerNotEq( t5,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE(1181)										this->unexpected(t5);
            									}
            								}
HXLINE(1182)								fields->push( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("t",74,00,00,00),this->parseType())
            									->setFixed(1,HX_("meta",c5,4a,59,48),meta)
            									->setFixed(2,HX_("name",4b,72,ff,48),name1)));
HXLINE(1183)								meta = null();
HXLINE(1184)								{
HXLINE(1184)									 ::crowplexus::hscript::Token t6 = this->token();
HXDLIN(1184)									if (::hx::IsPointerNotEq( t6,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1184)										this->unexpected(t6);
            									}
            								}
            							}
            							else {
HXLINE(1186)								{
HXLINE(1186)									 ::crowplexus::hscript::Token t7 = this->token();
HXDLIN(1186)									if (::hx::IsPointerNotEq( t7,::crowplexus::hscript::Token_obj::TDoubleDot_dyn() )) {
HXLINE(1186)										this->unexpected(t7);
            									}
            								}
HXLINE(1187)								fields->push( ::Dynamic(::hx::Anon_obj::Create(3)
            									->setFixed(0,HX_("t",74,00,00,00),this->parseType())
            									->setFixed(1,HX_("meta",c5,4a,59,48),meta)
            									->setFixed(2,HX_("name",4b,72,ff,48),_g11)));
HXLINE(1188)								t = this->token();
HXLINE(1189)								switch((int)(t->_hx_getIndex())){
            									case (int)7: {
HXLINE(1191)										goto _hx_goto_71;
            									}
            									break;
            									case (int)9: {
            									}
            									break;
            									default:{
HXLINE(1192)										this->unexpected(t);
            									}
            								}
            							}
            						}
            						break;
            						case (int)3: {
HXLINE(1198)							if ((t->_hx_getString(0) == HX_(">",3e,00,00,00))) {
HXLINE(1199)								 ::crowplexus::hscript::CType tp = this->parseType();
HXLINE(1200)								if ((tp->_hx_getIndex() == 0)) {
HXLINE(1202)									tps->push(tp->_hx_getObject(0));
            								}
            								else {
HXLINE(1204)									this->unexpected(t);
            								}
HXLINE(1206)								t = this->token();
HXLINE(1207)								switch((int)(t->_hx_getIndex())){
            									case (int)7: {
HXLINE(1209)										goto _hx_goto_71;
            									}
            									break;
            									case (int)9: {
            									}
            									break;
            									default:{
HXLINE(1210)										this->unexpected(t);
            									}
            								}
            							}
            							else {
HXLINE(1213)								::haxe::Log_obj::trace(t, ::Dynamic(::hx::Anon_obj::Create(5)
            									->setFixed(0,HX_("className",a3,92,3d,dc),HX_("crowplexus.hscript.Parser",64,46,ff,14))
            									->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(2)->init(0,fields)->init(1,tps))
            									->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("parseType",8d,44,af,d4))
            									->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("../crowplexus/hscript/Parser.hx",07,42,3a,af))
            									->setFixed(4,HX_("lineNumber",dd,81,22,76),1213)));
HXLINE(1214)								this->unexpected(t);
HXLINE(1215)								goto _hx_goto_71;
            							}
            						}
            						break;
            						case (int)7: {
HXLINE(1178)							goto _hx_goto_71;
            						}
            						break;
            						case (int)15: {
HXLINE(1195)							if (::hx::IsNull( meta )) {
HXLINE(1196)								meta = ::Array_obj< ::Dynamic>::__new(0);
            							}
HXLINE(1197)							meta->push( ::Dynamic(::hx::Anon_obj::Create(2)
            								->setFixed(0,HX_("params",46,fb,7a,ed),this->parseMetaArgs())
            								->setFixed(1,HX_("name",4b,72,ff,48),t->_hx_getString(0))));
            						}
            						break;
            						default:{
HXLINE(1213)							::haxe::Log_obj::trace(t, ::Dynamic(::hx::Anon_obj::Create(5)
            								->setFixed(0,HX_("className",a3,92,3d,dc),HX_("crowplexus.hscript.Parser",64,46,ff,14))
            								->setFixed(1,HX_("customParams",d7,51,18,ed),::cpp::VirtualArray_obj::__new(2)->init(0,fields)->init(1,tps))
            								->setFixed(2,HX_("methodName",cc,19,0f,12),HX_("parseType",8d,44,af,d4))
            								->setFixed(3,HX_("fileName",e7,5a,43,62),HX_("../crowplexus/hscript/Parser.hx",07,42,3a,af))
            								->setFixed(4,HX_("lineNumber",dd,81,22,76),1213)));
HXLINE(1214)							this->unexpected(t);
HXLINE(1215)							goto _hx_goto_71;
            						}
            					}
            				}
            				_hx_goto_71:;
HXLINE(1218)				 ::crowplexus::hscript::CType _hx_tmp4;
HXDLIN(1218)				if ((tps->length == 0)) {
HXLINE(1218)					_hx_tmp4 = ::crowplexus::hscript::CType_obj::CTAnon(fields);
            				}
            				else {
HXLINE(1218)					_hx_tmp4 = ::crowplexus::hscript::CType_obj::CTExtend(tps,fields);
            				}
HXDLIN(1218)				return this->parseTypeNext(_hx_tmp4);
            			}
            			break;
            			default:{
HXLINE(1220)				return this->unexpected(t);
            			}
            		}
HXLINE(1079)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseType,return )

 ::crowplexus::hscript::CType Parser_obj::parseTypeNext( ::crowplexus::hscript::CType t){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1224_parseTypeNext)
HXLINE(1225)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1226)		bool isIntersection = false;
HXLINE(1227)		if ((tk->_hx_getIndex() == 3)) {
HXLINE(1228)			::String _g = tk->_hx_getString(0);
HXDLIN(1228)			{
HXLINE(1229)				bool _hx_tmp;
HXDLIN(1229)				if ((_g != HX_("->",71,27,00,00))) {
HXLINE(1229)					_hx_tmp = (_g != HX_("&",26,00,00,00));
            				}
            				else {
HXLINE(1229)					_hx_tmp = false;
            				}
HXDLIN(1229)				if (_hx_tmp) {
HXLINE(1230)					{
HXLINE(1230)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1230)						this->tokenMin = this->oldTokenMin;
HXDLIN(1230)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1231)					return t;
            				}
HXLINE(1233)				isIntersection = (_g == HX_("&",26,00,00,00));
            			}
            		}
            		else {
HXLINE(1235)			{
HXLINE(1235)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1235)				this->tokenMin = this->oldTokenMin;
HXDLIN(1235)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE(1236)			return t;
            		}
HXLINE(1238)		 ::crowplexus::hscript::CType t2 = this->parseType();
HXLINE(1239)		if ((t2->_hx_getIndex() == 1)) {
HXLINE(1241)			t2->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >()->unshift(t);
HXLINE(1242)			return t2;
            		}
            		else {
HXLINE(1244)			if (isIntersection) {
HXLINE(1245)				return ::crowplexus::hscript::CType_obj::CTIntersection(::Array_obj< ::Dynamic>::__new(2)->init(0,t)->init(1,t2));
            			}
HXLINE(1246)			return ::crowplexus::hscript::CType_obj::CTFun(::Array_obj< ::Dynamic>::__new(1)->init(0,t),t2);
            		}
HXLINE(1239)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseTypeNext,return )

::Array< ::Dynamic> Parser_obj::parseExprList( ::crowplexus::hscript::Token etk){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1250_parseExprList)
HXLINE(1251)		::Array< ::Dynamic> args = ::Array_obj< ::Dynamic>::__new();
HXLINE(1252)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1253)		if (::hx::IsPointerEq( tk,etk )) {
HXLINE(1254)			return args;
            		}
HXLINE(1255)		{
HXLINE(1255)			this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1255)			this->tokenMin = this->oldTokenMin;
HXDLIN(1255)			this->tokenMax = this->oldTokenMax;
            		}
HXLINE(1256)		while(true){
HXLINE(1257)			args->push(this->parseExpr());
HXLINE(1258)			tk = this->token();
HXLINE(1259)			if ((tk->_hx_getIndex() != 9)) {
HXLINE(1262)				if (::hx::IsPointerEq( tk,etk )) {
HXLINE(1263)					goto _hx_goto_75;
            				}
HXLINE(1264)				this->unexpected(tk);
HXLINE(1265)				goto _hx_goto_75;
            			}
            		}
            		_hx_goto_75:;
HXLINE(1268)		return args;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,parseExprList,return )

::Array< ::Dynamic> Parser_obj::parseModule(::String content,::String __o_origin){
            		::String origin = __o_origin;
            		if (::hx::IsNull(__o_origin)) origin = HX_("hscript",73,8c,18,2c);
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1273_parseModule)
HXLINE(1274)		this->initParser(origin);
HXLINE(1275)		this->input = content;
HXLINE(1276)		this->readPos = 0;
HXLINE(1277)		this->allowTypes = true;
HXLINE(1278)		this->allowMetadata = true;
HXLINE(1279)		::Array< ::Dynamic> decls = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1280)		while(true){
HXLINE(1281)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1282)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() )) {
HXLINE(1283)				goto _hx_goto_77;
            			}
HXLINE(1284)			{
HXLINE(1284)				this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1284)				this->tokenMin = this->oldTokenMin;
HXDLIN(1284)				this->tokenMax = this->oldTokenMax;
            			}
HXLINE(1285)			decls->push(this->parseModuleDecl());
            		}
            		_hx_goto_77:;
HXLINE(1287)		return decls;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,parseModule,return )

::Array< ::Dynamic> Parser_obj::parseMetadata(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1290_parseMetadata)
HXLINE(1291)		::Array< ::Dynamic> meta = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1292)		while(true){
HXLINE(1293)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1294)			if ((tk->_hx_getIndex() == 15)) {
HXLINE(1296)				meta->push( ::Dynamic(::hx::Anon_obj::Create(2)
            					->setFixed(0,HX_("params",46,fb,7a,ed),this->parseMetaArgs())
            					->setFixed(1,HX_("name",4b,72,ff,48),tk->_hx_getString(0))));
            			}
            			else {
HXLINE(1298)				{
HXLINE(1298)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1298)					this->tokenMin = this->oldTokenMin;
HXDLIN(1298)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1299)				goto _hx_goto_79;
            			}
            		}
            		_hx_goto_79:;
HXLINE(1302)		return meta;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseMetadata,return )

 ::Dynamic Parser_obj::parseParams(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1305_parseParams)
HXLINE(1306)		if (this->maybe(::crowplexus::hscript::Token_obj::TOp(HX_("<",3c,00,00,00)))) {
HXLINE(1307)			if (!(this->resumeErrors)) {
HXLINE(1307)				HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidOp(HX_("Unsupported class type parameters",9d,ae,a3,50)),this->readPos,this->readPos,this->origin,this->line));
            			}
            		}
HXLINE(1308)		return  ::Dynamic(::hx::Anon_obj::Create(0));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseParams,return )

 ::crowplexus::hscript::ModuleDecl Parser_obj::parseModuleDecl(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1311_parseModuleDecl)
HXLINE(1312)		::Array< ::Dynamic> meta = this->parseMetadata();
HXLINE(1313)		::String ident = this->getIdent();
HXLINE(1314)		bool isPrivate = false;
HXDLIN(1314)		bool isExtern = false;
HXLINE(1315)		while(true){
HXLINE(1316)			::String _hx_switch_0 = ident;
            			if (  (_hx_switch_0==HX_("extern",60,d5,1a,c7)) ){
HXLINE(1320)				isExtern = true;
HXDLIN(1320)				goto _hx_goto_83;
            			}
            			if (  (_hx_switch_0==HX_("private",03,2d,6f,89)) ){
HXLINE(1318)				isPrivate = true;
HXDLIN(1318)				goto _hx_goto_83;
            			}
            			/* default */{
HXLINE(1322)				goto _hx_goto_82;
            			}
            			_hx_goto_83:;
HXLINE(1324)			ident = this->getIdent();
            		}
            		_hx_goto_82:;
HXLINE(1326)		::String _hx_switch_1 = ident;
            		if (  (_hx_switch_1==HX_("class",38,78,58,48)) ){
HXLINE(1354)			::String name = this->getIdent();
HXLINE(1355)			 ::Dynamic params = this->parseParams();
HXLINE(1356)			 ::crowplexus::hscript::CType extend = null();
HXLINE(1357)			::Array< ::Dynamic> implement = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1359)			while(true){
HXLINE(1360)				 ::crowplexus::hscript::Token t = this->token();
HXLINE(1361)				if ((t->_hx_getIndex() == 2)) {
HXLINE(1364)					::String _hx_switch_2 = t->_hx_getString(0);
            					if (  (_hx_switch_2==HX_("extends",59,cd,5c,70)) ){
HXLINE(1363)						extend = this->parseType();
HXDLIN(1363)						goto _hx_goto_86;
            					}
            					if (  (_hx_switch_2==HX_("implements",70,fd,43,a8)) ){
HXLINE(1365)						implement->push(this->parseType());
HXDLIN(1365)						goto _hx_goto_86;
            					}
            					/* default */{
HXLINE(1367)						{
HXLINE(1367)							this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1367)							this->tokenMin = this->oldTokenMin;
HXDLIN(1367)							this->tokenMax = this->oldTokenMax;
            						}
HXLINE(1368)						goto _hx_goto_85;
            					}
            					_hx_goto_86:;
            				}
            				else {
HXLINE(1367)					{
HXLINE(1367)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t,this->tokenMin,this->tokenMax));
HXDLIN(1367)						this->tokenMin = this->oldTokenMin;
HXDLIN(1367)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1368)					goto _hx_goto_85;
            				}
            			}
            			_hx_goto_85:;
HXLINE(1372)			::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(1373)			{
HXLINE(1373)				 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN(1373)				if (::hx::IsPointerNotEq( t1,::crowplexus::hscript::Token_obj::TBrOpen_dyn() )) {
HXLINE(1373)					this->unexpected(t1);
            				}
            			}
HXLINE(1374)			while(!(this->maybe(::crowplexus::hscript::Token_obj::TBrClose_dyn()))){
HXLINE(1375)				fields->push(this->parseField());
            			}
HXLINE(1377)			return ::crowplexus::hscript::ModuleDecl_obj::DClass( ::Dynamic(::hx::Anon_obj::Create(8)
            				->setFixed(0,HX_("fields",79,8e,8e,80),fields)
            				->setFixed(1,HX_("isPrivate",39,aa,6d,8d),isPrivate)
            				->setFixed(2,HX_("implement",a3,71,3f,af),implement)
            				->setFixed(3,HX_("extend",da,d1,1a,c7),extend)
            				->setFixed(4,HX_("params",46,fb,7a,ed),params)
            				->setFixed(5,HX_("isExtern",ea,70,84,1f),isExtern)
            				->setFixed(6,HX_("meta",c5,4a,59,48),meta)
            				->setFixed(7,HX_("name",4b,72,ff,48),name)));
HXLINE(1353)			goto _hx_goto_84;
            		}
            		if (  (_hx_switch_1==HX_("import",65,a1,82,08)) ){
HXLINE(1332)			::Array< ::String > path = ::Array_obj< ::String >::__new(1)->init(0,this->getIdent());
HXLINE(1333)			bool star = false;
HXLINE(1335)			while(true){
HXLINE(1336)				 ::crowplexus::hscript::Token t2 = this->token();
HXLINE(1337)				if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TDot_dyn() )) {
HXLINE(1338)					{
HXLINE(1338)						this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,t2,this->tokenMin,this->tokenMax));
HXDLIN(1338)						this->tokenMin = this->oldTokenMin;
HXDLIN(1338)						this->tokenMax = this->oldTokenMax;
            					}
HXLINE(1339)					goto _hx_goto_88;
            				}
HXLINE(1341)				t2 = this->token();
HXLINE(1342)				switch((int)(t2->_hx_getIndex())){
            					case (int)2: {
HXLINE(1344)						path->push(t2->_hx_getString(0));
            					}
            					break;
            					case (int)3: {
HXLINE(1345)						if ((t2->_hx_getString(0) == HX_("*",2a,00,00,00))) {
HXLINE(1346)							star = true;
            						}
            						else {
HXLINE(1348)							this->unexpected(t2);
            						}
            					}
            					break;
            					default:{
HXLINE(1348)						this->unexpected(t2);
            					}
            				}
            			}
            			_hx_goto_88:;
HXLINE(1351)			{
HXLINE(1351)				 ::crowplexus::hscript::Token t3 = this->token();
HXDLIN(1351)				if (::hx::IsPointerNotEq( t3,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1351)					this->unexpected(t3);
            				}
            			}
HXLINE(1352)			return ::crowplexus::hscript::ModuleDecl_obj::DImport(path,star,HX_("",00,00,00,00));
HXLINE(1331)			goto _hx_goto_84;
            		}
            		if (  (_hx_switch_1==HX_("package",86,2b,b1,41)) ){
HXLINE(1328)			::Array< ::String > path1 = this->parsePath();
HXLINE(1329)			{
HXLINE(1329)				 ::crowplexus::hscript::Token t4 = this->token();
HXDLIN(1329)				if (::hx::IsPointerNotEq( t4,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1329)					this->unexpected(t4);
            				}
            			}
HXLINE(1330)			return ::crowplexus::hscript::ModuleDecl_obj::DPackage(path1);
HXLINE(1327)			goto _hx_goto_84;
            		}
            		if (  (_hx_switch_1==HX_("typedef",4b,37,d8,f8)) ){
HXLINE(1388)			::String name1 = this->getIdent();
HXLINE(1389)			 ::Dynamic params1 = this->parseParams();
HXLINE(1390)			{
HXLINE(1390)				 ::crowplexus::hscript::Token t5 = this->token();
HXDLIN(1390)				if (!(__hxcpp_enum_eq(t5,::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00))))) {
HXLINE(1390)					this->unexpected(t5);
            				}
            			}
HXLINE(1392)			return ::crowplexus::hscript::ModuleDecl_obj::DTypedef( ::Dynamic(::hx::Anon_obj::Create(5)
            				->setFixed(0,HX_("isPrivate",39,aa,6d,8d),isPrivate)
            				->setFixed(1,HX_("params",46,fb,7a,ed),params1)
            				->setFixed(2,HX_("t",74,00,00,00),this->parseType())
            				->setFixed(3,HX_("meta",c5,4a,59,48),meta)
            				->setFixed(4,HX_("name",4b,72,ff,48),name1)));
HXLINE(1387)			goto _hx_goto_84;
            		}
            		/* default */{
HXLINE(1400)			this->unexpected(::crowplexus::hscript::Token_obj::TId(ident));
            		}
            		_hx_goto_84:;
HXLINE(1402)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseModuleDecl,return )

 ::Dynamic Parser_obj::parseField(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1405_parseField)
HXLINE(1406)		::Array< ::Dynamic> meta = this->parseMetadata();
HXLINE(1407)		::Array< unsigned char > access = ::Array_obj< unsigned char >::__new(0);
HXLINE(1408)		while(true){
HXLINE(1409)			::String id = this->getIdent();
HXLINE(1410)			::String _hx_switch_0 = id;
            			if (  (_hx_switch_0==HX_("final",76,5f,9a,00)) ||  (_hx_switch_0==HX_("var",e7,de,59,00)) ){
HXLINE(1437)				::String name = this->getIdent();
HXLINE(1438)				::String get = null();
HXDLIN(1438)				::String set = null();
HXLINE(1439)				if (this->maybe(::crowplexus::hscript::Token_obj::TPOpen_dyn())) {
HXLINE(1440)					get = this->getIdent();
HXLINE(1441)					{
HXLINE(1441)						 ::crowplexus::hscript::Token t = this->token();
HXDLIN(1441)						if (::hx::IsPointerNotEq( t,::crowplexus::hscript::Token_obj::TComma_dyn() )) {
HXLINE(1441)							this->unexpected(t);
            						}
            					}
HXLINE(1442)					set = this->getIdent();
HXLINE(1443)					{
HXLINE(1443)						 ::crowplexus::hscript::Token t1 = this->token();
HXDLIN(1443)						if (::hx::IsPointerNotEq( t1,::crowplexus::hscript::Token_obj::TPClose_dyn() )) {
HXLINE(1443)							this->unexpected(t1);
            						}
            					}
            				}
HXLINE(1445)				 ::crowplexus::hscript::CType type;
HXDLIN(1445)				if (this->maybe(::crowplexus::hscript::Token_obj::TDoubleDot_dyn())) {
HXLINE(1445)					type = this->parseType();
            				}
            				else {
HXLINE(1445)					type = null();
            				}
HXLINE(1446)				 ::crowplexus::hscript::Expr expr;
HXDLIN(1446)				if (this->maybe(::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00)))) {
HXLINE(1446)					expr = this->parseExpr();
            				}
            				else {
HXLINE(1446)					expr = null();
            				}
HXLINE(1448)				if (::hx::IsNotNull( expr )) {
HXLINE(1449)					if (this->isBlock(expr)) {
HXLINE(1450)						this->maybe(::crowplexus::hscript::Token_obj::TSemicolon_dyn());
            					}
            					else {
HXLINE(1452)						 ::crowplexus::hscript::Token t2 = this->token();
HXDLIN(1452)						if (::hx::IsPointerNotEq( t2,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1452)							this->unexpected(t2);
            						}
            					}
            				}
            				else {
HXLINE(1453)					bool _hx_tmp;
HXDLIN(1453)					if (::hx::IsNotNull( type )) {
HXLINE(1453)						if (::hx::IsNull( type )) {
HXLINE(1453)							_hx_tmp = false;
            						}
            						else {
HXLINE(1453)							if ((type->_hx_getIndex() == 2)) {
HXLINE(1453)								_hx_tmp = true;
            							}
            							else {
HXLINE(1453)								_hx_tmp = false;
            							}
            						}
            					}
            					else {
HXLINE(1453)						_hx_tmp = false;
            					}
HXDLIN(1453)					if (_hx_tmp) {
HXLINE(1454)						this->maybe(::crowplexus::hscript::Token_obj::TSemicolon_dyn());
            					}
            					else {
HXLINE(1456)						 ::crowplexus::hscript::Token t3 = this->token();
HXDLIN(1456)						if (::hx::IsPointerNotEq( t3,::crowplexus::hscript::Token_obj::TSemicolon_dyn() )) {
HXLINE(1456)							this->unexpected(t3);
            						}
            					}
            				}
HXLINE(1458)				return  ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("access",a4,95,06,0b),access)
            					->setFixed(1,HX_("kind",54,e1,09,47),::crowplexus::hscript::FieldKind_obj::KVar( ::Dynamic(::hx::Anon_obj::Create(4)
            						->setFixed(0,HX_("get",96,80,4e,00),get)
            						->setFixed(1,HX_("set",a2,9b,57,00),set)
            						->setFixed(2,HX_("expr",35,fd,1d,43),expr)
            						->setFixed(3,HX_("type",ba,f2,08,4d),type))))
            					->setFixed(2,HX_("meta",c5,4a,59,48),meta)
            					->setFixed(3,HX_("name",4b,72,ff,48),name));
HXLINE(1436)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("function",18,ab,52,14)) ){
HXLINE(1424)				::String name1 = this->getIdent();
HXLINE(1425)				 ::Dynamic inf = this->parseFunctionDecl();
HXLINE(1426)				return  ::Dynamic(::hx::Anon_obj::Create(4)
            					->setFixed(0,HX_("access",a4,95,06,0b),access)
            					->setFixed(1,HX_("kind",54,e1,09,47),::crowplexus::hscript::FieldKind_obj::KFunction( ::Dynamic(::hx::Anon_obj::Create(3)
            						->setFixed(0,HX_("ret",61,d9,56,00), ::Dynamic(inf->__Field(HX_("ret",61,d9,56,00),::hx::paccDynamic)))
            						->setFixed(1,HX_("args",5d,8d,74,40), ::Dynamic(inf->__Field(HX_("args",5d,8d,74,40),::hx::paccDynamic)))
            						->setFixed(2,HX_("expr",35,fd,1d,43), ::Dynamic(inf->__Field(HX_("body",a2,7a,1b,41),::hx::paccDynamic))))))
            					->setFixed(2,HX_("meta",c5,4a,59,48),meta)
            					->setFixed(3,HX_("name",4b,72,ff,48),name1));
HXLINE(1423)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("inline",59,ca,3f,99)) ){
HXLINE(1418)				access->push(( (unsigned char)(2) ));
HXDLIN(1418)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("macro",0c,70,16,03)) ){
HXLINE(1422)				access->push(( (unsigned char)(5) ));
HXDLIN(1422)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("override",4c,22,28,49)) ){
HXLINE(1412)				access->push(( (unsigned char)(3) ));
HXDLIN(1412)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("private",03,2d,6f,89)) ){
HXLINE(1416)				access->push(( (unsigned char)(1) ));
HXDLIN(1416)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("public",a9,80,f3,66)) ){
HXLINE(1414)				access->push(( (unsigned char)(0) ));
HXDLIN(1414)				goto _hx_goto_91;
            			}
            			if (  (_hx_switch_0==HX_("static",ae,dc,fb,05)) ){
HXLINE(1420)				access->push(( (unsigned char)(4) ));
HXDLIN(1420)				goto _hx_goto_91;
            			}
            			/* default */{
HXLINE(1470)				this->unexpected(::crowplexus::hscript::Token_obj::TId(id));
HXLINE(1471)				goto _hx_goto_90;
            			}
            			_hx_goto_91:;
            		}
            		_hx_goto_90:;
HXLINE(1474)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parseField,return )

int Parser_obj::readChar(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1480_readChar)
HXDLIN(1480)		return this->input.cca(this->readPos++);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,readChar,return )

::String Parser_obj::readString(int until){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1483_readString)
HXLINE(1485)		 ::StringBuf b =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE(1486)		bool esc = false;
HXLINE(1487)		int old = this->line;
HXLINE(1490)		int p1 = (this->readPos - 1);
HXLINE(1492)		while(true){
HXLINE(1493)			int c = this->input.cca(this->readPos++);
HXLINE(1494)			if ((c == 0)) {
HXLINE(1495)				this->line = old;
HXLINE(1496)				if (!(this->resumeErrors)) {
HXLINE(1496)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedString_dyn(),p1,p1,this->origin,this->line));
            				}
HXLINE(1497)				goto _hx_goto_94;
            			}
HXLINE(1499)			if (esc) {
HXLINE(1500)				esc = false;
HXLINE(1501)				switch((int)(c)){
            					case (int)47: {
HXLINE(1511)						if (this->allowJSON) {
HXLINE(1512)							if ((c >= 127)) {
HXLINE(1512)								::String x = ::String::fromCharCode(c);
HXDLIN(1512)								if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1512)									b->flush();
            								}
HXDLIN(1512)								if (::hx::IsNull( b->b )) {
HXLINE(1512)									b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            								}
            								else {
HXLINE(1512)									::Array< ::String > b1 = b->b;
HXDLIN(1512)									b1->push(::Std_obj::string(x));
            								}
            							}
            							else {
HXLINE(1512)								if (::hx::IsNull( b->charBuf )) {
HXLINE(1512)									b->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN(1512)								b->charBuf->push(c);
            							}
            						}
            						else {
HXLINE(1514)							this->invalidChar(c);
            						}
            					}
            					break;
            					case (int)34: case (int)39: case (int)92: {
HXLINE(1509)						if ((c >= 127)) {
HXLINE(1509)							::String x1 = ::String::fromCharCode(c);
HXDLIN(1509)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1509)								b->flush();
            							}
HXDLIN(1509)							if (::hx::IsNull( b->b )) {
HXLINE(1509)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            							}
            							else {
HXLINE(1509)								::Array< ::String > b2 = b->b;
HXDLIN(1509)								b2->push(::Std_obj::string(x1));
            							}
            						}
            						else {
HXLINE(1509)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1509)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1509)							b->charBuf->push(c);
            						}
            					}
            					break;
            					case (int)110: {
HXLINE(1503)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1503)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1503)						b->charBuf->push(10);
            					}
            					break;
            					case (int)114: {
HXLINE(1505)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1505)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1505)						b->charBuf->push(13);
            					}
            					break;
            					case (int)116: {
HXLINE(1507)						if (::hx::IsNull( b->charBuf )) {
HXLINE(1507)							b->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN(1507)						b->charBuf->push(9);
            					}
            					break;
            					case (int)117: {
HXLINE(1516)						if (!(this->allowJSON)) {
HXLINE(1517)							this->invalidChar(c);
            						}
HXLINE(1518)						int k = 0;
HXLINE(1519)						{
HXLINE(1519)							int _g = 0;
HXDLIN(1519)							while((_g < 4)){
HXLINE(1519)								_g = (_g + 1);
HXLINE(1520)								k = (k << 4);
HXLINE(1521)								int _hx_char = this->input.cca(this->readPos++);
HXLINE(1522)								switch((int)(_hx_char)){
            									case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1524)										k = (k + (_hx_char - 48));
            									}
            									break;
            									case (int)65: case (int)66: case (int)67: case (int)68: case (int)69: case (int)70: {
HXLINE(1526)										k = (k + (_hx_char - 55));
            									}
            									break;
            									case (int)97: case (int)98: case (int)99: case (int)100: case (int)101: case (int)102: {
HXLINE(1528)										k = (k + (_hx_char - 87));
            									}
            									break;
            									default:{
HXLINE(1530)										if ((_hx_char == 0)) {
HXLINE(1531)											this->line = old;
HXLINE(1532)											if (!(this->resumeErrors)) {
HXLINE(1532)												HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedString_dyn(),p1,p1,this->origin,this->line));
            											}
            										}
HXLINE(1534)										this->invalidChar(_hx_char);
            									}
            								}
            							}
            						}
HXLINE(1537)						if ((k >= 127)) {
HXLINE(1537)							::String x2 = ::String::fromCharCode(k);
HXDLIN(1537)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1537)								b->flush();
            							}
HXDLIN(1537)							if (::hx::IsNull( b->b )) {
HXLINE(1537)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
            							}
            							else {
HXLINE(1537)								::Array< ::String > b3 = b->b;
HXDLIN(1537)								b3->push(::Std_obj::string(x2));
            							}
            						}
            						else {
HXLINE(1537)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1537)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1537)							b->charBuf->push(k);
            						}
            					}
            					break;
            					default:{
HXLINE(1539)						this->invalidChar(c);
            					}
            				}
            			}
            			else {
HXLINE(1541)				if ((c == 92)) {
HXLINE(1542)					esc = true;
            				}
            				else {
HXLINE(1543)					if ((c == until)) {
HXLINE(1544)						goto _hx_goto_94;
            					}
            					else {
HXLINE(1546)						if ((c == 10)) {
HXLINE(1547)							this->line++;
            						}
HXLINE(1548)						if ((c >= 127)) {
HXLINE(1548)							::String x3 = ::String::fromCharCode(c);
HXDLIN(1548)							if (::hx::IsNotNull( b->charBuf )) {
HXLINE(1548)								b->flush();
            							}
HXDLIN(1548)							if (::hx::IsNull( b->b )) {
HXLINE(1548)								b->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x3));
            							}
            							else {
HXLINE(1548)								::Array< ::String > b4 = b->b;
HXDLIN(1548)								b4->push(::Std_obj::string(x3));
            							}
            						}
            						else {
HXLINE(1548)							if (::hx::IsNull( b->charBuf )) {
HXLINE(1548)								b->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN(1548)							b->charBuf->push(c);
            						}
            					}
            				}
            			}
            		}
            		_hx_goto_94:;
HXLINE(1551)		return b->toString();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,readString,return )

 ::crowplexus::hscript::Token Parser_obj::token(){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1554_token)
HXLINE(1556)		 ::crowplexus::hscript::TokenPos t = this->tokens->pop().StaticCast<  ::crowplexus::hscript::TokenPos >();
HXLINE(1557)		if (::hx::IsNotNull( t )) {
HXLINE(1558)			this->tokenMin = t->min;
HXLINE(1559)			this->tokenMax = t->max;
HXLINE(1560)			return t->t;
            		}
HXLINE(1562)		this->oldTokenMin = this->tokenMin;
HXLINE(1563)		this->oldTokenMax = this->tokenMax;
HXLINE(1564)		int _hx_tmp;
HXDLIN(1564)		if ((this->_hx_char < 0)) {
HXLINE(1564)			_hx_tmp = this->readPos;
            		}
            		else {
HXLINE(1564)			_hx_tmp = (this->readPos - 1);
            		}
HXDLIN(1564)		this->tokenMin = _hx_tmp;
HXLINE(1565)		 ::crowplexus::hscript::Token t1 = this->_token();
HXLINE(1566)		int _hx_tmp1;
HXDLIN(1566)		if ((this->_hx_char < 0)) {
HXLINE(1566)			_hx_tmp1 = (this->readPos - 1);
            		}
            		else {
HXLINE(1566)			_hx_tmp1 = (this->readPos - 2);
            		}
HXDLIN(1566)		this->tokenMax = _hx_tmp1;
HXLINE(1567)		return t1;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,token,return )

 ::crowplexus::hscript::Token Parser_obj::_token(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1568__token)
HXLINE(1573)		int _hx_char;
HXLINE(1574)		if ((this->_hx_char < 0)) {
HXLINE(1575)			_hx_char = this->input.cca(this->readPos++);
            		}
            		else {
HXLINE(1577)			_hx_char = this->_hx_char;
HXLINE(1578)			this->_hx_char = -1;
            		}
HXLINE(1580)		while(true){
HXLINE(1581)			if ((_hx_char == 0)) {
HXLINE(1582)				this->_hx_char = _hx_char;
HXLINE(1583)				return ::crowplexus::hscript::Token_obj::TEof_dyn();
            			}
HXLINE(1585)			switch((int)(_hx_char)){
            				case (int)0: {
HXLINE(1587)					return ::crowplexus::hscript::Token_obj::TEof_dyn();
            				}
            				break;
            				case (int)10: {
HXLINE(1593)					this->line++;
HXLINE(1595)					this->tokenMin++;
            				}
            				break;
            				case (int)9: case (int)13: case (int)32: {
HXLINE(1590)					this->tokenMin++;
            				}
            				break;
            				case (int)34: case (int)39: {
HXLINE(1762)					return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CString(this->readString(_hx_char)));
            				}
            				break;
            				case (int)35: {
HXLINE(1800)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1801)					if (this->idents->__get(_hx_char)) {
HXLINE(1802)						::String id = ::String::fromCharCode(_hx_char);
HXLINE(1803)						while(true){
HXLINE(1804)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1805)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1806)								this->_hx_char = _hx_char;
HXLINE(1807)								return this->preprocess(id);
            							}
HXLINE(1809)							id = (id + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1812)					this->invalidChar(_hx_char);
            				}
            				break;
            				case (int)40: {
HXLINE(1722)					return ::crowplexus::hscript::Token_obj::TPOpen_dyn();
            				}
            				break;
            				case (int)41: {
HXLINE(1724)					return ::crowplexus::hscript::Token_obj::TPClose_dyn();
            				}
            				break;
            				case (int)44: {
HXLINE(1726)					return ::crowplexus::hscript::Token_obj::TComma_dyn();
            				}
            				break;
            				case (int)46: {
HXLINE(1728)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1729)					switch((int)(_hx_char)){
            						case (int)46: {
HXLINE(1745)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1746)							if ((_hx_char != 46)) {
HXLINE(1747)								this->invalidChar(_hx_char);
            							}
HXLINE(1748)							return ::crowplexus::hscript::Token_obj::TOp(HX_("...",ee,0f,23,00));
            						}
            						break;
            						case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1731)							int n = (_hx_char - 48);
HXLINE(1732)							int exp = 1;
HXLINE(1733)							while(true){
HXLINE(1734)								_hx_char = this->input.cca(this->readPos++);
HXLINE(1735)								exp = (exp * 10);
HXLINE(1736)								switch((int)(_hx_char)){
            									case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1738)										n = ((n * 10) + (_hx_char - 48));
            									}
            									break;
            									default:{
HXLINE(1740)										this->_hx_char = _hx_char;
HXLINE(1741)										return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CFloat((( (Float)(n) ) / ( (Float)(exp) ))));
            									}
            								}
            							}
            						}
            						break;
            						default:{
HXLINE(1750)							this->_hx_char = _hx_char;
HXLINE(1751)							return ::crowplexus::hscript::Token_obj::TDot_dyn();
            						}
            					}
            				}
            				break;
            				case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1598)					Float n1 = (( (Float)((_hx_char - 48)) ) * ((Float)1.0));
HXLINE(1599)					Float exp1 = ((Float)0.);
HXLINE(1600)					while(true){
HXLINE(1601)						_hx_char = this->input.cca(this->readPos++);
HXLINE(1602)						exp1 = (exp1 * ( (Float)(10) ));
HXLINE(1603)						switch((int)(_hx_char)){
            							case (int)46: {
HXLINE(1625)								if ((exp1 > 0)) {
HXLINE(1627)									bool _hx_tmp;
HXDLIN(1627)									if ((exp1 == 10)) {
HXLINE(1627)										_hx_tmp = (this->input.cca(this->readPos++) == 46);
            									}
            									else {
HXLINE(1627)										_hx_tmp = false;
            									}
HXDLIN(1627)									if (_hx_tmp) {
HXLINE(1628)										{
HXLINE(1628)											this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,::crowplexus::hscript::Token_obj::TOp(HX_("...",ee,0f,23,00)),this->tokenMin,this->tokenMax));
HXDLIN(1628)											this->tokenMin = this->oldTokenMin;
HXDLIN(1628)											this->tokenMax = this->oldTokenMax;
            										}
HXLINE(1629)										int i = ::Std_obj::_hx_int(n1);
HXLINE(1630)										 ::crowplexus::hscript::Const _hx_tmp1;
HXDLIN(1630)										if ((i == n1)) {
HXLINE(1630)											_hx_tmp1 = ::crowplexus::hscript::Const_obj::CInt(i);
            										}
            										else {
HXLINE(1630)											_hx_tmp1 = ::crowplexus::hscript::Const_obj::CFloat(n1);
            										}
HXDLIN(1630)										return ::crowplexus::hscript::Token_obj::TConst(_hx_tmp1);
            									}
HXLINE(1632)									this->invalidChar(_hx_char);
            								}
HXLINE(1634)								exp1 = ((Float)1.);
            							}
            							break;
            							case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1605)								n1 = ((n1 * ( (Float)(10) )) + (_hx_char - 48));
            							}
            							break;
            							case (int)69: case (int)101: {
HXLINE(1608)								 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1609)								 ::Dynamic pow = null();
HXLINE(1610)								switch((int)(tk->_hx_getIndex())){
            									case (int)1: {
HXLINE(1611)										 ::crowplexus::hscript::Const _g = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN(1611)										if ((_g->_hx_getIndex() == 0)) {
HXLINE(1611)											pow = _g->_hx_getInt(0);
            										}
            										else {
HXLINE(1619)											this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1619)											this->tokenMin = this->oldTokenMin;
HXDLIN(1619)											this->tokenMax = this->oldTokenMax;
            										}
            									}
            									break;
            									case (int)3: {
HXLINE(1612)										if ((tk->_hx_getString(0) == HX_("-",2d,00,00,00))) {
HXLINE(1613)											tk = this->token();
HXLINE(1614)											if ((tk->_hx_getIndex() == 1)) {
HXLINE(1615)												 ::crowplexus::hscript::Const _g1 = tk->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >();
HXDLIN(1615)												if ((_g1->_hx_getIndex() == 0)) {
HXLINE(1615)													pow = -(_g1->_hx_getInt(0));
            												}
            												else {
HXLINE(1616)													this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1616)													this->tokenMin = this->oldTokenMin;
HXDLIN(1616)													this->tokenMax = this->oldTokenMax;
            												}
            											}
            											else {
HXLINE(1616)												this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1616)												this->tokenMin = this->oldTokenMin;
HXDLIN(1616)												this->tokenMax = this->oldTokenMax;
            											}
            										}
            										else {
HXLINE(1619)											this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1619)											this->tokenMin = this->oldTokenMin;
HXDLIN(1619)											this->tokenMax = this->oldTokenMax;
            										}
            									}
            									break;
            									default:{
HXLINE(1619)										this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1619)										this->tokenMin = this->oldTokenMin;
HXDLIN(1619)										this->tokenMax = this->oldTokenMax;
            									}
            								}
HXLINE(1621)								if (::hx::IsNull( pow )) {
HXLINE(1622)									this->invalidChar(_hx_char);
            								}
HXLINE(1623)								return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CFloat((((::Math_obj::pow(( (Float)(10) ),( (Float)(pow) )) / exp1) * n1) * ( (Float)(10) ))));
            							}
            							break;
            							case (int)95: {
            							}
            							break;
            							case (int)98: {
HXLINE(1679)								bool _hx_tmp2;
HXDLIN(1679)								if (!((n1 > 0))) {
HXLINE(1679)									_hx_tmp2 = (exp1 > 0);
            								}
            								else {
HXLINE(1679)									_hx_tmp2 = true;
            								}
HXDLIN(1679)								if (_hx_tmp2) {
HXLINE(1680)									this->invalidChar(_hx_char);
            								}
HXLINE(1683)								int n2 = 0;
HXLINE(1684)								while(true){
HXLINE(1685)									_hx_char = this->input.cca(this->readPos++);
HXLINE(1686)									switch((int)(_hx_char)){
            										case (int)48: case (int)49: {
HXLINE(1688)											n2 = (((n2 << 1) + _hx_char) - 48);
            										}
            										break;
            										case (int)95: {
            										}
            										break;
            										default:{
HXLINE(1691)											this->_hx_char = _hx_char;
HXLINE(1692)											return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CInt(n2));
            										}
            									}
            								}
            							}
            							break;
            							case (int)120: {
HXLINE(1636)								bool _hx_tmp3;
HXDLIN(1636)								if (!((n1 > 0))) {
HXLINE(1636)									_hx_tmp3 = (exp1 > 0);
            								}
            								else {
HXLINE(1636)									_hx_tmp3 = true;
            								}
HXDLIN(1636)								if (_hx_tmp3) {
HXLINE(1637)									this->invalidChar(_hx_char);
            								}
HXLINE(1640)								int n3 = 0;
HXLINE(1641)								while(true){
HXLINE(1642)									_hx_char = this->input.cca(this->readPos++);
HXLINE(1643)									switch((int)(_hx_char)){
            										case (int)48: case (int)49: case (int)50: case (int)51: case (int)52: case (int)53: case (int)54: case (int)55: case (int)56: case (int)57: {
HXLINE(1645)											n3 = (((n3 << 4) + _hx_char) - 48);
            										}
            										break;
            										case (int)65: case (int)66: case (int)67: case (int)68: case (int)69: case (int)70: {
HXLINE(1647)											n3 = ((n3 << 4) + (_hx_char - 55));
            										}
            										break;
            										case (int)95: {
            										}
            										break;
            										case (int)97: case (int)98: case (int)99: case (int)100: case (int)101: case (int)102: {
HXLINE(1649)											n3 = ((n3 << 4) + (_hx_char - 87));
            										}
            										break;
            										default:{
HXLINE(1652)											this->_hx_char = _hx_char;
HXLINE(1653)											return ::crowplexus::hscript::Token_obj::TConst(::crowplexus::hscript::Const_obj::CInt(n3));
            										}
            									}
            								}
            							}
            							break;
            							default:{
HXLINE(1714)								this->_hx_char = _hx_char;
HXLINE(1715)								int i1 = ::Std_obj::_hx_int(n1);
HXLINE(1716)								 ::crowplexus::hscript::Const _hx_tmp4;
HXDLIN(1716)								if ((exp1 > 0)) {
HXLINE(1716)									_hx_tmp4 = ::crowplexus::hscript::Const_obj::CFloat(((n1 * ( (Float)(10) )) / exp1));
            								}
            								else {
HXLINE(1716)									if ((i1 == n1)) {
HXLINE(1716)										_hx_tmp4 = ::crowplexus::hscript::Const_obj::CInt(i1);
            									}
            									else {
HXLINE(1716)										_hx_tmp4 = ::crowplexus::hscript::Const_obj::CFloat(n1);
            									}
            								}
HXDLIN(1716)								return ::crowplexus::hscript::Token_obj::TConst(_hx_tmp4);
            							}
            						}
            					}
            				}
            				break;
            				case (int)58: {
HXLINE(1776)					return ::crowplexus::hscript::Token_obj::TDoubleDot_dyn();
            				}
            				break;
            				case (int)59: {
HXLINE(1720)					return ::crowplexus::hscript::Token_obj::TSemicolon_dyn();
            				}
            				break;
            				case (int)61: {
HXLINE(1778)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1779)					if ((_hx_char == 61)) {
HXLINE(1780)						return ::crowplexus::hscript::Token_obj::TOp(HX_("==",60,35,00,00));
            					}
            					else {
HXLINE(1781)						if ((_hx_char == 62)) {
HXLINE(1782)							return ::crowplexus::hscript::Token_obj::TOp(HX_("=>",61,35,00,00));
            						}
            					}
HXLINE(1783)					this->_hx_char = _hx_char;
HXLINE(1784)					return ::crowplexus::hscript::Token_obj::TOp(HX_("=",3d,00,00,00));
            				}
            				break;
            				case (int)63: {
HXLINE(1764)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1765)					if ((_hx_char == 46)) {
HXLINE(1766)						return ::crowplexus::hscript::Token_obj::TQuestionDot_dyn();
            					}
            					else {
HXLINE(1767)						if ((_hx_char == 63)) {
HXLINE(1768)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1769)							if ((_hx_char == 61)) {
HXLINE(1770)								return ::crowplexus::hscript::Token_obj::TOp((HX_("??",20,37,00,00) + HX_("=",3d,00,00,00)));
            							}
HXLINE(1771)							return ::crowplexus::hscript::Token_obj::TOp(HX_("??",20,37,00,00));
            						}
            					}
HXLINE(1773)					this->_hx_char = _hx_char;
HXLINE(1774)					return ::crowplexus::hscript::Token_obj::TQuestion_dyn();
            				}
            				break;
            				case (int)64: {
HXLINE(1786)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1787)					bool _hx_tmp5;
HXDLIN(1787)					if (!(this->idents->__get(_hx_char))) {
HXLINE(1787)						_hx_tmp5 = (_hx_char == 58);
            					}
            					else {
HXLINE(1787)						_hx_tmp5 = true;
            					}
HXDLIN(1787)					if (_hx_tmp5) {
HXLINE(1788)						::String id1 = ::String::fromCharCode(_hx_char);
HXLINE(1789)						while(true){
HXLINE(1790)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1791)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1792)								this->_hx_char = _hx_char;
HXLINE(1793)								return ::crowplexus::hscript::Token_obj::TMeta(id1);
            							}
HXLINE(1795)							id1 = (id1 + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1798)					this->invalidChar(_hx_char);
            				}
            				break;
            				case (int)91: {
HXLINE(1758)					return ::crowplexus::hscript::Token_obj::TBkOpen_dyn();
            				}
            				break;
            				case (int)93: {
HXLINE(1760)					return ::crowplexus::hscript::Token_obj::TBkClose_dyn();
            				}
            				break;
            				case (int)123: {
HXLINE(1754)					return ::crowplexus::hscript::Token_obj::TBrOpen_dyn();
            				}
            				break;
            				case (int)125: {
HXLINE(1756)					return ::crowplexus::hscript::Token_obj::TBrClose_dyn();
            				}
            				break;
            				default:{
HXLINE(1814)					if (this->ops->__get(_hx_char)) {
HXLINE(1815)						::String op = ::String::fromCharCode(_hx_char);
HXLINE(1816)						while(true){
HXLINE(1817)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1818)							if ((_hx_char == 0)) {
HXLINE(1819)								_hx_char = 0;
            							}
HXLINE(1820)							if (!(this->ops->__get(_hx_char))) {
HXLINE(1821)								this->_hx_char = _hx_char;
HXLINE(1822)								return ::crowplexus::hscript::Token_obj::TOp(op);
            							}
HXLINE(1824)							::String pop = op;
HXLINE(1825)							op = (op + ::String::fromCharCode(_hx_char));
HXLINE(1826)							bool _hx_tmp6;
HXDLIN(1826)							if (!(this->opPriority->exists(op))) {
HXLINE(1826)								_hx_tmp6 = this->opPriority->exists(pop);
            							}
            							else {
HXLINE(1826)								_hx_tmp6 = false;
            							}
HXDLIN(1826)							if (_hx_tmp6) {
HXLINE(1827)								bool _hx_tmp7;
HXDLIN(1827)								if ((op != HX_("//",20,29,00,00))) {
HXLINE(1827)									_hx_tmp7 = (op == HX_("/*",1b,29,00,00));
            								}
            								else {
HXLINE(1827)									_hx_tmp7 = true;
            								}
HXDLIN(1827)								if (_hx_tmp7) {
HXLINE(1828)									return this->tokenComment(op,_hx_char);
            								}
HXLINE(1829)								this->_hx_char = _hx_char;
HXLINE(1830)								return ::crowplexus::hscript::Token_obj::TOp(pop);
            							}
            						}
            					}
HXLINE(1834)					if (this->idents->__get(_hx_char)) {
HXLINE(1835)						::String id2 = ::String::fromCharCode(_hx_char);
HXLINE(1836)						while(true){
HXLINE(1837)							_hx_char = this->input.cca(this->readPos++);
HXLINE(1838)							if ((_hx_char == 0)) {
HXLINE(1839)								_hx_char = 0;
            							}
HXLINE(1840)							if (!(this->idents->__get(_hx_char))) {
HXLINE(1841)								this->_hx_char = _hx_char;
HXLINE(1842)								return ::crowplexus::hscript::Token_obj::TId(id2);
            							}
HXLINE(1844)							id2 = (id2 + ::String::fromCharCode(_hx_char));
            						}
            					}
HXLINE(1847)					this->invalidChar(_hx_char);
            				}
            			}
HXLINE(1849)			_hx_char = this->input.cca(this->readPos++);
            		}
HXLINE(1580)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,_token,return )

 ::Dynamic Parser_obj::preprocValue(::String id){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1855_preprocValue)
HXDLIN(1855)		return this->preprocesorValues->get(id);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,preprocValue,return )

 ::crowplexus::hscript::Expr Parser_obj::parsePreproCond(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1860_parsePreproCond)
HXLINE(1861)		 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1862)		switch((int)(tk->_hx_getIndex())){
            			case (int)2: {
HXLINE(1867)				 ::crowplexus::hscript::ExprDef e = ::crowplexus::hscript::ExprDef_obj::EIdent(tk->_hx_getString(0));
HXDLIN(1867)				 ::Dynamic pmin = this->tokenMin;
HXDLIN(1867)				 ::Dynamic pmax = this->tokenMax;
HXDLIN(1867)				if (::hx::IsNull( e )) {
HXLINE(1867)					return null();
            				}
            				else {
HXLINE(1867)					if (::hx::IsNull( pmin )) {
HXLINE(1867)						pmin = this->tokenMin;
            					}
HXDLIN(1867)					if (::hx::IsNull( pmax )) {
HXLINE(1867)						pmax = this->tokenMax;
            					}
HXDLIN(1867)					return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e,( (int)(pmin) ),( (int)(pmax) ),this->origin,this->line);
            				}
            			}
            			break;
            			case (int)3: {
HXLINE(1868)				if ((tk->_hx_getString(0) == HX_("!",21,00,00,00))) {
HXLINE(1869)					 ::crowplexus::hscript::ExprDef e1 = ::crowplexus::hscript::ExprDef_obj::EUnop(HX_("!",21,00,00,00),true,this->parsePreproCond());
HXDLIN(1869)					 ::Dynamic pmin1 = this->tokenMin;
HXDLIN(1869)					 ::Dynamic pmax1 = this->tokenMax;
HXDLIN(1869)					if (::hx::IsNull( e1 )) {
HXLINE(1869)						return null();
            					}
            					else {
HXLINE(1869)						if (::hx::IsNull( pmin1 )) {
HXLINE(1869)							pmin1 = this->tokenMin;
            						}
HXDLIN(1869)						if (::hx::IsNull( pmax1 )) {
HXLINE(1869)							pmax1 = this->tokenMax;
            						}
HXDLIN(1869)						return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,e1,( (int)(pmin1) ),( (int)(pmax1) ),this->origin,this->line);
            					}
            				}
            				else {
HXLINE(1871)					return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            				}
            			}
            			break;
            			case (int)4: {
HXLINE(1864)				{
HXLINE(1864)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,::crowplexus::hscript::Token_obj::TPOpen_dyn(),this->tokenMin,this->tokenMax));
HXDLIN(1864)					this->tokenMin = this->oldTokenMin;
HXDLIN(1864)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1865)				return this->parseExpr();
            			}
            			break;
            			default:{
HXLINE(1871)				return ( ( ::crowplexus::hscript::Expr)(this->unexpected(tk)) );
            			}
            		}
HXLINE(1862)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,parsePreproCond,return )

bool Parser_obj::evalPreproCond( ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1876_evalPreproCond)
HXDLIN(1876)		 ::crowplexus::hscript::ExprDef _g = e->e;
HXDLIN(1876)		switch((int)(_g->_hx_getIndex())){
            			case (int)2: {
HXLINE(1878)				return ::hx::IsNotNull( this->preprocValue(_g->_hx_getString(0)) );
            			}
            			break;
            			case (int)5: {
HXLINE(1882)				return this->evalPreproCond(_g->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)8: {
HXLINE(1885)				 ::crowplexus::hscript::Expr _g1 = _g->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN(1885)				 ::crowplexus::hscript::Expr _g2 = _g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN(1885)				::String _hx_switch_0 = _g->_hx_getString(0);
            				if (  (_hx_switch_0==HX_("&&",40,21,00,00)) ){
HXLINE(1884)					if (this->evalPreproCond(_g1)) {
HXLINE(1884)						return this->evalPreproCond(_g2);
            					}
            					else {
HXLINE(1884)						return false;
            					}
HXDLIN(1884)					goto _hx_goto_110;
            				}
            				if (  (_hx_switch_0==HX_("||",80,6c,00,00)) ){
HXLINE(1886)					if (!(this->evalPreproCond(_g1))) {
HXLINE(1886)						return this->evalPreproCond(_g2);
            					}
            					else {
HXLINE(1886)						return true;
            					}
HXDLIN(1886)					goto _hx_goto_110;
            				}
            				/* default */{
HXLINE(1888)					{
HXLINE(1888)						 ::crowplexus::hscript::ErrorDef err = ::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->e)));
HXDLIN(1888)						if (!(this->resumeErrors)) {
HXLINE(1888)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err,this->readPos,this->readPos,this->origin,this->line));
            						}
            					}
HXLINE(1889)					return false;
            				}
            				_hx_goto_110:;
            			}
            			break;
            			case (int)9: {
HXLINE(1879)				if ((_g->_hx_getString(0) == HX_("!",21,00,00,00))) {
HXLINE(1880)					return !(this->evalPreproCond(_g->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >()));
            				}
            				else {
HXLINE(1888)					{
HXLINE(1888)						 ::crowplexus::hscript::ErrorDef err1 = ::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->e)));
HXDLIN(1888)						if (!(this->resumeErrors)) {
HXLINE(1888)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err1,this->readPos,this->readPos,this->origin,this->line));
            						}
            					}
HXLINE(1889)					return false;
            				}
            			}
            			break;
            			default:{
HXLINE(1888)				{
HXLINE(1888)					 ::crowplexus::hscript::ErrorDef err2 = ::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor((HX_("Can't eval ",01,17,bf,09) + ::Type_obj::enumConstructor(e->e)));
HXDLIN(1888)					if (!(this->resumeErrors)) {
HXLINE(1888)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,err2,this->readPos,this->readPos,this->origin,this->line));
            					}
            				}
HXLINE(1889)				return false;
            			}
            		}
HXLINE(1876)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,evalPreproCond,return )

 ::crowplexus::hscript::Token Parser_obj::preprocess(::String id){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1894_preprocess)
HXDLIN(1894)		::String _hx_switch_0 = id;
            		if (  (_hx_switch_0==HX_("else",b9,e4,14,43)) ||  (_hx_switch_0==HX_("elseif",d6,a0,a2,dd)) ){
HXLINE(1904)			if ((this->preprocStack->length > 0)) {
HXLINE(1905)				if (this->preprocStack->__get((this->preprocStack->length - 1))) {
HXLINE(1906)					this->preprocStack[(this->preprocStack->length - 1)] = false;
HXLINE(1907)					this->skipTokens();
HXLINE(1908)					return this->token();
            				}
            				else {
HXLINE(1909)					if ((id == HX_("else",b9,e4,14,43))) {
HXLINE(1910)						this->preprocStack->pop();
HXLINE(1911)						this->preprocStack->push(true);
HXLINE(1912)						return this->token();
            					}
            					else {
HXLINE(1915)						this->preprocStack->pop();
HXLINE(1916)						return this->preprocess(HX_("if",dd,5b,00,00));
            					}
            				}
            			}
            			else {
HXLINE(1922)				return ::crowplexus::hscript::Token_obj::TPrepro(id);
            			}
HXLINE(1904)			goto _hx_goto_112;
            		}
            		if (  (_hx_switch_0==HX_("end",db,03,4d,00)) ){
HXLINE(1918)			if ((this->preprocStack->length > 0)) {
HXLINE(1919)				this->preprocStack->pop();
HXLINE(1920)				return this->token();
            			}
            			else {
HXLINE(1922)				return ::crowplexus::hscript::Token_obj::TPrepro(id);
            			}
HXLINE(1918)			goto _hx_goto_112;
            		}
            		if (  (_hx_switch_0==HX_("if",dd,5b,00,00)) ){
HXLINE(1897)			if (this->evalPreproCond(this->parsePreproCond())) {
HXLINE(1898)				this->preprocStack->push(true);
HXLINE(1899)				return this->token();
            			}
HXLINE(1901)			this->preprocStack->push(false);
HXLINE(1902)			this->skipTokens();
HXLINE(1903)			return this->token();
HXLINE(1895)			goto _hx_goto_112;
            		}
            		/* default */{
HXLINE(1922)			return ::crowplexus::hscript::Token_obj::TPrepro(id);
            		}
            		_hx_goto_112:;
HXLINE(1894)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,preprocess,return )

void Parser_obj::skipTokens(){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1926_skipTokens)
HXLINE(1927)		int spos = (this->preprocStack->length - 1);
HXLINE(1928)		bool obj = this->preprocStack->__get(spos);
HXLINE(1929)		int pos = this->readPos;
HXLINE(1930)		while(true){
HXLINE(1931)			 ::crowplexus::hscript::Token tk = this->token();
HXLINE(1932)			if (::hx::IsPointerEq( tk,::crowplexus::hscript::Token_obj::TEof_dyn() )) {
HXLINE(1933)				if (!(this->resumeErrors)) {
HXLINE(1933)					HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EInvalidPreprocessor(HX_("Unclosed",e5,94,4a,ea)),pos,pos,this->origin,this->line));
            				}
            			}
HXLINE(1934)			if ((this->preprocStack->__get(spos) != obj)) {
HXLINE(1935)				{
HXLINE(1935)					this->tokens->push( ::crowplexus::hscript::TokenPos_obj::__alloc( HX_CTX ,tk,this->tokenMin,this->tokenMax));
HXDLIN(1935)					this->tokenMin = this->oldTokenMin;
HXDLIN(1935)					this->tokenMax = this->oldTokenMax;
            				}
HXLINE(1936)				goto _hx_goto_114;
            			}
            		}
            		_hx_goto_114:;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Parser_obj,skipTokens,(void))

 ::crowplexus::hscript::Token Parser_obj::tokenComment(::String op,int _hx_char){
            	HX_GC_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1941_tokenComment)
HXLINE(1942)		 ::Dynamic c = op.charCodeAt(1);
HXLINE(1944)		if (::hx::IsEq( c,47 )) {
HXLINE(1945)			do {
HXLINE(1945)				bool _hx_tmp;
HXDLIN(1945)				if ((_hx_char != 13)) {
HXLINE(1945)					_hx_tmp = (_hx_char != 10);
            				}
            				else {
HXLINE(1945)					_hx_tmp = false;
            				}
HXDLIN(1945)				if (!(_hx_tmp)) {
HXLINE(1945)					goto _hx_goto_116;
            				}
HXLINE(1946)				_hx_char = this->input.cca(this->readPos++);
            			} while((_hx_char != 0));
            			_hx_goto_116:;
HXLINE(1950)			this->_hx_char = _hx_char;
HXLINE(1951)			return this->token();
            		}
HXLINE(1953)		if (::hx::IsEq( c,42 )) {
HXLINE(1954)			int old = this->line;
HXLINE(1955)			if ((op == HX_("/**/",a0,0a,31,1f))) {
HXLINE(1956)				this->_hx_char = _hx_char;
HXLINE(1957)				return this->token();
            			}
HXLINE(1959)			do {
HXLINE(1960)				while((_hx_char != 42)){
HXLINE(1961)					if ((_hx_char == 10)) {
HXLINE(1962)						this->line++;
            					}
HXLINE(1963)					_hx_char = this->input.cca(this->readPos++);
HXLINE(1964)					if ((_hx_char == 0)) {
HXLINE(1965)						this->line = old;
HXLINE(1966)						if (!(this->resumeErrors)) {
HXLINE(1966)							HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedComment_dyn(),this->tokenMin,this->tokenMin,this->origin,this->line));
            						}
HXLINE(1967)						goto _hx_goto_118;
            					}
            				}
            				_hx_goto_118:;
HXLINE(1970)				_hx_char = this->input.cca(this->readPos++);
HXLINE(1971)				if ((_hx_char == 0)) {
HXLINE(1972)					this->line = old;
HXLINE(1973)					if (!(this->resumeErrors)) {
HXLINE(1973)						HX_STACK_DO_THROW( ::crowplexus::hscript::Error_obj::__alloc( HX_CTX ,::crowplexus::hscript::ErrorDef_obj::EUnterminatedComment_dyn(),this->tokenMin,this->tokenMin,this->origin,this->line));
            					}
HXLINE(1974)					goto _hx_goto_117;
            				}
            			} while((_hx_char != 47));
            			_hx_goto_117:;
HXLINE(1979)			return this->token();
            		}
HXLINE(1981)		this->_hx_char = _hx_char;
HXLINE(1982)		return ::crowplexus::hscript::Token_obj::TOp(op);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Parser_obj,tokenComment,return )

::String Parser_obj::constString( ::crowplexus::hscript::Const c){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1986_constString)
HXDLIN(1986)		switch((int)(c->_hx_getIndex())){
            			case (int)0: {
HXLINE(1987)				return ::Std_obj::string(c->_hx_getInt(0));
            			}
            			break;
            			case (int)1: {
HXLINE(1988)				return ::Std_obj::string(c->_hx_getFloat(0));
            			}
            			break;
            			case (int)2: {
HXLINE(1989)				return c->_hx_getString(0);
            			}
            			break;
            		}
HXLINE(1986)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,constString,return )

::String Parser_obj::tokenString( ::crowplexus::hscript::Token t){
            	HX_STACKFRAME(&_hx_pos_33ecaaab98cb6dc7_1997_tokenString)
HXDLIN(1997)		switch((int)(t->_hx_getIndex())){
            			case (int)0: {
HXLINE(1998)				return HX_("<eof>",3e,ee,21,cf);
            			}
            			break;
            			case (int)1: {
HXLINE(1999)				return this->constString(t->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >());
            			}
            			break;
            			case (int)2: {
HXLINE(2000)				return t->_hx_getString(0);
            			}
            			break;
            			case (int)3: {
HXLINE(2001)				return t->_hx_getString(0);
            			}
            			break;
            			case (int)4: {
HXLINE(2002)				return HX_("(",28,00,00,00);
            			}
            			break;
            			case (int)5: {
HXLINE(2003)				return HX_(")",29,00,00,00);
            			}
            			break;
            			case (int)6: {
HXLINE(2004)				return HX_("{",7b,00,00,00);
            			}
            			break;
            			case (int)7: {
HXLINE(2005)				return HX_("}",7d,00,00,00);
            			}
            			break;
            			case (int)8: {
HXLINE(2006)				return HX_(".",2e,00,00,00);
            			}
            			break;
            			case (int)9: {
HXLINE(2007)				return HX_(",",2c,00,00,00);
            			}
            			break;
            			case (int)10: {
HXLINE(2008)				return HX_(";",3b,00,00,00);
            			}
            			break;
            			case (int)11: {
HXLINE(2009)				return HX_("[",5b,00,00,00);
            			}
            			break;
            			case (int)12: {
HXLINE(2010)				return HX_("]",5d,00,00,00);
            			}
            			break;
            			case (int)13: {
HXLINE(2011)				return HX_("?",3f,00,00,00);
            			}
            			break;
            			case (int)14: {
HXLINE(2012)				return HX_(":",3a,00,00,00);
            			}
            			break;
            			case (int)15: {
HXLINE(2013)				return (HX_("@",40,00,00,00) + t->_hx_getString(0));
            			}
            			break;
            			case (int)16: {
HXLINE(2014)				return (HX_("#",23,00,00,00) + t->_hx_getString(0));
            			}
            			break;
            			case (int)17: {
HXLINE(2015)				return HX_("?.",0f,37,00,00);
            			}
            			break;
            		}
HXLINE(1997)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Parser_obj,tokenString,return )


::hx::ObjectPtr< Parser_obj > Parser_obj::__new() {
	::hx::ObjectPtr< Parser_obj > __this = new Parser_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Parser_obj > Parser_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Parser_obj *__this = (Parser_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Parser_obj), true, "crowplexus.hscript.Parser"));
	*(void **)__this = Parser_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Parser_obj::Parser_obj()
{
}

void Parser_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Parser);
	HX_MARK_MEMBER_NAME(line,"line");
	HX_MARK_MEMBER_NAME(opChars,"opChars");
	HX_MARK_MEMBER_NAME(identChars,"identChars");
	HX_MARK_MEMBER_NAME(opPriority,"opPriority");
	HX_MARK_MEMBER_NAME(opRightAssoc,"opRightAssoc");
	HX_MARK_MEMBER_NAME(preprocesorValues,"preprocesorValues");
	HX_MARK_MEMBER_NAME(allowJSON,"allowJSON");
	HX_MARK_MEMBER_NAME(allowTypes,"allowTypes");
	HX_MARK_MEMBER_NAME(allowMetadata,"allowMetadata");
	HX_MARK_MEMBER_NAME(resumeErrors,"resumeErrors");
	HX_MARK_MEMBER_NAME(input,"input");
	HX_MARK_MEMBER_NAME(readPos,"readPos");
	HX_MARK_MEMBER_NAME(_hx_char,"char");
	HX_MARK_MEMBER_NAME(ops,"ops");
	HX_MARK_MEMBER_NAME(idents,"idents");
	HX_MARK_MEMBER_NAME(uid,"uid");
	HX_MARK_MEMBER_NAME(origin,"origin");
	HX_MARK_MEMBER_NAME(tokenMin,"tokenMin");
	HX_MARK_MEMBER_NAME(tokenMax,"tokenMax");
	HX_MARK_MEMBER_NAME(oldTokenMin,"oldTokenMin");
	HX_MARK_MEMBER_NAME(oldTokenMax,"oldTokenMax");
	HX_MARK_MEMBER_NAME(tokens,"tokens");
	HX_MARK_MEMBER_NAME(preprocStack,"preprocStack");
	HX_MARK_END_CLASS();
}

void Parser_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(line,"line");
	HX_VISIT_MEMBER_NAME(opChars,"opChars");
	HX_VISIT_MEMBER_NAME(identChars,"identChars");
	HX_VISIT_MEMBER_NAME(opPriority,"opPriority");
	HX_VISIT_MEMBER_NAME(opRightAssoc,"opRightAssoc");
	HX_VISIT_MEMBER_NAME(preprocesorValues,"preprocesorValues");
	HX_VISIT_MEMBER_NAME(allowJSON,"allowJSON");
	HX_VISIT_MEMBER_NAME(allowTypes,"allowTypes");
	HX_VISIT_MEMBER_NAME(allowMetadata,"allowMetadata");
	HX_VISIT_MEMBER_NAME(resumeErrors,"resumeErrors");
	HX_VISIT_MEMBER_NAME(input,"input");
	HX_VISIT_MEMBER_NAME(readPos,"readPos");
	HX_VISIT_MEMBER_NAME(_hx_char,"char");
	HX_VISIT_MEMBER_NAME(ops,"ops");
	HX_VISIT_MEMBER_NAME(idents,"idents");
	HX_VISIT_MEMBER_NAME(uid,"uid");
	HX_VISIT_MEMBER_NAME(origin,"origin");
	HX_VISIT_MEMBER_NAME(tokenMin,"tokenMin");
	HX_VISIT_MEMBER_NAME(tokenMax,"tokenMax");
	HX_VISIT_MEMBER_NAME(oldTokenMin,"oldTokenMin");
	HX_VISIT_MEMBER_NAME(oldTokenMax,"oldTokenMax");
	HX_VISIT_MEMBER_NAME(tokens,"tokens");
	HX_VISIT_MEMBER_NAME(preprocStack,"preprocStack");
}

::hx::Val Parser_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"mk") ) { return ::hx::Val( mk_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"ops") ) { return ::hx::Val( ops ); }
		if (HX_FIELD_EQ(inName,"uid") ) { return ::hx::Val( uid ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"line") ) { return ::hx::Val( line ); }
		if (HX_FIELD_EQ(inName,"char") ) { return ::hx::Val( _hx_char ); }
		if (HX_FIELD_EQ(inName,"push") ) { return ::hx::Val( push_dyn() ); }
		if (HX_FIELD_EQ(inName,"expr") ) { return ::hx::Val( expr_dyn() ); }
		if (HX_FIELD_EQ(inName,"pmin") ) { return ::hx::Val( pmin_dyn() ); }
		if (HX_FIELD_EQ(inName,"pmax") ) { return ::hx::Val( pmax_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"input") ) { return ::hx::Val( input ); }
		if (HX_FIELD_EQ(inName,"error") ) { return ::hx::Val( error_dyn() ); }
		if (HX_FIELD_EQ(inName,"maybe") ) { return ::hx::Val( maybe_dyn() ); }
		if (HX_FIELD_EQ(inName,"token") ) { return ::hx::Val( token_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"idents") ) { return ::hx::Val( idents ); }
		if (HX_FIELD_EQ(inName,"origin") ) { return ::hx::Val( origin ); }
		if (HX_FIELD_EQ(inName,"tokens") ) { return ::hx::Val( tokens ); }
		if (HX_FIELD_EQ(inName,"ensure") ) { return ::hx::Val( ensure_dyn() ); }
		if (HX_FIELD_EQ(inName,"_token") ) { return ::hx::Val( _token_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opChars") ) { return ::hx::Val( opChars ); }
		if (HX_FIELD_EQ(inName,"readPos") ) { return ::hx::Val( readPos ); }
		if (HX_FIELD_EQ(inName,"isBlock") ) { return ::hx::Val( isBlock_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"tokenMin") ) { return ::hx::Val( tokenMin ); }
		if (HX_FIELD_EQ(inName,"tokenMax") ) { return ::hx::Val( tokenMax ); }
		if (HX_FIELD_EQ(inName,"getIdent") ) { return ::hx::Val( getIdent_dyn() ); }
		if (HX_FIELD_EQ(inName,"mapCompr") ) { return ::hx::Val( mapCompr_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeUnop") ) { return ::hx::Val( makeUnop_dyn() ); }
		if (HX_FIELD_EQ(inName,"readChar") ) { return ::hx::Val( readChar_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"allowJSON") ) { return ::hx::Val( allowJSON ); }
		if (HX_FIELD_EQ(inName,"parseExpr") ) { return ::hx::Val( parseExpr_dyn() ); }
		if (HX_FIELD_EQ(inName,"makeBinop") ) { return ::hx::Val( makeBinop_dyn() ); }
		if (HX_FIELD_EQ(inName,"parsePath") ) { return ::hx::Val( parsePath_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseType") ) { return ::hx::Val( parseType_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"identChars") ) { return ::hx::Val( identChars ); }
		if (HX_FIELD_EQ(inName,"opPriority") ) { return ::hx::Val( opPriority ); }
		if (HX_FIELD_EQ(inName,"allowTypes") ) { return ::hx::Val( allowTypes ); }
		if (HX_FIELD_EQ(inName,"initParser") ) { return ::hx::Val( initParser_dyn() ); }
		if (HX_FIELD_EQ(inName,"unexpected") ) { return ::hx::Val( unexpected_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseField") ) { return ::hx::Val( parseField_dyn() ); }
		if (HX_FIELD_EQ(inName,"readString") ) { return ::hx::Val( readString_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocess") ) { return ::hx::Val( preprocess_dyn() ); }
		if (HX_FIELD_EQ(inName,"skipTokens") ) { return ::hx::Val( skipTokens_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"oldTokenMin") ) { return ::hx::Val( oldTokenMin ); }
		if (HX_FIELD_EQ(inName,"oldTokenMax") ) { return ::hx::Val( oldTokenMax ); }
		if (HX_FIELD_EQ(inName,"invalidChar") ) { return ::hx::Val( invalidChar_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseString") ) { return ::hx::Val( parseString_dyn() ); }
		if (HX_FIELD_EQ(inName,"ensureToken") ) { return ::hx::Val( ensureToken_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseObject") ) { return ::hx::Val( parseObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseLambda") ) { return ::hx::Val( parseLambda_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseModule") ) { return ::hx::Val( parseModule_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseParams") ) { return ::hx::Val( parseParams_dyn() ); }
		if (HX_FIELD_EQ(inName,"constString") ) { return ::hx::Val( constString_dyn() ); }
		if (HX_FIELD_EQ(inName,"tokenString") ) { return ::hx::Val( tokenString_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"opRightAssoc") ) { return ::hx::Val( opRightAssoc ); }
		if (HX_FIELD_EQ(inName,"resumeErrors") ) { return ::hx::Val( resumeErrors ); }
		if (HX_FIELD_EQ(inName,"extractIdent") ) { return ::hx::Val( extractIdent_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocValue") ) { return ::hx::Val( preprocValue_dyn() ); }
		if (HX_FIELD_EQ(inName,"preprocStack") ) { return ::hx::Val( preprocStack ); }
		if (HX_FIELD_EQ(inName,"tokenComment") ) { return ::hx::Val( tokenComment_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"allowMetadata") ) { return ::hx::Val( allowMetadata ); }
		if (HX_FIELD_EQ(inName,"parseFullExpr") ) { return ::hx::Val( parseFullExpr_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseMetaArgs") ) { return ::hx::Val( parseMetaArgs_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseExprNext") ) { return ::hx::Val( parseExprNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseTypeNext") ) { return ::hx::Val( parseTypeNext_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseExprList") ) { return ::hx::Val( parseExprList_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseMetadata") ) { return ::hx::Val( parseMetadata_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"parseStructure") ) { return ::hx::Val( parseStructure_dyn() ); }
		if (HX_FIELD_EQ(inName,"evalPreproCond") ) { return ::hx::Val( evalPreproCond_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"parseModuleDecl") ) { return ::hx::Val( parseModuleDecl_dyn() ); }
		if (HX_FIELD_EQ(inName,"parsePreproCond") ) { return ::hx::Val( parsePreproCond_dyn() ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"preprocesorValues") ) { return ::hx::Val( preprocesorValues ); }
		if (HX_FIELD_EQ(inName,"parseFunctionArgs") ) { return ::hx::Val( parseFunctionArgs_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseFunctionDecl") ) { return ::hx::Val( parseFunctionDecl_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Parser_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"ops") ) { ops=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"uid") ) { uid=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"line") ) { line=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"char") ) { _hx_char=inValue.Cast< int >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"input") ) { input=inValue.Cast< ::String >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"idents") ) { idents=inValue.Cast< ::Array< bool > >(); return inValue; }
		if (HX_FIELD_EQ(inName,"origin") ) { origin=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tokens") ) { tokens=inValue.Cast<  ::haxe::ds::List >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opChars") ) { opChars=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"readPos") ) { readPos=inValue.Cast< int >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"tokenMin") ) { tokenMin=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"tokenMax") ) { tokenMax=inValue.Cast< int >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"allowJSON") ) { allowJSON=inValue.Cast< bool >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"identChars") ) { identChars=inValue.Cast< ::String >(); return inValue; }
		if (HX_FIELD_EQ(inName,"opPriority") ) { opPriority=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"allowTypes") ) { allowTypes=inValue.Cast< bool >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"oldTokenMin") ) { oldTokenMin=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"oldTokenMax") ) { oldTokenMax=inValue.Cast< int >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"opRightAssoc") ) { opRightAssoc=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"resumeErrors") ) { resumeErrors=inValue.Cast< bool >(); return inValue; }
		if (HX_FIELD_EQ(inName,"preprocStack") ) { preprocStack=inValue.Cast< ::Array< bool > >(); return inValue; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"allowMetadata") ) { allowMetadata=inValue.Cast< bool >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"preprocesorValues") ) { preprocesorValues=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Parser_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("line",f4,17,b3,47));
	outFields->push(HX_("opChars",fc,f3,a7,a8));
	outFields->push(HX_("identChars",cd,23,3f,ee));
	outFields->push(HX_("opPriority",a5,21,d8,3e));
	outFields->push(HX_("opRightAssoc",9a,d1,fe,02));
	outFields->push(HX_("preprocesorValues",4c,e2,81,ce));
	outFields->push(HX_("allowJSON",31,27,44,b1));
	outFields->push(HX_("allowTypes",30,2b,97,45));
	outFields->push(HX_("allowMetadata",18,79,d4,10));
	outFields->push(HX_("resumeErrors",38,61,37,31));
	outFields->push(HX_("input",0a,c4,1d,be));
	outFields->push(HX_("readPos",de,03,cf,02));
	outFields->push(HX_("char",d6,5e,bf,41));
	outFields->push(HX_("ops",32,9c,54,00));
	outFields->push(HX_("idents",83,4f,a1,d2));
	outFields->push(HX_("uid",90,23,59,00));
	outFields->push(HX_("origin",e6,19,01,4b));
	outFields->push(HX_("tokenMin",19,a8,42,2b));
	outFields->push(HX_("tokenMax",2b,a1,42,2b));
	outFields->push(HX_("oldTokenMin",e0,7b,1c,6b));
	outFields->push(HX_("oldTokenMax",f2,74,1c,6b));
	outFields->push(HX_("tokens",5a,17,e7,91));
	outFields->push(HX_("preprocStack",4f,d3,9d,7a));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Parser_obj_sMemberStorageInfo[] = {
	{::hx::fsInt,(int)offsetof(Parser_obj,line),HX_("line",f4,17,b3,47)},
	{::hx::fsString,(int)offsetof(Parser_obj,opChars),HX_("opChars",fc,f3,a7,a8)},
	{::hx::fsString,(int)offsetof(Parser_obj,identChars),HX_("identChars",cd,23,3f,ee)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,opPriority),HX_("opPriority",a5,21,d8,3e)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,opRightAssoc),HX_("opRightAssoc",9a,d1,fe,02)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Parser_obj,preprocesorValues),HX_("preprocesorValues",4c,e2,81,ce)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowJSON),HX_("allowJSON",31,27,44,b1)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowTypes),HX_("allowTypes",30,2b,97,45)},
	{::hx::fsBool,(int)offsetof(Parser_obj,allowMetadata),HX_("allowMetadata",18,79,d4,10)},
	{::hx::fsBool,(int)offsetof(Parser_obj,resumeErrors),HX_("resumeErrors",38,61,37,31)},
	{::hx::fsString,(int)offsetof(Parser_obj,input),HX_("input",0a,c4,1d,be)},
	{::hx::fsInt,(int)offsetof(Parser_obj,readPos),HX_("readPos",de,03,cf,02)},
	{::hx::fsInt,(int)offsetof(Parser_obj,_hx_char),HX_("char",d6,5e,bf,41)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(Parser_obj,ops),HX_("ops",32,9c,54,00)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(Parser_obj,idents),HX_("idents",83,4f,a1,d2)},
	{::hx::fsInt,(int)offsetof(Parser_obj,uid),HX_("uid",90,23,59,00)},
	{::hx::fsString,(int)offsetof(Parser_obj,origin),HX_("origin",e6,19,01,4b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,tokenMin),HX_("tokenMin",19,a8,42,2b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,tokenMax),HX_("tokenMax",2b,a1,42,2b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,oldTokenMin),HX_("oldTokenMin",e0,7b,1c,6b)},
	{::hx::fsInt,(int)offsetof(Parser_obj,oldTokenMax),HX_("oldTokenMax",f2,74,1c,6b)},
	{::hx::fsObject /*  ::haxe::ds::List */ ,(int)offsetof(Parser_obj,tokens),HX_("tokens",5a,17,e7,91)},
	{::hx::fsObject /* ::Array< bool > */ ,(int)offsetof(Parser_obj,preprocStack),HX_("preprocStack",4f,d3,9d,7a)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Parser_obj_sStaticStorageInfo = 0;
#endif

static ::String Parser_obj_sMemberFields[] = {
	HX_("line",f4,17,b3,47),
	HX_("opChars",fc,f3,a7,a8),
	HX_("identChars",cd,23,3f,ee),
	HX_("opPriority",a5,21,d8,3e),
	HX_("opRightAssoc",9a,d1,fe,02),
	HX_("preprocesorValues",4c,e2,81,ce),
	HX_("allowJSON",31,27,44,b1),
	HX_("allowTypes",30,2b,97,45),
	HX_("allowMetadata",18,79,d4,10),
	HX_("resumeErrors",38,61,37,31),
	HX_("input",0a,c4,1d,be),
	HX_("readPos",de,03,cf,02),
	HX_("char",d6,5e,bf,41),
	HX_("ops",32,9c,54,00),
	HX_("idents",83,4f,a1,d2),
	HX_("uid",90,23,59,00),
	HX_("origin",e6,19,01,4b),
	HX_("tokenMin",19,a8,42,2b),
	HX_("tokenMax",2b,a1,42,2b),
	HX_("oldTokenMin",e0,7b,1c,6b),
	HX_("oldTokenMax",f2,74,1c,6b),
	HX_("tokens",5a,17,e7,91),
	HX_("error",c8,cb,29,73),
	HX_("invalidChar",6d,ad,ce,a9),
	HX_("initParser",0f,f8,cd,f1),
	HX_("parseString",64,d5,6c,8c),
	HX_("unexpected",d1,15,f4,c5),
	HX_("push",da,11,61,4a),
	HX_("ensure",be,f5,7b,04),
	HX_("ensureToken",5b,6c,33,ec),
	HX_("maybe",a8,13,27,03),
	HX_("getIdent",7a,52,50,17),
	HX_("extractIdent",ef,51,fe,d6),
	HX_("expr",35,fd,1d,43),
	HX_("pmin",22,f7,5a,4a),
	HX_("pmax",34,f0,5a,4a),
	HX_("mk",5e,5f,00,00),
	HX_("isBlock",03,19,82,51),
	HX_("parseFullExpr",b7,bd,60,9c),
	HX_("parseObject",52,2b,7c,90),
	HX_("parseExpr",08,4f,c4,ca),
	HX_("parseLambda",9a,df,fc,cb),
	HX_("parseMetaArgs",15,82,33,6e),
	HX_("mapCompr",47,a4,9f,c1),
	HX_("makeUnop",c8,c4,47,44),
	HX_("makeBinop",da,90,98,86),
	HX_("parseStructure",80,85,70,8b),
	HX_("parseExprNext",1b,24,a8,f3),
	HX_("parseFunctionArgs",68,ad,48,04),
	HX_("parseFunctionDecl",75,70,3a,06),
	HX_("parsePath",78,37,f8,d1),
	HX_("parseType",8d,44,af,d4),
	HX_("parseTypeNext",20,c0,fc,fa),
	HX_("parseExprList",86,bb,58,f2),
	HX_("parseModule",3f,e1,0f,3c),
	HX_("parseMetadata",c2,1e,49,85),
	HX_("parseParams",d9,a7,b7,68),
	HX_("parseModuleDecl",49,69,92,8b),
	HX_("parseField",87,db,74,2a),
	HX_("readChar",4c,39,b7,69),
	HX_("readString",c7,0c,ac,0a),
	HX_("token",f9,82,2b,14),
	HX_("_token",3a,ca,12,10),
	HX_("preprocValue",78,eb,4a,28),
	HX_("preprocStack",4f,d3,9d,7a),
	HX_("parsePreproCond",ff,8c,11,d6),
	HX_("evalPreproCond",a8,25,52,b0),
	HX_("preprocess",ac,dc,46,92),
	HX_("skipTokens",39,0b,eb,f9),
	HX_("tokenComment",66,60,fb,25),
	HX_("constString",94,42,30,a9),
	HX_("tokenString",aa,20,de,a4),
	::String(null()) };

::hx::Class Parser_obj::__mClass;

void Parser_obj::__register()
{
	Parser_obj _hx_dummy;
	Parser_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.Parser",64,46,ff,14);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Parser_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Parser_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Parser_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Parser_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript
