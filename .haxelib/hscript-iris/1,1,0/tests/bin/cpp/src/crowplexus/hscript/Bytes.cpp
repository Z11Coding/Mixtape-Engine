// Generated by Haxe 4.3.5
#include <hxcpp.h>

#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Bytes
#include <crowplexus/hscript/Bytes.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_CType
#include <crowplexus/hscript/CType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Const
#include <crowplexus/hscript/Const.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_EnumType
#include <crowplexus/hscript/EnumType.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_Expr
#include <crowplexus/hscript/Expr.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ExprDef
#include <crowplexus/hscript/ExprDef.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_ObjectDecl
#include <crowplexus/hscript/ObjectDecl.h>
#endif
#ifndef INCLUDED_crowplexus_hscript_SwitchCase
#include <crowplexus/hscript/SwitchCase.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Serializer
#include <haxe/Serializer.h>
#endif
#ifndef INCLUDED_haxe_Unserializer
#include <haxe/Unserializer.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_haxe_io_BytesBuffer
#include <haxe/io/BytesBuffer.h>
#endif
#ifndef INCLUDED_haxe_io_Encoding
#include <haxe/io/Encoding.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_92_new,"crowplexus.hscript.Bytes","new",0xcc1a1278,"crowplexus.hscript.Bytes.new","crowplexus/hscript/Bytes.hx",92,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_131_doEncodeOp,"crowplexus.hscript.Bytes","doEncodeOp",0xd4eb306a,"crowplexus.hscript.Bytes.doEncodeOp","crowplexus/hscript/Bytes.hx",131,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_143_doDecodeOp,"crowplexus.hscript.Bytes","doDecodeOp",0x25779182,"crowplexus.hscript.Bytes.doDecodeOp","crowplexus/hscript/Bytes.hx",143,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_153_doEncodeString,"crowplexus.hscript.Bytes","doEncodeString",0x9d6ed09a,"crowplexus.hscript.Bytes.doEncodeString","crowplexus/hscript/Bytes.hx",153,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_170_doDecodeString,"crowplexus.hscript.Bytes","doDecodeString",0xd3dd9db2,"crowplexus.hscript.Bytes.doDecodeString","crowplexus/hscript/Bytes.hx",170,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_184_doEncodeInt,"crowplexus.hscript.Bytes","doEncodeInt",0x78da9d86,"crowplexus.hscript.Bytes.doEncodeInt","crowplexus/hscript/Bytes.hx",184,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_202_doEncodeBool,"crowplexus.hscript.Bytes","doEncodeBool",0x41cf77b3,"crowplexus.hscript.Bytes.doEncodeBool","crowplexus/hscript/Bytes.hx",202,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_206_doEncodeConst,"crowplexus.hscript.Bytes","doEncodeConst",0xe71f1dba,"crowplexus.hscript.Bytes.doEncodeConst","crowplexus/hscript/Bytes.hx",206,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_233_doDecodeInt,"crowplexus.hscript.Bytes","doDecodeInt",0xa323316e,"crowplexus.hscript.Bytes.doDecodeInt","crowplexus/hscript/Bytes.hx",233,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_255_doDecodeConst,"crowplexus.hscript.Bytes","doDecodeConst",0xa3a27ba2,"crowplexus.hscript.Bytes.doDecodeConst","crowplexus/hscript/Bytes.hx",255,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_277_doDecodeArg,"crowplexus.hscript.Bytes","doDecodeArg",0xa31d22d5,"crowplexus.hscript.Bytes.doDecodeArg","crowplexus/hscript/Bytes.hx",277,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_350_doEncodeExprType,"crowplexus.hscript.Bytes","doEncodeExprType",0xc98e4698,"crowplexus.hscript.Bytes.doEncodeExprType","crowplexus/hscript/Bytes.hx",350,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_353_doEncodeArg,"crowplexus.hscript.Bytes","doEncodeArg",0x78d48eed,"crowplexus.hscript.Bytes.doEncodeArg","crowplexus/hscript/Bytes.hx",353,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_359_doEncode,"crowplexus.hscript.Bytes","doEncode",0x7ad69ee9,"crowplexus.hscript.Bytes.doEncode","crowplexus/hscript/Bytes.hx",359,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_539_doDecodeBool,"crowplexus.hscript.Bytes","doDecodeBool",0x17084ecb,"crowplexus.hscript.Bytes.doDecodeBool","crowplexus/hscript/Bytes.hx",539,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_542_doDecode,"crowplexus.hscript.Bytes","doDecode",0xe5e00a01,"crowplexus.hscript.Bytes.doDecode","crowplexus/hscript/Bytes.hx",542,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_560__doDecode,"crowplexus.hscript.Bytes","_doDecode",0x9381be90,"crowplexus.hscript.Bytes._doDecode","crowplexus/hscript/Bytes.hx",560,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_724_encode,"crowplexus.hscript.Bytes","encode",0xfdd00efe,"crowplexus.hscript.Bytes.encode","crowplexus/hscript/Bytes.hx",724,0xa9771efa)
HX_LOCAL_STACK_FRAME(_hx_pos_dfa5de78a2b125fe_732_decode,"crowplexus.hscript.Bytes","decode",0x68d97a16,"crowplexus.hscript.Bytes.decode","crowplexus/hscript/Bytes.hx",732,0xa9771efa)
namespace crowplexus{
namespace hscript{

void Bytes_obj::__construct( ::haxe::io::Bytes bin){
            	HX_GC_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_92_new)
HXLINE(  93)		this->bin = bin;
HXLINE(  94)		this->pin = 0;
HXLINE(  95)		this->bout =  ::haxe::io::BytesBuffer_obj::__alloc( HX_CTX );
HXLINE(  96)		this->hstrings =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  97)		this->strings = ::Array_obj< ::String >::__new(1)->init(0,null());
HXLINE(  98)		this->nstrings = 1;
HXLINE( 100)		this->opMap =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 101)		this->opMap->set(HX_("+",2b,00,00,00),0);
HXLINE( 102)		this->opMap->set(HX_("-",2d,00,00,00),1);
HXLINE( 103)		this->opMap->set(HX_("*",2a,00,00,00),2);
HXLINE( 104)		this->opMap->set(HX_("/",2f,00,00,00),3);
HXLINE( 105)		this->opMap->set(HX_("%",25,00,00,00),4);
HXLINE( 106)		this->opMap->set(HX_("&",26,00,00,00),5);
HXLINE( 107)		this->opMap->set(HX_("|",7c,00,00,00),6);
HXLINE( 108)		this->opMap->set(HX_("^",5e,00,00,00),7);
HXLINE( 109)		this->opMap->set(HX_("<<",80,34,00,00),8);
HXLINE( 110)		this->opMap->set(HX_(">>",40,36,00,00),9);
HXLINE( 111)		this->opMap->set(HX_(">>>",fe,41,2f,00),10);
HXLINE( 112)		this->opMap->set(HX_("==",60,35,00,00),11);
HXLINE( 113)		this->opMap->set(HX_("!=",fc,1c,00,00),12);
HXLINE( 114)		this->opMap->set(HX_(">=",3f,36,00,00),13);
HXLINE( 115)		this->opMap->set(HX_("<=",81,34,00,00),14);
HXLINE( 116)		this->opMap->set(HX_(">",3e,00,00,00),15);
HXLINE( 117)		this->opMap->set(HX_("<",3c,00,00,00),16);
HXLINE( 118)		this->opMap->set(HX_("||",80,6c,00,00),17);
HXLINE( 119)		this->opMap->set(HX_("&&",40,21,00,00),18);
HXLINE( 120)		this->opMap->set(HX_("=",3d,00,00,00),19);
HXLINE( 121)		this->opMap->set(HX_("??",20,37,00,00),20);
HXLINE( 122)		this->opMap->set(HX_("...",ee,0f,23,00),21);
HXLINE( 124)		this->opMap->set(HX_("!",21,00,00,00),22);
HXLINE( 125)		this->opMap->set(HX_("~",7e,00,00,00),24);
HXLINE( 127)		{
HXLINE( 127)			::Dynamic this1 = this->opMap;
HXDLIN( 127)			 ::Dynamic _g_keys = ::haxe::IMap_obj::keys(this1);
HXDLIN( 127)			while(( (bool)(_g_keys->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 127)				::String key = ( (::String)(_g_keys->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXDLIN( 127)				int _g_value = ( (int)(::haxe::IMap_obj::get(this1,key)) );
HXLINE( 128)				this->opMap->set(key,(_g_value << 1));
            			}
            		}
            	}

Dynamic Bytes_obj::__CreateEmpty() { return new Bytes_obj; }

void *Bytes_obj::_hx_vtable = 0;

Dynamic Bytes_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Bytes_obj > _hx_result = new Bytes_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool Bytes_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7a1d915c;
}

void Bytes_obj::doEncodeOp(::String op){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_131_doEncodeOp)
HXLINE( 132)		bool isAssign;
HXDLIN( 132)		if (!(this->opMap->exists(op))) {
HXLINE( 132)			isAssign = ::hx::IsEq( op.charCodeAt((op.length - 1)),61 );
            		}
            		else {
HXLINE( 132)			isAssign = false;
            		}
HXLINE( 133)		::String _op = op;
HXLINE( 134)		if (isAssign) {
HXLINE( 135)			op = op.substr(0,(op.length - 1));
            		}
HXLINE( 137)		 ::Dynamic v = this->opMap->get(op);
HXLINE( 138)		if (::hx::IsNull( v )) {
HXLINE( 139)			HX_STACK_DO_THROW((HX_("Invalid operator ",73,a5,0f,c3) + _op));
            		}
HXLINE( 140)		this->bout->b->push(( (int)(v) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncodeOp,(void))

::String Bytes_obj::doDecodeOp(){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_143_doDecodeOp)
HXLINE( 144)		int v = ( (int)(this->bin->b->__get(this->pin++)) );
HXLINE( 145)		bool isAssign = ((v & 1) != 0);
HXLINE( 146)		v = (v >> 1);
HXLINE( 147)		{
HXLINE( 147)			::Dynamic this1 = this->opMap;
HXDLIN( 147)			 ::Dynamic _g_keys = ::haxe::IMap_obj::keys(this1);
HXDLIN( 147)			while(( (bool)(_g_keys->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE( 147)				::String key = ( (::String)(_g_keys->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE( 148)				if ((( (int)(::haxe::IMap_obj::get(this1,key)) ) == v)) {
HXLINE( 149)					::String _hx_tmp;
HXDLIN( 149)					if (isAssign) {
HXLINE( 149)						_hx_tmp = HX_("=",3d,00,00,00);
            					}
            					else {
HXLINE( 149)						_hx_tmp = HX_("",00,00,00,00);
            					}
HXDLIN( 149)					return (key + _hx_tmp);
            				}
            			}
            		}
HXLINE( 150)		HX_STACK_DO_THROW((HX_("Invalid operator ",73,a5,0f,c3) + v));
HXDLIN( 150)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,doDecodeOp,return )

void Bytes_obj::doEncodeString(::String v){
            	HX_GC_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_153_doEncodeString)
HXLINE( 154)		 ::Dynamic vid = this->hstrings->get(v);
HXLINE( 155)		if (::hx::IsNull( vid )) {
HXLINE( 156)			if ((this->nstrings == 256)) {
HXLINE( 157)				this->hstrings =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE( 158)				this->nstrings = 1;
            			}
HXLINE( 160)			this->hstrings->set(v,this->nstrings);
HXLINE( 161)			this->bout->b->push(0);
HXLINE( 162)			 ::haxe::io::Bytes vb = ::haxe::io::Bytes_obj::ofString(v,null());
HXLINE( 163)			this->bout->b->push(vb->length);
HXLINE( 164)			{
HXLINE( 164)				 ::haxe::io::BytesBuffer _this = this->bout;
HXDLIN( 164)				::Array< unsigned char > b2 = vb->b;
HXDLIN( 164)				{
HXLINE( 164)					int _g = 0;
HXDLIN( 164)					int _g1 = vb->length;
HXDLIN( 164)					while((_g < _g1)){
HXLINE( 164)						_g = (_g + 1);
HXDLIN( 164)						_this->b->push(b2->__get((_g - 1)));
            					}
            				}
            			}
HXLINE( 165)			this->nstrings++;
            		}
            		else {
HXLINE( 167)			this->bout->b->push(( (int)(vid) ));
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncodeString,(void))

::String Bytes_obj::doDecodeString(){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_170_doDecodeString)
HXLINE( 171)		int id = ( (int)(this->bin->b->__get(this->pin++)) );
HXLINE( 172)		if ((id == 0)) {
HXLINE( 173)			int len = ( (int)(this->bin->b->__get(this->pin)) );
HXLINE( 174)			::String str = this->bin->getString((this->pin + 1),len,null());
HXLINE( 175)			this->pin = (this->pin + (len + 1));
HXLINE( 176)			if ((this->strings->length == 255)) {
HXLINE( 177)				this->strings = ::Array_obj< ::String >::__new(1)->init(0,null());
            			}
HXLINE( 178)			this->strings->push(str);
HXLINE( 179)			return str;
            		}
HXLINE( 181)		return this->strings->__get(id);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,doDecodeString,return )

void Bytes_obj::doEncodeInt(int v){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_184_doEncodeInt)
HXLINE( 185)		bool isNeg = (v < 0);
HXLINE( 186)		if (isNeg) {
HXLINE( 187)			v = -(v);
            		}
HXLINE( 188)		bool _hx_tmp;
HXDLIN( 188)		if ((v >= 0)) {
HXLINE( 188)			_hx_tmp = (v <= 255);
            		}
            		else {
HXLINE( 188)			_hx_tmp = false;
            		}
HXDLIN( 188)		if (_hx_tmp) {
HXLINE( 189)			{
HXLINE( 189)				int _hx_tmp1;
HXDLIN( 189)				if (isNeg) {
HXLINE( 189)					_hx_tmp1 = ( (int)(( (signed char)(3) )) );
            				}
            				else {
HXLINE( 189)					_hx_tmp1 = ( (int)(( (signed char)(0) )) );
            				}
HXDLIN( 189)				this->bout->b->push(_hx_tmp1);
            			}
HXLINE( 190)			this->bout->b->push(v);
            		}
            		else {
HXLINE( 191)			bool _hx_tmp2;
HXDLIN( 191)			if ((v >= 0)) {
HXLINE( 191)				_hx_tmp2 = (v <= 65535);
            			}
            			else {
HXLINE( 191)				_hx_tmp2 = false;
            			}
HXDLIN( 191)			if (_hx_tmp2) {
HXLINE( 192)				{
HXLINE( 192)					int _hx_tmp3;
HXDLIN( 192)					if (isNeg) {
HXLINE( 192)						_hx_tmp3 = ( (int)(( (signed char)(4) )) );
            					}
            					else {
HXLINE( 192)						_hx_tmp3 = ( (int)(( (signed char)(1) )) );
            					}
HXDLIN( 192)					this->bout->b->push(_hx_tmp3);
            				}
HXLINE( 193)				this->bout->b->push((v & 255));
HXLINE( 194)				this->bout->b->push(((v >> 8) & 255));
            			}
            			else {
HXLINE( 196)				{
HXLINE( 196)					int _hx_tmp4;
HXDLIN( 196)					if (isNeg) {
HXLINE( 196)						_hx_tmp4 = ( (int)(( (signed char)(5) )) );
            					}
            					else {
HXLINE( 196)						_hx_tmp4 = ( (int)(( (signed char)(2) )) );
            					}
HXDLIN( 196)					this->bout->b->push(_hx_tmp4);
            				}
HXLINE( 197)				this->bout->addInt32(v);
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncodeInt,(void))

void Bytes_obj::doEncodeBool(bool v){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_202_doEncodeBool)
HXDLIN( 202)		int _hx_tmp;
HXDLIN( 202)		if (v) {
HXDLIN( 202)			_hx_tmp = 1;
            		}
            		else {
HXDLIN( 202)			_hx_tmp = 0;
            		}
HXDLIN( 202)		this->bout->b->push(_hx_tmp);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncodeBool,(void))

void Bytes_obj::doEncodeConst( ::crowplexus::hscript::Const c){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_206_doEncodeConst)
HXDLIN( 206)		switch((int)(c->_hx_getIndex())){
            			case (int)0: {
HXLINE( 207)				int _g = c->_hx_getInt(0);
HXDLIN( 207)				{
HXLINE( 208)					bool _hx_tmp;
HXDLIN( 208)					if ((_g >= 0)) {
HXLINE( 208)						_hx_tmp = (_g <= 255);
            					}
            					else {
HXLINE( 208)						_hx_tmp = false;
            					}
HXDLIN( 208)					if (_hx_tmp) {
HXLINE( 209)						this->bout->b->push(( (signed char)(1) ));
HXLINE( 210)						this->bout->b->push((_g & 255));
            					}
            					else {
HXLINE( 212)						this->bout->b->push(( (signed char)(0) ));
HXLINE( 213)						this->doEncodeInt(_g);
            					}
            				}
            			}
            			break;
            			case (int)1: {
HXLINE( 216)				this->bout->b->push(( (signed char)(2) ));
HXLINE( 217)				this->doEncodeString(::Std_obj::string(c->_hx_getFloat(0)));
            			}
            			break;
            			case (int)2: {
HXLINE( 219)				this->bout->b->push(( (signed char)(3) ));
HXLINE( 220)				this->doEncodeString(c->_hx_getString(0));
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncodeConst,(void))

int Bytes_obj::doDecodeInt(){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_233_doDecodeInt)
HXLINE( 234)		signed char size = ::hx::TCast< signed char >::cast(( (int)(this->bin->b->__get(this->pin++)) ));
HXLINE( 235)		int i;
HXDLIN( 235)		signed char _hx_switch_0 = size;
            		if (  (_hx_switch_0==( (signed char)(0) )) ||  (_hx_switch_0==( (signed char)(3) )) ){
HXLINE( 235)			i = ( (int)(this->bin->b->__get(this->pin++)) );
HXDLIN( 235)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==( (signed char)(1) )) ||  (_hx_switch_0==( (signed char)(4) )) ){
HXLINE( 237)			int i1 = ( (int)(this->bin->b->__get(this->pin++)) );
HXLINE( 235)			i = (i1 | (( (int)(this->bin->b->__get(this->pin++)) ) << 8));
HXDLIN( 235)			goto _hx_goto_11;
            		}
            		if (  (_hx_switch_0==( (signed char)(2) )) ||  (_hx_switch_0==( (signed char)(5) )) ){
HXLINE( 238)			 ::haxe::io::Bytes _this = this->bin;
HXDLIN( 238)			int pos = this->pin;
HXLINE( 235)			i = (((( (int)(_this->b->__get(pos)) ) | (( (int)(_this->b->__get((pos + 1))) ) << 8)) | (( (int)(_this->b->__get((pos + 2))) ) << 16)) | (( (int)(_this->b->__get((pos + 3))) ) << 24));
HXLINE( 238)			goto _hx_goto_11;
            		}
            		_hx_goto_11:;
HXLINE( 240)		signed char _hx_switch_1 = size;
            		if (  (_hx_switch_1==( (signed char)(0) )) ||  (_hx_switch_1==( (signed char)(3) )) ){
HXLINE( 241)			goto _hx_goto_12;
            		}
            		if (  (_hx_switch_1==( (signed char)(1) )) ||  (_hx_switch_1==( (signed char)(4) )) ){
HXLINE( 242)			goto _hx_goto_12;
            		}
            		if (  (_hx_switch_1==( (signed char)(2) )) ||  (_hx_switch_1==( (signed char)(5) )) ){
HXLINE( 244)			this->pin = (this->pin + 4);
HXDLIN( 244)			goto _hx_goto_12;
            		}
            		_hx_goto_12:;
HXLINE( 246)		signed char _hx_switch_2 = size;
            		if (  (_hx_switch_2==( (signed char)(3) )) ||  (_hx_switch_2==( (signed char)(4) )) ||  (_hx_switch_2==( (signed char)(5) )) ){
HXLINE( 248)			i = -(i);
HXDLIN( 248)			goto _hx_goto_13;
            		}
            		/* default */{
            		}
            		_hx_goto_13:;
HXLINE( 251)		return i;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,doDecodeInt,return )

 ::crowplexus::hscript::Const Bytes_obj::doDecodeConst(){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_255_doDecodeConst)
HXDLIN( 255)		switch((int)(( (int)(this->bin->b->__get(this->pin++)) ))){
            			case (int)0: {
HXLINE( 260)				return ::crowplexus::hscript::Const_obj::CInt(this->doDecodeInt());
            			}
            			break;
            			case (int)1: {
HXLINE( 257)				return ::crowplexus::hscript::Const_obj::CInt(this->bin->b->__get(this->pin++));
            			}
            			break;
            			case (int)2: {
HXLINE( 262)				return ::crowplexus::hscript::Const_obj::CFloat(::Std_obj::parseFloat(this->doDecodeString()));
            			}
            			break;
            			case (int)3: {
HXLINE( 264)				return ::crowplexus::hscript::Const_obj::CString(this->doDecodeString());
            			}
            			break;
            			default:{
HXLINE( 273)				HX_STACK_DO_THROW((HX_("Invalid code ",4a,20,8f,2e) + this->bin->b->__get((this->pin - 1))));
            			}
            		}
HXLINE( 255)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,doDecodeConst,return )

 ::Dynamic Bytes_obj::doDecodeArg(){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_277_doDecodeArg)
HXLINE( 278)		::String name = this->doDecodeString();
HXLINE( 280)		return  ::Dynamic(::hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("t",74,00,00,00),null())
            			->setFixed(1,HX_("opt",33,9c,54,00),this->doDecodeBool())
            			->setFixed(2,HX_("name",4b,72,ff,48),name));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,doDecodeArg,return )

void Bytes_obj::doEncodeExprType(signed char t){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_350_doEncodeExprType)
HXDLIN( 350)		this->bout->b->push(t);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncodeExprType,(void))

void Bytes_obj::doEncodeArg( ::Dynamic a){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_353_doEncodeArg)
HXLINE( 354)		this->doEncodeString(( (::String)(a->__Field(HX_("name",4b,72,ff,48),::hx::paccDynamic)) ));
HXLINE( 355)		this->doEncodeBool(( (bool)(a->__Field(HX_("opt",33,9c,54,00),::hx::paccDynamic)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncodeArg,(void))

void Bytes_obj::doEncode( ::crowplexus::hscript::Expr e){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_359_doEncode)
HXLINE( 361)		this->doEncodeString(e->origin);
HXLINE( 362)		this->doEncodeInt(e->line);
HXLINE( 363)		 ::crowplexus::hscript::ExprDef e1 = e->e;
HXLINE( 365)		switch((int)(e1->_hx_getIndex())){
            			case (int)0: {
            			}
            			break;
            			case (int)1: {
HXLINE( 368)				this->doEncodeExprType(( (signed char)(2) ));
HXLINE( 369)				this->doEncodeConst(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Const >());
            			}
            			break;
            			case (int)2: {
HXLINE( 371)				this->doEncodeExprType(( (signed char)(0) ));
HXLINE( 372)				this->doEncodeString(e1->_hx_getString(0));
            			}
            			break;
            			case (int)3: {
HXLINE( 531)				this->doEncodeExprType(( (signed char)(27) ));
HXLINE( 532)				this->doEncodeString(e1->_hx_getString(0));
HXLINE( 533)				this->doEncodeString(e1->_hx_getString(1));
            			}
            			break;
            			case (int)4: {
HXLINE( 373)				 ::crowplexus::hscript::Expr _g = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 373)				{
HXLINE( 374)					this->doEncodeExprType(( (signed char)(1) ));
HXLINE( 375)					this->doEncodeString(e1->_hx_getString(0));
HXLINE( 376)					if (::hx::IsNull( _g )) {
HXLINE( 377)						this->bout->b->push(255);
            					}
            					else {
HXLINE( 379)						this->doEncode(_g);
            					}
HXLINE( 380)					this->doEncodeBool(( (bool)(e1->_hx_getObject(3)) ));
            				}
            			}
            			break;
            			case (int)5: {
HXLINE( 382)				this->doEncodeExprType(( (signed char)(3) ));
HXLINE( 383)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)6: {
HXLINE( 384)				::Array< ::Dynamic> _g1 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 384)				{
HXLINE( 385)					this->doEncodeExprType(( (signed char)(4) ));
HXLINE( 386)					this->doEncodeInt(_g1->length);
HXLINE( 387)					{
HXLINE( 387)						int _g2 = 0;
HXDLIN( 387)						while((_g2 < _g1->length)){
HXLINE( 387)							 ::crowplexus::hscript::Expr e2 = _g1->__get(_g2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 387)							_g2 = (_g2 + 1);
HXLINE( 388)							this->doEncode(e2);
            						}
            					}
            				}
            			}
            			break;
            			case (int)7: {
HXLINE( 390)				this->doEncodeExprType(( (signed char)(5) ));
HXLINE( 391)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 392)				this->doEncodeString(e1->_hx_getString(1));
HXLINE( 393)				this->doEncodeBool(e1->_hx_getBool(2));
            			}
            			break;
            			case (int)8: {
HXLINE( 395)				this->doEncodeExprType(( (signed char)(6) ));
HXLINE( 396)				this->doEncodeOp(e1->_hx_getString(0));
HXLINE( 397)				this->doEncode(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 398)				this->doEncode(e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)9: {
HXLINE( 400)				this->doEncodeExprType(( (signed char)(7) ));
HXLINE( 401)				this->doEncodeOp(e1->_hx_getString(0));
HXLINE( 402)				this->doEncodeBool(e1->_hx_getBool(1));
HXLINE( 403)				this->doEncode(e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)10: {
HXLINE( 404)				::Array< ::Dynamic> _g3 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 404)				{
HXLINE( 405)					this->doEncodeExprType(( (signed char)(8) ));
HXLINE( 406)					this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 407)					this->bout->b->push(_g3->length);
HXLINE( 408)					{
HXLINE( 408)						int _g4 = 0;
HXDLIN( 408)						while((_g4 < _g3->length)){
HXLINE( 408)							 ::crowplexus::hscript::Expr e3 = _g3->__get(_g4).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 408)							_g4 = (_g4 + 1);
HXLINE( 409)							this->doEncode(e3);
            						}
            					}
            				}
            			}
            			break;
            			case (int)11: {
HXLINE( 410)				 ::crowplexus::hscript::Expr _g5 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 410)				{
HXLINE( 411)					this->doEncodeExprType(( (signed char)(9) ));
HXLINE( 412)					this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 413)					this->doEncode(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 414)					if (::hx::IsNull( _g5 )) {
HXLINE( 415)						this->bout->b->push(255);
            					}
            					else {
HXLINE( 417)						this->doEncode(_g5);
            					}
            				}
            			}
            			break;
            			case (int)12: {
HXLINE( 419)				this->doEncodeExprType(( (signed char)(10) ));
HXLINE( 420)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 421)				this->doEncode(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)13: {
HXLINE( 427)				this->doEncodeExprType(( (signed char)(11) ));
HXLINE( 428)				this->doEncodeString(e1->_hx_getString(0));
HXLINE( 429)				this->doEncode(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 430)				this->doEncode(e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)14: {
HXLINE( 432)				this->doEncodeExprType(( (signed char)(12) ));
            			}
            			break;
            			case (int)15: {
HXLINE( 434)				this->doEncodeExprType(( (signed char)(13) ));
            			}
            			break;
            			case (int)16: {
HXLINE( 435)				::Array< ::Dynamic> _g6 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 435)				 ::crowplexus::hscript::Expr _g7 = e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 435)				::String _g8 = e1->_hx_getString(2);
HXDLIN( 435)				{
HXLINE( 436)					this->doEncodeExprType(( (signed char)(14) ));
HXLINE( 437)					this->bout->b->push(_g6->length);
HXLINE( 438)					{
HXLINE( 438)						int _g9 = 0;
HXDLIN( 438)						while((_g9 < _g6->length)){
HXLINE( 438)							 ::Dynamic p = _g6->__get(_g9);
HXDLIN( 438)							_g9 = (_g9 + 1);
HXLINE( 439)							this->doEncodeArg(p);
            						}
            					}
HXLINE( 440)					this->doEncode(_g7);
HXLINE( 441)					::String _hx_tmp;
HXDLIN( 441)					if (::hx::IsNull( _g8 )) {
HXLINE( 441)						_hx_tmp = HX_("",00,00,00,00);
            					}
            					else {
HXLINE( 441)						_hx_tmp = _g8;
            					}
HXDLIN( 441)					this->doEncodeString(_hx_tmp);
            				}
            			}
            			break;
            			case (int)17: {
HXLINE( 442)				 ::crowplexus::hscript::Expr _g10 = e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 442)				{
HXLINE( 443)					this->doEncodeExprType(( (signed char)(15) ));
HXLINE( 444)					if (::hx::IsNull( _g10 )) {
HXLINE( 445)						this->bout->b->push(255);
            					}
            					else {
HXLINE( 447)						this->doEncode(_g10);
            					}
            				}
            			}
            			break;
            			case (int)18: {
HXLINE( 449)				this->doEncodeExprType(( (signed char)(16) ));
HXLINE( 450)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 451)				this->doEncode(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)19: {
HXLINE( 452)				::Array< ::Dynamic> _g11 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 452)				{
HXLINE( 453)					this->doEncodeExprType(( (signed char)(17) ));
HXLINE( 454)					this->doEncodeInt(_g11->length);
HXLINE( 455)					{
HXLINE( 455)						int _g12 = 0;
HXDLIN( 455)						while((_g12 < _g11->length)){
HXLINE( 455)							 ::crowplexus::hscript::Expr e4 = _g11->__get(_g12).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 455)							_g12 = (_g12 + 1);
HXLINE( 456)							this->doEncode(e4);
            						}
            					}
            				}
            			}
            			break;
            			case (int)20: {
HXLINE( 457)				::Array< ::Dynamic> _g13 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 457)				{
HXLINE( 458)					this->doEncodeExprType(( (signed char)(18) ));
HXLINE( 459)					this->doEncodeString(e1->_hx_getString(0));
HXLINE( 460)					this->bout->b->push(_g13->length);
HXLINE( 461)					{
HXLINE( 461)						int _g14 = 0;
HXDLIN( 461)						while((_g14 < _g13->length)){
HXLINE( 461)							 ::crowplexus::hscript::Expr e5 = _g13->__get(_g14).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 461)							_g14 = (_g14 + 1);
HXLINE( 462)							this->doEncode(e5);
            						}
            					}
            				}
            			}
            			break;
            			case (int)21: {
HXLINE( 464)				this->doEncodeExprType(( (signed char)(19) ));
HXLINE( 465)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)22: {
HXLINE( 467)				this->doEncodeExprType(( (signed char)(20) ));
HXLINE( 468)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 469)				this->doEncodeString(e1->_hx_getString(1));
HXLINE( 470)				this->doEncode(e1->_hx_getObject(3).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)23: {
HXLINE( 471)				::Array< ::Dynamic> _g15 = e1->_hx_getObject(0).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 471)				{
HXLINE( 472)					this->doEncodeExprType(( (signed char)(21) ));
HXLINE( 473)					this->doEncodeInt(_g15->length);
HXLINE( 474)					{
HXLINE( 474)						int _g16 = 0;
HXDLIN( 474)						while((_g16 < _g15->length)){
HXLINE( 474)							 ::crowplexus::hscript::ObjectDecl f = _g15->__get(_g16).StaticCast<  ::crowplexus::hscript::ObjectDecl >();
HXDLIN( 474)							_g16 = (_g16 + 1);
HXLINE( 475)							this->doEncodeString(f->name);
HXLINE( 476)							this->doEncode(f->e);
            						}
            					}
            				}
            			}
            			break;
            			case (int)24: {
HXLINE( 479)				this->doEncodeExprType(( (signed char)(22) ));
HXLINE( 480)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 481)				this->doEncode(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 482)				this->doEncode(e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)25: {
HXLINE( 483)				::Array< ::Dynamic> _g17 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 483)				 ::crowplexus::hscript::Expr _g18 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 483)				{
HXLINE( 484)					this->doEncodeExprType(( (signed char)(23) ));
HXLINE( 485)					this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 486)					{
HXLINE( 486)						int _g19 = 0;
HXDLIN( 486)						while((_g19 < _g17->length)){
HXLINE( 486)							 ::crowplexus::hscript::SwitchCase c = _g17->__get(_g19).StaticCast<  ::crowplexus::hscript::SwitchCase >();
HXDLIN( 486)							_g19 = (_g19 + 1);
HXLINE( 487)							if ((c->values->length == 0)) {
HXLINE( 488)								HX_STACK_DO_THROW(HX_("assert",c6,46,03,4c));
            							}
HXLINE( 489)							{
HXLINE( 489)								int _g20 = 0;
HXDLIN( 489)								::Array< ::Dynamic> _g21 = c->values;
HXDLIN( 489)								while((_g20 < _g21->length)){
HXLINE( 489)									 ::crowplexus::hscript::Expr v = _g21->__get(_g20).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 489)									_g20 = (_g20 + 1);
HXLINE( 490)									this->doEncode(v);
            								}
            							}
HXLINE( 491)							this->bout->b->push(255);
HXLINE( 492)							this->doEncode(c->expr);
HXLINE( 493)							this->doEncode(c->ifExpr);
            						}
            					}
HXLINE( 495)					this->bout->b->push(255);
HXLINE( 496)					if (::hx::IsNull( _g18 )) {
HXLINE( 497)						this->bout->b->push(255);
            					}
            					else {
HXLINE( 499)						this->doEncode(_g18);
            					}
            				}
            			}
            			break;
            			case (int)26: {
HXLINE( 423)				this->doEncodeExprType(( (signed char)(24) ));
HXLINE( 424)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
HXLINE( 425)				this->doEncode(e1->_hx_getObject(1).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)27: {
HXLINE( 500)				::Array< ::Dynamic> _g22 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 500)				 ::crowplexus::hscript::Expr _g23 = e1->_hx_getObject(2).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 500)				{
HXLINE( 501)					this->doEncodeExprType(( (signed char)(25) ));
HXLINE( 502)					this->doEncodeString(e1->_hx_getString(0));
HXLINE( 503)					{
HXLINE( 503)						int byte;
HXDLIN( 503)						if (::hx::IsNull( _g22 )) {
HXLINE( 503)							byte = 0;
            						}
            						else {
HXLINE( 503)							byte = (_g22->length + 1);
            						}
HXDLIN( 503)						this->bout->b->push(byte);
            					}
HXLINE( 504)					if (::hx::IsNotNull( _g22 )) {
HXLINE( 505)						int _g24 = 0;
HXDLIN( 505)						while((_g24 < _g22->length)){
HXLINE( 505)							 ::crowplexus::hscript::Expr e6 = _g22->__get(_g24).StaticCast<  ::crowplexus::hscript::Expr >();
HXDLIN( 505)							_g24 = (_g24 + 1);
HXLINE( 506)							this->doEncode(e6);
            						}
            					}
HXLINE( 507)					this->doEncode(_g23);
            				}
            			}
            			break;
            			case (int)28: {
HXLINE( 509)				this->doEncodeExprType(( (signed char)(26) ));
HXLINE( 510)				this->doEncode(e1->_hx_getObject(0).StaticCast<  ::crowplexus::hscript::Expr >());
            			}
            			break;
            			case (int)29: {
HXLINE( 511)				::Array< ::Dynamic> _g25 = e1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 511)				{
HXLINE( 512)					this->doEncodeExprType(( (signed char)(28) ));
HXLINE( 513)					this->doEncodeString(e1->_hx_getString(0));
HXLINE( 514)					this->bout->b->push(_g25->length);
HXLINE( 515)					{
HXLINE( 515)						int _g26 = 0;
HXDLIN( 515)						while((_g26 < _g25->length)){
HXLINE( 515)							 ::crowplexus::hscript::EnumType f1 = _g25->__get(_g26).StaticCast<  ::crowplexus::hscript::EnumType >();
HXDLIN( 515)							_g26 = (_g26 + 1);
HXLINE( 516)							switch((int)(f1->_hx_getIndex())){
            								case (int)0: {
HXLINE( 518)									this->bout->b->push(0);
HXLINE( 519)									this->doEncodeString(f1->_hx_getString(0));
            								}
            								break;
            								case (int)1: {
HXLINE( 520)									::Array< ::Dynamic> _g27 = f1->_hx_getObject(1).StaticCast< ::Array< ::Dynamic> >();
HXDLIN( 520)									{
HXLINE( 521)										this->bout->b->push(1);
HXLINE( 522)										this->doEncodeString(f1->_hx_getString(0));
HXLINE( 523)										this->bout->b->push(_g27->length);
HXLINE( 524)										{
HXLINE( 524)											int _g28 = 0;
HXDLIN( 524)											while((_g28 < _g27->length)){
HXLINE( 524)												 ::Dynamic a = _g27->__get(_g28);
HXDLIN( 524)												_g28 = (_g28 + 1);
HXLINE( 525)												this->doEncodeArg(a);
            											}
            										}
            									}
            								}
            								break;
            							}
            						}
            					}
            				}
            			}
            			break;
            			case (int)30: {
HXLINE( 528)				this->doEncodeExprType(( (signed char)(29) ));
HXLINE( 529)				this->doEncodeString(::haxe::Serializer_obj::run(e1->_hx_getObject(0)));
            			}
            			break;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,doEncode,(void))

bool Bytes_obj::doDecodeBool(){
            	HX_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_539_doDecodeBool)
HXDLIN( 539)		return (this->bin->b->__get(this->pin++) != 0);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,doDecodeBool,return )

 ::crowplexus::hscript::Expr Bytes_obj::doDecode(){
            	HX_GC_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_542_doDecode)
HXLINE( 544)		if ((this->bin->b->__get(this->pin) == 255)) {
HXLINE( 545)			this->pin++;
HXLINE( 546)			return null();
            		}
HXLINE( 548)		::String origin = this->doDecodeString();
HXLINE( 549)		int line = this->doDecodeInt();
HXLINE( 550)		return  ::crowplexus::hscript::Expr_obj::__alloc( HX_CTX ,this->_doDecode(),0,0,origin,line);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,doDecode,return )

 ::crowplexus::hscript::ExprDef Bytes_obj::_doDecode(){
            	HX_GC_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_560__doDecode)
HXDLIN( 560)		signed char _hx_switch_0 = ( (signed char)(this->bin->b->__get(this->pin++)) );
            		if (  (_hx_switch_0==( (signed char)(0) )) ){
HXLINE( 564)			return ::crowplexus::hscript::ExprDef_obj::EIdent(this->doDecodeString());
HXDLIN( 564)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(1) )) ){
HXLINE( 566)			::String v = this->doDecodeString();
HXLINE( 567)			 ::crowplexus::hscript::Expr e = this->doDecode();
HXLINE( 569)			return ::crowplexus::hscript::ExprDef_obj::EVar(v,null(),e,this->doDecodeBool());
HXLINE( 565)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(2) )) ){
HXLINE( 562)			return ::crowplexus::hscript::ExprDef_obj::EConst(this->doDecodeConst());
HXDLIN( 562)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(3) )) ){
HXLINE( 571)			return ::crowplexus::hscript::ExprDef_obj::EParent(this->doDecode());
HXDLIN( 571)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(4) )) ){
HXLINE( 573)			::Array< ::Dynamic> a = ::Array_obj< ::Dynamic>::__new();
HXLINE( 574)			int len = this->doDecodeInt();
HXLINE( 575)			{
HXLINE( 575)				int _g = 0;
HXDLIN( 575)				while((_g < len)){
HXLINE( 575)					_g = (_g + 1);
HXLINE( 576)					a->push(this->doDecode());
            				}
            			}
HXLINE( 577)			return ::crowplexus::hscript::ExprDef_obj::EBlock(a);
HXLINE( 572)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(5) )) ){
HXLINE( 579)			 ::crowplexus::hscript::Expr e1 = this->doDecode();
HXLINE( 580)			::String name = this->doDecodeString();
HXLINE( 582)			return ::crowplexus::hscript::ExprDef_obj::EField(e1,name,this->doDecodeBool());
HXLINE( 578)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(6) )) ){
HXLINE( 584)			::String op = this->doDecodeOp();
HXLINE( 585)			 ::crowplexus::hscript::Expr e11 = this->doDecode();
HXLINE( 586)			return ::crowplexus::hscript::ExprDef_obj::EBinop(op,e11,this->doDecode());
HXLINE( 583)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(7) )) ){
HXLINE( 588)			::String op1 = this->doDecodeOp();
HXLINE( 589)			bool prefix = this->doDecodeBool();
HXLINE( 590)			return ::crowplexus::hscript::ExprDef_obj::EUnop(op1,prefix,this->doDecode());
HXLINE( 587)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(8) )) ){
HXLINE( 592)			 ::crowplexus::hscript::Expr e2 = this->doDecode();
HXLINE( 593)			::Array< ::Dynamic> params = ::Array_obj< ::Dynamic>::__new();
HXLINE( 594)			{
HXLINE( 594)				int _g1 = 0;
HXDLIN( 594)				int _g2 = ( (int)(this->bin->b->__get(this->pin++)) );
HXDLIN( 594)				while((_g1 < _g2)){
HXLINE( 594)					_g1 = (_g1 + 1);
HXLINE( 595)					params->push(this->doDecode());
            				}
            			}
HXLINE( 596)			return ::crowplexus::hscript::ExprDef_obj::ECall(e2,params);
HXLINE( 591)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(9) )) ){
HXLINE( 598)			 ::crowplexus::hscript::Expr cond = this->doDecode();
HXLINE( 599)			 ::crowplexus::hscript::Expr e12 = this->doDecode();
HXLINE( 600)			return ::crowplexus::hscript::ExprDef_obj::EIf(cond,e12,this->doDecode());
HXLINE( 597)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(10) )) ){
HXLINE( 602)			 ::crowplexus::hscript::Expr cond1 = this->doDecode();
HXLINE( 603)			return ::crowplexus::hscript::ExprDef_obj::EWhile(cond1,this->doDecode());
HXLINE( 601)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(11) )) ){
HXLINE( 608)			::String v1 = this->doDecodeString();
HXLINE( 609)			 ::crowplexus::hscript::Expr it = this->doDecode();
HXLINE( 610)			return ::crowplexus::hscript::ExprDef_obj::EFor(v1,it,this->doDecode());
HXLINE( 607)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(12) )) ){
HXLINE( 612)			return ::crowplexus::hscript::ExprDef_obj::EBreak_dyn();
HXDLIN( 612)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(13) )) ){
HXLINE( 614)			return ::crowplexus::hscript::ExprDef_obj::EContinue_dyn();
HXDLIN( 614)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(14) )) ){
HXLINE( 616)			::Array< ::Dynamic> params1 = ::Array_obj< ::Dynamic>::__new();
HXLINE( 617)			{
HXLINE( 617)				int _g3 = 0;
HXDLIN( 617)				int _g4 = ( (int)(this->bin->b->__get(this->pin++)) );
HXDLIN( 617)				while((_g3 < _g4)){
HXLINE( 617)					_g3 = (_g3 + 1);
HXLINE( 618)					params1->push(this->doDecodeArg());
            				}
            			}
HXLINE( 619)			 ::crowplexus::hscript::Expr e3 = this->doDecode();
HXLINE( 620)			::String name1 = this->doDecodeString();
HXLINE( 621)			::String _hx_tmp;
HXDLIN( 621)			if ((name1 == HX_("",00,00,00,00))) {
HXLINE( 621)				_hx_tmp = null();
            			}
            			else {
HXLINE( 621)				_hx_tmp = name1;
            			}
HXDLIN( 621)			return ::crowplexus::hscript::ExprDef_obj::EFunction(params1,e3,_hx_tmp,null());
HXLINE( 615)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(15) )) ){
HXLINE( 623)			return ::crowplexus::hscript::ExprDef_obj::EReturn(this->doDecode());
HXDLIN( 623)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(16) )) ){
HXLINE( 625)			 ::crowplexus::hscript::Expr e4 = this->doDecode();
HXLINE( 626)			return ::crowplexus::hscript::ExprDef_obj::EArray(e4,this->doDecode());
HXLINE( 624)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(17) )) ){
HXLINE( 628)			::Array< ::Dynamic> el = ::Array_obj< ::Dynamic>::__new();
HXLINE( 629)			int len1 = this->doDecodeInt();
HXLINE( 630)			{
HXLINE( 630)				int _g5 = 0;
HXDLIN( 630)				while((_g5 < len1)){
HXLINE( 630)					_g5 = (_g5 + 1);
HXLINE( 631)					el->push(this->doDecode());
            				}
            			}
HXLINE( 632)			return ::crowplexus::hscript::ExprDef_obj::EArrayDecl(el);
HXLINE( 627)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(18) )) ){
HXLINE( 634)			::String cl = this->doDecodeString();
HXLINE( 635)			::Array< ::Dynamic> el1 = ::Array_obj< ::Dynamic>::__new();
HXLINE( 636)			{
HXLINE( 636)				int _g6 = 0;
HXDLIN( 636)				int _g7 = ( (int)(this->bin->b->__get(this->pin++)) );
HXDLIN( 636)				while((_g6 < _g7)){
HXLINE( 636)					_g6 = (_g6 + 1);
HXLINE( 637)					el1->push(this->doDecode());
            				}
            			}
HXLINE( 638)			return ::crowplexus::hscript::ExprDef_obj::ENew(cl,el1);
HXLINE( 633)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(19) )) ){
HXLINE( 640)			return ::crowplexus::hscript::ExprDef_obj::EThrow(this->doDecode());
HXDLIN( 640)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(20) )) ){
HXLINE( 642)			 ::crowplexus::hscript::Expr e5 = this->doDecode();
HXLINE( 643)			::String v2 = this->doDecodeString();
HXLINE( 644)			return ::crowplexus::hscript::ExprDef_obj::ETry(e5,v2,null(),this->doDecode());
HXLINE( 641)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(21) )) ){
HXLINE( 646)			::Array< ::Dynamic> fl = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 647)			int len2 = this->doDecodeInt();
HXLINE( 648)			{
HXLINE( 648)				int _g8 = 0;
HXDLIN( 648)				while((_g8 < len2)){
HXLINE( 648)					_g8 = (_g8 + 1);
HXLINE( 649)					::String name2 = this->doDecodeString();
HXLINE( 651)					fl->push( ::crowplexus::hscript::ObjectDecl_obj::__alloc( HX_CTX ,name2,this->doDecode()));
            				}
            			}
HXLINE( 653)			return ::crowplexus::hscript::ExprDef_obj::EObject(fl);
HXLINE( 645)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(22) )) ){
HXLINE( 655)			 ::crowplexus::hscript::Expr cond2 = this->doDecode();
HXLINE( 656)			 ::crowplexus::hscript::Expr e13 = this->doDecode();
HXLINE( 658)			return ::crowplexus::hscript::ExprDef_obj::ETernary(cond2,e13,this->doDecode());
HXLINE( 654)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(23) )) ){
HXLINE( 660)			 ::crowplexus::hscript::Expr e6 = this->doDecode();
HXLINE( 661)			::Array< ::Dynamic> cases = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 662)			while(true){
HXLINE( 663)				 ::crowplexus::hscript::Expr v3 = this->doDecode();
HXLINE( 664)				if (::hx::IsNull( v3 )) {
HXLINE( 665)					goto _hx_goto_40;
            				}
HXLINE( 666)				::Array< ::Dynamic> values = ::Array_obj< ::Dynamic>::__new(1)->init(0,v3);
HXLINE( 667)				while(true){
HXLINE( 668)					v3 = this->doDecode();
HXLINE( 669)					if (::hx::IsNull( v3 )) {
HXLINE( 670)						goto _hx_goto_41;
            					}
HXLINE( 671)					values->push(v3);
            				}
            				_hx_goto_41:;
HXLINE( 673)				 ::crowplexus::hscript::Expr expr = this->doDecode();
HXLINE( 675)				cases->push( ::crowplexus::hscript::SwitchCase_obj::__alloc( HX_CTX ,values,expr,this->doDecode()));
            			}
            			_hx_goto_40:;
HXLINE( 678)			return ::crowplexus::hscript::ExprDef_obj::ESwitch(e6,cases,this->doDecode());
HXLINE( 659)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(24) )) ){
HXLINE( 605)			 ::crowplexus::hscript::Expr cond3 = this->doDecode();
HXLINE( 606)			return ::crowplexus::hscript::ExprDef_obj::EDoWhile(cond3,this->doDecode());
HXLINE( 604)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(25) )) ){
HXLINE( 680)			::String name3 = this->doDecodeString();
HXLINE( 681)			int count = ( (int)(this->bin->b->__get(this->pin++)) );
HXLINE( 682)			::Array< ::Dynamic> args;
HXDLIN( 682)			if ((count == 0)) {
HXLINE( 682)				args = null();
            			}
            			else {
HXLINE( 682)				::Array< ::Dynamic> _g9 = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 682)				{
HXLINE( 682)					int _g10 = 0;
HXDLIN( 682)					int _g11 = (count - 1);
HXDLIN( 682)					while((_g10 < _g11)){
HXLINE( 682)						_g10 = (_g10 + 1);
HXDLIN( 682)						_g9->push(this->doDecode());
            					}
            				}
HXDLIN( 682)				args = _g9;
            			}
HXLINE( 683)			return ::crowplexus::hscript::ExprDef_obj::EMeta(name3,args,this->doDecode());
HXLINE( 679)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(26) )) ){
HXLINE( 685)			 ::crowplexus::hscript::Expr _hx_tmp1 = this->doDecode();
HXDLIN( 685)			return ::crowplexus::hscript::ExprDef_obj::ECheckType(_hx_tmp1,::crowplexus::hscript::CType_obj::CTPath( ::Dynamic(::hx::Anon_obj::Create(4)
            				->setFixed(0,HX_("params",46,fb,7a,ed),null())
            				->setFixed(1,HX_("sub",80,a9,57,00),null())
            				->setFixed(2,HX_("name",4b,72,ff,48),HX_("Void",74,ef,2c,39))
            				->setFixed(3,HX_("pack",d9,d6,51,4a),::Array_obj< ::String >::__new(0)))));
HXDLIN( 685)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(27) )) ){
HXLINE( 714)			::String v4 = this->doDecodeString();
HXLINE( 716)			return ::crowplexus::hscript::ExprDef_obj::EImport(v4,this->doDecodeString());
HXLINE( 713)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(28) )) ){
HXLINE( 692)			::String name4 = this->doDecodeString();
HXLINE( 693)			::Array< ::Dynamic> fields = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 694)			{
HXLINE( 694)				int _g12 = 0;
HXDLIN( 694)				int _g13 = ( (int)(this->bin->b->__get(this->pin++)) );
HXDLIN( 694)				while((_g12 < _g13)){
HXLINE( 694)					_g12 = (_g12 + 1);
HXLINE( 695)					switch((int)(( (int)(this->bin->b->__get(this->pin++)) ))){
            						case (int)0: {
HXLINE( 698)							fields->push(::crowplexus::hscript::EnumType_obj::ESimple(this->doDecodeString()));
            						}
            						break;
            						case (int)1: {
HXLINE( 700)							::String name5 = this->doDecodeString();
HXLINE( 701)							::Array< ::Dynamic> args1 = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 702)							{
HXLINE( 702)								int _g14 = 0;
HXDLIN( 702)								int _g15 = ( (int)(this->bin->b->__get(this->pin++)) );
HXDLIN( 702)								while((_g14 < _g15)){
HXLINE( 702)									_g14 = (_g14 + 1);
HXLINE( 703)									args1->push(this->doDecodeArg());
            								}
            							}
HXLINE( 704)							fields->push(::crowplexus::hscript::EnumType_obj::EConstructor(name5,args1));
            						}
            						break;
            						default:{
HXLINE( 706)							HX_STACK_DO_THROW((HX_("Invalid code ",4a,20,8f,2e) + this->bin->b->__get((this->pin - 1))));
            						}
            					}
            				}
            			}
HXLINE( 709)			return ::crowplexus::hscript::ExprDef_obj::EEnum(name4,fields);
HXLINE( 691)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(29) )) ){
HXLINE( 712)			return ::crowplexus::hscript::ExprDef_obj::EDirectValue(::haxe::Unserializer_obj::run(this->doDecodeString()));
HXDLIN( 712)			goto _hx_goto_33;
            		}
            		if (  (_hx_switch_0==( (signed char)(255) )) ){
HXLINE( 718)			return null();
HXDLIN( 718)			goto _hx_goto_33;
            		}
            		_hx_goto_33:;
HXLINE( 560)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Bytes_obj,_doDecode,return )

 ::haxe::io::Bytes Bytes_obj::encode( ::crowplexus::hscript::Expr e){
            	HX_GC_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_724_encode)
HXLINE( 725)		 ::crowplexus::hscript::Bytes b =  ::crowplexus::hscript::Bytes_obj::__alloc( HX_CTX ,null());
HXLINE( 726)		b->doEncode(e);
HXLINE( 727)		return b->bout->getBytes();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,encode,return )

 ::crowplexus::hscript::Expr Bytes_obj::decode( ::haxe::io::Bytes bytes){
            	HX_GC_STACKFRAME(&_hx_pos_dfa5de78a2b125fe_732_decode)
HXDLIN( 732)		return  ::crowplexus::hscript::Bytes_obj::__alloc( HX_CTX ,bytes)->doDecode();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Bytes_obj,decode,return )


::hx::ObjectPtr< Bytes_obj > Bytes_obj::__new( ::haxe::io::Bytes bin) {
	::hx::ObjectPtr< Bytes_obj > __this = new Bytes_obj();
	__this->__construct(bin);
	return __this;
}

::hx::ObjectPtr< Bytes_obj > Bytes_obj::__alloc(::hx::Ctx *_hx_ctx, ::haxe::io::Bytes bin) {
	Bytes_obj *__this = (Bytes_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Bytes_obj), true, "crowplexus.hscript.Bytes"));
	*(void **)__this = Bytes_obj::_hx_vtable;
	__this->__construct(bin);
	return __this;
}

Bytes_obj::Bytes_obj()
{
}

void Bytes_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Bytes);
	HX_MARK_MEMBER_NAME(bin,"bin");
	HX_MARK_MEMBER_NAME(bout,"bout");
	HX_MARK_MEMBER_NAME(pin,"pin");
	HX_MARK_MEMBER_NAME(hstrings,"hstrings");
	HX_MARK_MEMBER_NAME(strings,"strings");
	HX_MARK_MEMBER_NAME(nstrings,"nstrings");
	HX_MARK_MEMBER_NAME(opMap,"opMap");
	HX_MARK_END_CLASS();
}

void Bytes_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(bin,"bin");
	HX_VISIT_MEMBER_NAME(bout,"bout");
	HX_VISIT_MEMBER_NAME(pin,"pin");
	HX_VISIT_MEMBER_NAME(hstrings,"hstrings");
	HX_VISIT_MEMBER_NAME(strings,"strings");
	HX_VISIT_MEMBER_NAME(nstrings,"nstrings");
	HX_VISIT_MEMBER_NAME(opMap,"opMap");
}

::hx::Val Bytes_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bin") ) { return ::hx::Val( bin ); }
		if (HX_FIELD_EQ(inName,"pin") ) { return ::hx::Val( pin ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"bout") ) { return ::hx::Val( bout ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"opMap") ) { return ::hx::Val( opMap ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"strings") ) { return ::hx::Val( strings ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"hstrings") ) { return ::hx::Val( hstrings ); }
		if (HX_FIELD_EQ(inName,"nstrings") ) { return ::hx::Val( nstrings ); }
		if (HX_FIELD_EQ(inName,"doEncode") ) { return ::hx::Val( doEncode_dyn() ); }
		if (HX_FIELD_EQ(inName,"doDecode") ) { return ::hx::Val( doDecode_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"_doDecode") ) { return ::hx::Val( _doDecode_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"doEncodeOp") ) { return ::hx::Val( doEncodeOp_dyn() ); }
		if (HX_FIELD_EQ(inName,"doDecodeOp") ) { return ::hx::Val( doDecodeOp_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"doEncodeInt") ) { return ::hx::Val( doEncodeInt_dyn() ); }
		if (HX_FIELD_EQ(inName,"doDecodeInt") ) { return ::hx::Val( doDecodeInt_dyn() ); }
		if (HX_FIELD_EQ(inName,"doDecodeArg") ) { return ::hx::Val( doDecodeArg_dyn() ); }
		if (HX_FIELD_EQ(inName,"doEncodeArg") ) { return ::hx::Val( doEncodeArg_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"doEncodeBool") ) { return ::hx::Val( doEncodeBool_dyn() ); }
		if (HX_FIELD_EQ(inName,"doDecodeBool") ) { return ::hx::Val( doDecodeBool_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"doEncodeConst") ) { return ::hx::Val( doEncodeConst_dyn() ); }
		if (HX_FIELD_EQ(inName,"doDecodeConst") ) { return ::hx::Val( doDecodeConst_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"doEncodeString") ) { return ::hx::Val( doEncodeString_dyn() ); }
		if (HX_FIELD_EQ(inName,"doDecodeString") ) { return ::hx::Val( doDecodeString_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"doEncodeExprType") ) { return ::hx::Val( doEncodeExprType_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Bytes_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"encode") ) { outValue = encode_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"decode") ) { outValue = decode_dyn(); return true; }
	}
	return false;
}

::hx::Val Bytes_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"bin") ) { bin=inValue.Cast<  ::haxe::io::Bytes >(); return inValue; }
		if (HX_FIELD_EQ(inName,"pin") ) { pin=inValue.Cast< int >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"bout") ) { bout=inValue.Cast<  ::haxe::io::BytesBuffer >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"opMap") ) { opMap=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"strings") ) { strings=inValue.Cast< ::Array< ::String > >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"hstrings") ) { hstrings=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		if (HX_FIELD_EQ(inName,"nstrings") ) { nstrings=inValue.Cast< int >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Bytes_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("bin",c7,b8,4a,00));
	outFields->push(HX_("bout",6c,89,1b,41));
	outFields->push(HX_("pin",55,58,55,00));
	outFields->push(HX_("hstrings",1a,eb,71,35));
	outFields->push(HX_("strings",82,8e,f3,f8));
	outFields->push(HX_("nstrings",d4,97,a0,8c));
	outFields->push(HX_("opMap",fb,0b,bd,33));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Bytes_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::haxe::io::Bytes */ ,(int)offsetof(Bytes_obj,bin),HX_("bin",c7,b8,4a,00)},
	{::hx::fsObject /*  ::haxe::io::BytesBuffer */ ,(int)offsetof(Bytes_obj,bout),HX_("bout",6c,89,1b,41)},
	{::hx::fsInt,(int)offsetof(Bytes_obj,pin),HX_("pin",55,58,55,00)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Bytes_obj,hstrings),HX_("hstrings",1a,eb,71,35)},
	{::hx::fsObject /* ::Array< ::String > */ ,(int)offsetof(Bytes_obj,strings),HX_("strings",82,8e,f3,f8)},
	{::hx::fsInt,(int)offsetof(Bytes_obj,nstrings),HX_("nstrings",d4,97,a0,8c)},
	{::hx::fsObject /*  ::haxe::ds::StringMap */ ,(int)offsetof(Bytes_obj,opMap),HX_("opMap",fb,0b,bd,33)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Bytes_obj_sStaticStorageInfo = 0;
#endif

static ::String Bytes_obj_sMemberFields[] = {
	HX_("bin",c7,b8,4a,00),
	HX_("bout",6c,89,1b,41),
	HX_("pin",55,58,55,00),
	HX_("hstrings",1a,eb,71,35),
	HX_("strings",82,8e,f3,f8),
	HX_("nstrings",d4,97,a0,8c),
	HX_("opMap",fb,0b,bd,33),
	HX_("doEncodeOp",82,7f,ca,9d),
	HX_("doDecodeOp",9a,e0,56,ee),
	HX_("doEncodeString",b2,8b,3f,3b),
	HX_("doDecodeString",ca,58,ae,71),
	HX_("doEncodeInt",6e,83,60,73),
	HX_("doEncodeBool",cb,bc,72,7c),
	HX_("doEncodeConst",a2,4d,58,fb),
	HX_("doDecodeInt",56,17,a9,9d),
	HX_("doDecodeConst",8a,ab,db,b7),
	HX_("doDecodeArg",bd,08,a3,9d),
	HX_("doEncodeExprType",b0,f7,55,09),
	HX_("doEncodeArg",d5,74,5a,73),
	HX_("doEncode",01,78,fb,8d),
	HX_("doDecodeBool",e3,93,ab,51),
	HX_("doDecode",19,e3,04,f9),
	HX_("_doDecode",78,da,9a,40),
	::String(null()) };

::hx::Class Bytes_obj::__mClass;

static ::String Bytes_obj_sStaticFields[] = {
	HX_("encode",16,f2,e3,f9),
	HX_("decode",2e,5d,ed,64),
	::String(null())
};

void Bytes_obj::__register()
{
	Bytes_obj _hx_dummy;
	Bytes_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("crowplexus.hscript.Bytes",86,b6,99,57);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Bytes_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(Bytes_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Bytes_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Bytes_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Bytes_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Bytes_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace crowplexus
} // end namespace hscript
