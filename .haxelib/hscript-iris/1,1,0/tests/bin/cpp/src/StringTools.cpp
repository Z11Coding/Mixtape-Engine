// Generated by Haxe 4.3.5
#include <hxcpp.h>

#ifndef INCLUDED_EReg
#include <EReg.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringBuf
#include <StringBuf.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_SysTools
#include <haxe/SysTools.h>
#endif
#ifndef INCLUDED_haxe_iterators_StringIterator
#include <haxe/iterators/StringIterator.h>
#endif
#ifndef INCLUDED_haxe_iterators_StringKeyValueIterator
#include <haxe/iterators/StringKeyValueIterator.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_50_urlEncode,"StringTools","urlEncode",0x06afdce1,"StringTools.urlEncode","/usr/share/haxe/std/StringTools.hx",50,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_118_urlDecode,"StringTools","urlDecode",0x71b947f9,"StringTools.urlDecode","/usr/share/haxe/std/StringTools.hx",118,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_158_htmlEscape,"StringTools","htmlEscape",0x0e1a5dd0,"StringTools.htmlEscape","/usr/share/haxe/std/StringTools.hx",158,0xd8cfb08f)
static const ::String _hx_array_data_0363db6a_4[] = {
	HX_("&quot;",2c,d9,81,8f),
};
static const ::String _hx_array_data_0363db6a_5[] = {
	HX_("&amp;",dd,d4,aa,21),
};
static const ::String _hx_array_data_0363db6a_6[] = {
	HX_("&#039;",62,26,77,78),
};
static const ::String _hx_array_data_0363db6a_7[] = {
	HX_("&lt;",4d,74,70,19),
};
static const ::String _hx_array_data_0363db6a_8[] = {
	HX_("&gt;",08,a9,6c,19),
};
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_194_htmlUnescape,"StringTools","htmlUnescape",0x7457fea9,"StringTools.htmlUnescape","/usr/share/haxe/std/StringTools.hx",194,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_215_contains,"StringTools","contains",0x5f7a9fa3,"StringTools.contains","/usr/share/haxe/std/StringTools.hx",215,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_240_startsWith,"StringTools","startsWith",0x5f4e6efb,"StringTools.startsWith","/usr/share/haxe/std/StringTools.hx",240,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_251_endsWith,"StringTools","endsWith",0x0eb5bfe2,"StringTools.endsWith","/usr/share/haxe/std/StringTools.hx",251,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_282_isSpace,"StringTools","isSpace",0xe0290778,"StringTools.isSpace","/usr/share/haxe/std/StringTools.hx",282,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_300_ltrim,"StringTools","ltrim",0x24d2234a,"StringTools.ltrim","/usr/share/haxe/std/StringTools.hx",300,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_325_rtrim,"StringTools","rtrim",0x99399e50,"StringTools.rtrim","/usr/share/haxe/std/StringTools.hx",325,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_353_trim,"StringTools","trim",0x2908d066,"StringTools.trim","/usr/share/haxe/std/StringTools.hx",353,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_369_lpad,"StringTools","lpad",0x23bd8feb,"StringTools.lpad","/usr/share/haxe/std/StringTools.hx",369,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_394_rpad,"StringTools","rpad",0x27b4d7a5,"StringTools.rpad","/usr/share/haxe/std/StringTools.hx",394,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_428_replace,"StringTools","replace",0x6d651f30,"StringTools.replace","/usr/share/haxe/std/StringTools.hx",428,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_438_hex,"StringTools","hex",0xd91debd7,"StringTools.hex","/usr/share/haxe/std/StringTools.hx",438,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_484_fastCodeAt,"StringTools","fastCodeAt",0x6fd011c0,"StringTools.fastCodeAt","/usr/share/haxe/std/StringTools.hx",484,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_523_unsafeCodeAt,"StringTools","unsafeCodeAt",0xa8413fca,"StringTools.unsafeCodeAt","/usr/share/haxe/std/StringTools.hx",523,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_555_iterator,"StringTools","iterator",0xc6998f72,"StringTools.iterator","/usr/share/haxe/std/StringTools.hx",555,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_566_keyValueIterator,"StringTools","keyValueIterator",0xeab536e4,"StringTools.keyValueIterator","/usr/share/haxe/std/StringTools.hx",566,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_574_isEof,"StringTools","isEof",0x69d30eee,"StringTools.isEof","/usr/share/haxe/std/StringTools.hx",574,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_594_quoteUnixArg,"StringTools","quoteUnixArg",0xc59dac56,"StringTools.quoteUnixArg","/usr/share/haxe/std/StringTools.hx",594,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_620_quoteWinArg,"StringTools","quoteWinArg",0x7e16b8f2,"StringTools.quoteWinArg","/usr/share/haxe/std/StringTools.hx",620,0xd8cfb08f)
static const ::String _hx_array_data_0363db6a_37[] = {
	HX_("\"",22,00,00,00),
};
static const ::String _hx_array_data_0363db6a_38[] = {
	HX_("\\\"",46,50,00,00),
};
static const ::String _hx_array_data_0363db6a_39[] = {
	HX_("\\",5c,00,00,00),
};
static const ::String _hx_array_data_0363db6a_40[] = {
	HX_("\"",22,00,00,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_636_utf16CodePointAt,"StringTools","utf16CodePointAt",0x243cd4ce,"StringTools.utf16CodePointAt","/usr/share/haxe/std/StringTools.hx",636,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_602_boot,"StringTools","boot",0x1d20b7b6,"StringTools.boot","/usr/share/haxe/std/StringTools.hx",602,0xd8cfb08f)
HX_LOCAL_STACK_FRAME(_hx_pos_0b3aba623971508c_634_boot,"StringTools","boot",0x1d20b7b6,"StringTools.boot","/usr/share/haxe/std/StringTools.hx",634,0xd8cfb08f)

void StringTools_obj::__construct() { }

Dynamic StringTools_obj::__CreateEmpty() { return new StringTools_obj; }

void *StringTools_obj::_hx_vtable = 0;

Dynamic StringTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StringTools_obj > _hx_result = new StringTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StringTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x084f186e;
}

::String StringTools_obj::urlEncode(::String s){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_50_urlEncode)
HXDLIN(  50)		return ( (::String)(s.__URLEncode()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,urlEncode,return )

::String StringTools_obj::urlDecode(::String s){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_118_urlDecode)
HXDLIN( 118)		return ( (::String)(s.__URLDecode()) );
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,urlDecode,return )

::String StringTools_obj::htmlEscape(::String s, ::Dynamic quotes){
            	HX_GC_STACKFRAME(&_hx_pos_0b3aba623971508c_158_htmlEscape)
HXLINE( 159)		 ::StringBuf buf =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 160)		{
HXLINE( 160)			int _g_offset = 0;
HXDLIN( 160)			while((_g_offset < s.length)){
HXLINE( 160)				_g_offset = (_g_offset + 1);
HXDLIN( 160)				int index = (_g_offset - 1);
HXDLIN( 160)				int c = s.cca(index);
HXDLIN( 160)				bool _hx_tmp;
HXDLIN( 160)				if ((c >= 55296)) {
HXLINE( 160)					_hx_tmp = (c <= 56319);
            				}
            				else {
HXLINE( 160)					_hx_tmp = false;
            				}
HXDLIN( 160)				if (_hx_tmp) {
HXLINE( 639)					c = (((c - 55232) << 10) | (s.cca((index + 1)) & 1023));
            				}
HXLINE( 160)				int c1 = c;
HXDLIN( 160)				if ((c1 >= 65536)) {
HXLINE( 160)					_g_offset = (_g_offset + 1);
            				}
HXLINE( 161)				switch((int)(c1)){
            					case (int)34: {
HXLINE( 168)						if (( (bool)(quotes) )) {
HXLINE( 169)							if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 169)								buf->flush();
            							}
HXDLIN( 169)							if (::hx::IsNull( buf->b )) {
HXLINE( 169)								buf->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_4,1);
            							}
            							else {
HXLINE( 169)								buf->b->push(HX_("&quot;",2c,d9,81,8f));
            							}
            						}
            						else {
HXLINE( 173)							if ((c1 >= 127)) {
HXLINE( 173)								::String x = ::String::fromCharCode(c1);
HXDLIN( 173)								if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 173)									buf->flush();
            								}
HXDLIN( 173)								if (::hx::IsNull( buf->b )) {
HXLINE( 173)									buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            								}
            								else {
HXLINE( 173)									::Array< ::String > buf1 = buf->b;
HXDLIN( 173)									buf1->push(::Std_obj::string(x));
            								}
            							}
            							else {
HXLINE( 173)								if (::hx::IsNull( buf->charBuf )) {
HXLINE( 173)									buf->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 173)								buf->charBuf->push(c1);
            							}
            						}
            					}
            					break;
            					case (int)38: {
HXLINE( 163)						if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 163)							buf->flush();
            						}
HXDLIN( 163)						if (::hx::IsNull( buf->b )) {
HXLINE( 163)							buf->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_5,1);
            						}
            						else {
HXLINE( 163)							buf->b->push(HX_("&amp;",dd,d4,aa,21));
            						}
            					}
            					break;
            					case (int)39: {
HXLINE( 170)						if (( (bool)(quotes) )) {
HXLINE( 171)							if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 171)								buf->flush();
            							}
HXDLIN( 171)							if (::hx::IsNull( buf->b )) {
HXLINE( 171)								buf->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_6,1);
            							}
            							else {
HXLINE( 171)								buf->b->push(HX_("&#039;",62,26,77,78));
            							}
            						}
            						else {
HXLINE( 173)							if ((c1 >= 127)) {
HXLINE( 173)								::String x1 = ::String::fromCharCode(c1);
HXDLIN( 173)								if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 173)									buf->flush();
            								}
HXDLIN( 173)								if (::hx::IsNull( buf->b )) {
HXLINE( 173)									buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            								}
            								else {
HXLINE( 173)									::Array< ::String > buf2 = buf->b;
HXDLIN( 173)									buf2->push(::Std_obj::string(x1));
            								}
            							}
            							else {
HXLINE( 173)								if (::hx::IsNull( buf->charBuf )) {
HXLINE( 173)									buf->charBuf = ::Array_obj< char >::__new();
            								}
HXDLIN( 173)								buf->charBuf->push(c1);
            							}
            						}
            					}
            					break;
            					case (int)60: {
HXLINE( 165)						if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 165)							buf->flush();
            						}
HXDLIN( 165)						if (::hx::IsNull( buf->b )) {
HXLINE( 165)							buf->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_7,1);
            						}
            						else {
HXLINE( 165)							buf->b->push(HX_("&lt;",4d,74,70,19));
            						}
            					}
            					break;
            					case (int)62: {
HXLINE( 167)						if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 167)							buf->flush();
            						}
HXDLIN( 167)						if (::hx::IsNull( buf->b )) {
HXLINE( 167)							buf->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_8,1);
            						}
            						else {
HXLINE( 167)							buf->b->push(HX_("&gt;",08,a9,6c,19));
            						}
            					}
            					break;
            					default:{
HXLINE( 173)						if ((c1 >= 127)) {
HXLINE( 173)							::String x2 = ::String::fromCharCode(c1);
HXDLIN( 173)							if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 173)								buf->flush();
            							}
HXDLIN( 173)							if (::hx::IsNull( buf->b )) {
HXLINE( 173)								buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
            							}
            							else {
HXLINE( 173)								::Array< ::String > buf3 = buf->b;
HXDLIN( 173)								buf3->push(::Std_obj::string(x2));
            							}
            						}
            						else {
HXLINE( 173)							if (::hx::IsNull( buf->charBuf )) {
HXLINE( 173)								buf->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN( 173)							buf->charBuf->push(c1);
            						}
            					}
            				}
            			}
            		}
HXLINE( 176)		return buf->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,htmlEscape,return )

::String StringTools_obj::htmlUnescape(::String s){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_194_htmlUnescape)
HXDLIN( 194)		return s.split(HX_("&gt;",08,a9,6c,19))->join(HX_(">",3e,00,00,00)).split(HX_("&lt;",4d,74,70,19))->join(HX_("<",3c,00,00,00)).split(HX_("&quot;",2c,d9,81,8f))->join(HX_("\"",22,00,00,00)).split(HX_("&#039;",62,26,77,78))->join(HX_("'",27,00,00,00)).split(HX_("&amp;",dd,d4,aa,21))->join(HX_("&",26,00,00,00));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,htmlUnescape,return )

bool StringTools_obj::contains(::String s,::String value){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_215_contains)
HXDLIN( 215)		return (s.indexOf(value,null()) != -1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,contains,return )

bool StringTools_obj::startsWith(::String s,::String start){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_240_startsWith)
HXDLIN( 240)		if ((s.length >= start.length)) {
HXDLIN( 240)			return (s.lastIndexOf(start,0) == 0);
            		}
            		else {
HXDLIN( 240)			return false;
            		}
HXDLIN( 240)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,startsWith,return )

bool StringTools_obj::endsWith(::String s,::String end){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_251_endsWith)
HXLINE( 267)		int elen = end.length;
HXLINE( 268)		int slen = s.length;
HXLINE( 269)		if ((slen >= elen)) {
HXLINE( 269)			return (s.indexOf(end,(slen - elen)) == (slen - elen));
            		}
            		else {
HXLINE( 269)			return false;
            		}
HXDLIN( 269)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,endsWith,return )

bool StringTools_obj::isSpace(::String s,int pos){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_282_isSpace)
HXLINE( 287)		 ::Dynamic c = s.charCodeAt(pos);
HXLINE( 288)		bool _hx_tmp;
HXDLIN( 288)		if (::hx::IsGreater( c,8 )) {
HXLINE( 288)			_hx_tmp = ::hx::IsLess( c,14 );
            		}
            		else {
HXLINE( 288)			_hx_tmp = false;
            		}
HXDLIN( 288)		if (!(_hx_tmp)) {
HXLINE( 288)			return ::hx::IsEq( c,32 );
            		}
            		else {
HXLINE( 288)			return true;
            		}
HXDLIN( 288)		return false;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,isSpace,return )

::String StringTools_obj::ltrim(::String s){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_300_ltrim)
HXLINE( 304)		int l = s.length;
HXLINE( 305)		int r = 0;
HXLINE( 306)		while(true){
HXLINE( 306)			bool _hx_tmp;
HXDLIN( 306)			if ((r < l)) {
HXLINE( 306)				_hx_tmp = ::StringTools_obj::isSpace(s,r);
            			}
            			else {
HXLINE( 306)				_hx_tmp = false;
            			}
HXDLIN( 306)			if (!(_hx_tmp)) {
HXLINE( 306)				goto _hx_goto_14;
            			}
HXLINE( 307)			r = (r + 1);
            		}
            		_hx_goto_14:;
HXLINE( 309)		if ((r > 0)) {
HXLINE( 310)			return s.substr(r,(l - r));
            		}
            		else {
HXLINE( 312)			return s;
            		}
HXLINE( 309)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,ltrim,return )

::String StringTools_obj::rtrim(::String s){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_325_rtrim)
HXLINE( 329)		int l = s.length;
HXLINE( 330)		int r = 0;
HXLINE( 331)		while(true){
HXLINE( 331)			bool _hx_tmp;
HXDLIN( 331)			if ((r < l)) {
HXLINE( 331)				_hx_tmp = ::StringTools_obj::isSpace(s,((l - r) - 1));
            			}
            			else {
HXLINE( 331)				_hx_tmp = false;
            			}
HXDLIN( 331)			if (!(_hx_tmp)) {
HXLINE( 331)				goto _hx_goto_16;
            			}
HXLINE( 332)			r = (r + 1);
            		}
            		_hx_goto_16:;
HXLINE( 334)		if ((r > 0)) {
HXLINE( 335)			return s.substr(0,(l - r));
            		}
            		else {
HXLINE( 337)			return s;
            		}
HXLINE( 334)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,rtrim,return )

::String StringTools_obj::trim(::String s){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_353_trim)
HXDLIN( 353)		return ::StringTools_obj::ltrim(::StringTools_obj::rtrim(s));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,trim,return )

::String StringTools_obj::lpad(::String s,::String c,int l){
            	HX_GC_STACKFRAME(&_hx_pos_0b3aba623971508c_369_lpad)
HXLINE( 370)		if ((c.length <= 0)) {
HXLINE( 371)			return s;
            		}
HXLINE( 373)		 ::StringBuf buf =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 374)		l = (l - s.length);
HXLINE( 375)		while((buf->get_length() < l)){
HXLINE( 376)			if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 376)				buf->flush();
            			}
HXDLIN( 376)			if (::hx::IsNull( buf->b )) {
HXLINE( 376)				buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(c));
            			}
            			else {
HXLINE( 376)				::Array< ::String > buf1 = buf->b;
HXDLIN( 376)				buf1->push(::Std_obj::string(c));
            			}
            		}
HXLINE( 378)		{
HXLINE( 378)			if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 378)				buf->flush();
            			}
HXDLIN( 378)			if (::hx::IsNull( buf->b )) {
HXLINE( 378)				buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(s));
            			}
            			else {
HXLINE( 378)				::Array< ::String > buf2 = buf->b;
HXDLIN( 378)				buf2->push(::Std_obj::string(s));
            			}
            		}
HXLINE( 379)		return buf->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StringTools_obj,lpad,return )

::String StringTools_obj::rpad(::String s,::String c,int l){
            	HX_GC_STACKFRAME(&_hx_pos_0b3aba623971508c_394_rpad)
HXLINE( 395)		if ((c.length <= 0)) {
HXLINE( 396)			return s;
            		}
HXLINE( 398)		 ::StringBuf buf =  ::StringBuf_obj::__alloc( HX_CTX );
HXLINE( 399)		{
HXLINE( 399)			if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 399)				buf->flush();
            			}
HXDLIN( 399)			if (::hx::IsNull( buf->b )) {
HXLINE( 399)				buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(s));
            			}
            			else {
HXLINE( 399)				::Array< ::String > buf1 = buf->b;
HXDLIN( 399)				buf1->push(::Std_obj::string(s));
            			}
            		}
HXLINE( 400)		while((buf->get_length() < l)){
HXLINE( 401)			if (::hx::IsNotNull( buf->charBuf )) {
HXLINE( 401)				buf->flush();
            			}
HXDLIN( 401)			if (::hx::IsNull( buf->b )) {
HXLINE( 401)				buf->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(c));
            			}
            			else {
HXLINE( 401)				::Array< ::String > buf2 = buf->b;
HXDLIN( 401)				buf2->push(::Std_obj::string(c));
            			}
            		}
HXLINE( 403)		return buf->toString();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StringTools_obj,rpad,return )

::String StringTools_obj::replace(::String s,::String sub,::String by){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_428_replace)
HXDLIN( 428)		return s.split(sub)->join(by);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(StringTools_obj,replace,return )

::String StringTools_obj::hex(int n, ::Dynamic digits){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_438_hex)
HXLINE( 444)		::String s = HX_("",00,00,00,00);
HXLINE( 446)		do {
HXLINE( 447)			s = (HX_("0123456789ABCDEF",68,2a,58,a2).charAt((n & 15)) + s);
HXLINE( 448)			n = ::hx::UShr(n,4);
            		} while((n > 0));
;
HXLINE( 459)		if (::hx::IsNotNull( digits )) {
HXLINE( 460)			while(::hx::IsLess( s.length,digits )){
HXLINE( 461)				s = (HX_("0",30,00,00,00) + s);
            			}
            		}
HXLINE( 463)		return s;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,hex,return )

int StringTools_obj::fastCodeAt(::String s,int index){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_484_fastCodeAt)
HXDLIN( 484)		return s.cca(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,fastCodeAt,return )

int StringTools_obj::unsafeCodeAt(::String s,int index){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_523_unsafeCodeAt)
HXDLIN( 523)		return s.cca(index);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,unsafeCodeAt,return )

 ::haxe::iterators::StringIterator StringTools_obj::iterator(::String s){
            	HX_GC_STACKFRAME(&_hx_pos_0b3aba623971508c_555_iterator)
HXDLIN( 555)		return  ::haxe::iterators::StringIterator_obj::__alloc( HX_CTX ,s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,iterator,return )

 ::haxe::iterators::StringKeyValueIterator StringTools_obj::keyValueIterator(::String s){
            	HX_GC_STACKFRAME(&_hx_pos_0b3aba623971508c_566_keyValueIterator)
HXDLIN( 566)		return  ::haxe::iterators::StringKeyValueIterator_obj::__alloc( HX_CTX ,s);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,keyValueIterator,return )

bool StringTools_obj::isEof(int c){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_574_isEof)
HXDLIN( 574)		return (c == 0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,isEof,return )

::String StringTools_obj::quoteUnixArg(::String argument){
            	HX_GC_STACKFRAME(&_hx_pos_0b3aba623971508c_594_quoteUnixArg)
HXDLIN( 594)		if ((argument == HX_("",00,00,00,00))) {
HXDLIN( 594)			return HX_("''",20,22,00,00);
            		}
            		else {
HXDLIN( 594)			if (!( ::EReg_obj::__alloc( HX_CTX ,HX_("[^a-zA-Z0-9_@%+=:,./-]",80,28,a0,8d),HX_("",00,00,00,00))->match(argument))) {
HXDLIN( 594)				return argument;
            			}
            			else {
HXDLIN( 594)				return ((HX_("'",27,00,00,00) + ::StringTools_obj::replace(argument,HX_("'",27,00,00,00),HX_("'\"'\"'",71,96,37,8b))) + HX_("'",27,00,00,00));
            			}
            		}
HXDLIN( 594)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringTools_obj,quoteUnixArg,return )

::Array< int > StringTools_obj::winMetaCharacters;

::String StringTools_obj::quoteWinArg(::String argument,bool escapeMetaCharacters){
            	HX_GC_STACKFRAME(&_hx_pos_0b3aba623971508c_620_quoteWinArg)
HXDLIN( 620)		::String argument1 = argument;
HXDLIN( 620)		if (!( ::EReg_obj::__alloc( HX_CTX ,HX_("^(/)?[^ \t/\\\\\"]+$",3c,0f,01,c9),HX_("",00,00,00,00))->match(argument))) {
HXDLIN( 620)			 ::StringBuf result =  ::StringBuf_obj::__alloc( HX_CTX );
HXDLIN( 620)			bool needquote;
HXDLIN( 620)			bool needquote1;
HXDLIN( 620)			bool needquote2;
HXDLIN( 620)			if ((argument.indexOf(HX_(" ",20,00,00,00),null()) == -1)) {
HXDLIN( 620)				needquote2 = (argument.indexOf(HX_("\t",09,00,00,00),null()) != -1);
            			}
            			else {
HXDLIN( 620)				needquote2 = true;
            			}
HXDLIN( 620)			if (!(needquote2)) {
HXDLIN( 620)				needquote1 = (argument == HX_("",00,00,00,00));
            			}
            			else {
HXDLIN( 620)				needquote1 = true;
            			}
HXDLIN( 620)			if (!(needquote1)) {
HXDLIN( 620)				needquote = (argument.indexOf(HX_("/",2f,00,00,00),null()) > 0);
            			}
            			else {
HXDLIN( 620)				needquote = true;
            			}
HXDLIN( 620)			if (needquote) {
HXDLIN( 620)				if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)					result->flush();
            				}
HXDLIN( 620)				if (::hx::IsNull( result->b )) {
HXDLIN( 620)					result->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_37,1);
            				}
            				else {
HXDLIN( 620)					result->b->push(HX_("\"",22,00,00,00));
            				}
            			}
HXDLIN( 620)			 ::StringBuf bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
HXDLIN( 620)			{
HXDLIN( 620)				int _g = 0;
HXDLIN( 620)				int _g1 = argument.length;
HXDLIN( 620)				while((_g < _g1)){
HXDLIN( 620)					_g = (_g + 1);
HXDLIN( 620)					{
HXDLIN( 620)						 ::Dynamic _g2 = argument.charCodeAt((_g - 1));
HXDLIN( 620)						if (::hx::IsNull( _g2 )) {
HXDLIN( 620)							if ((bs_buf->get_length() > 0)) {
HXDLIN( 620)								{
HXDLIN( 620)									::String x = bs_buf->toString();
HXDLIN( 620)									if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)										result->flush();
            									}
HXDLIN( 620)									if (::hx::IsNull( result->b )) {
HXDLIN( 620)										result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x));
            									}
            									else {
HXDLIN( 620)										::Array< ::String > result1 = result->b;
HXDLIN( 620)										result1->push(::Std_obj::string(x));
            									}
            								}
HXDLIN( 620)								bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
            							}
HXDLIN( 620)							{
HXDLIN( 620)								int c = ( (int)(_g2) );
HXDLIN( 620)								if ((c >= 127)) {
HXDLIN( 620)									::String x1 = ::String::fromCharCode(c);
HXDLIN( 620)									if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)										result->flush();
            									}
HXDLIN( 620)									if (::hx::IsNull( result->b )) {
HXDLIN( 620)										result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x1));
            									}
            									else {
HXDLIN( 620)										::Array< ::String > result2 = result->b;
HXDLIN( 620)										result2->push(::Std_obj::string(x1));
            									}
            								}
            								else {
HXDLIN( 620)									if (::hx::IsNull( result->charBuf )) {
HXDLIN( 620)										result->charBuf = ::Array_obj< char >::__new();
            									}
HXDLIN( 620)									result->charBuf->push(c);
            								}
            							}
            						}
            						else {
HXDLIN( 620)							 ::Dynamic _hx_switch_0 = _g2;
            							if (  (_hx_switch_0==34) ){
HXDLIN( 620)								::String bs = bs_buf->toString();
HXDLIN( 620)								{
HXDLIN( 620)									if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)										result->flush();
            									}
HXDLIN( 620)									if (::hx::IsNull( result->b )) {
HXDLIN( 620)										result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(bs));
            									}
            									else {
HXDLIN( 620)										::Array< ::String > result3 = result->b;
HXDLIN( 620)										result3->push(::Std_obj::string(bs));
            									}
            								}
HXDLIN( 620)								{
HXDLIN( 620)									if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)										result->flush();
            									}
HXDLIN( 620)									if (::hx::IsNull( result->b )) {
HXDLIN( 620)										result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(bs));
            									}
            									else {
HXDLIN( 620)										::Array< ::String > result4 = result->b;
HXDLIN( 620)										result4->push(::Std_obj::string(bs));
            									}
            								}
HXDLIN( 620)								bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
HXDLIN( 620)								{
HXDLIN( 620)									if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)										result->flush();
            									}
HXDLIN( 620)									if (::hx::IsNull( result->b )) {
HXDLIN( 620)										result->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_38,1);
            									}
            									else {
HXDLIN( 620)										result->b->push(HX_("\\\"",46,50,00,00));
            									}
            								}
HXDLIN( 620)								goto _hx_goto_34;
            							}
            							if (  (_hx_switch_0==92) ){
HXDLIN( 620)								if (::hx::IsNotNull( bs_buf->charBuf )) {
HXDLIN( 620)									bs_buf->flush();
            								}
HXDLIN( 620)								if (::hx::IsNull( bs_buf->b )) {
HXDLIN( 620)									bs_buf->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_39,1);
            								}
            								else {
HXDLIN( 620)									bs_buf->b->push(HX_("\\",5c,00,00,00));
            								}
HXDLIN( 620)								goto _hx_goto_34;
            							}
            							/* default */{
HXDLIN( 620)								if ((bs_buf->get_length() > 0)) {
HXDLIN( 620)									{
HXDLIN( 620)										::String x2 = bs_buf->toString();
HXDLIN( 620)										if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)											result->flush();
            										}
HXDLIN( 620)										if (::hx::IsNull( result->b )) {
HXDLIN( 620)											result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x2));
            										}
            										else {
HXDLIN( 620)											::Array< ::String > result5 = result->b;
HXDLIN( 620)											result5->push(::Std_obj::string(x2));
            										}
            									}
HXDLIN( 620)									bs_buf =  ::StringBuf_obj::__alloc( HX_CTX );
            								}
HXDLIN( 620)								{
HXDLIN( 620)									int c1 = ( (int)(_g2) );
HXDLIN( 620)									if ((c1 >= 127)) {
HXDLIN( 620)										::String x3 = ::String::fromCharCode(c1);
HXDLIN( 620)										if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)											result->flush();
            										}
HXDLIN( 620)										if (::hx::IsNull( result->b )) {
HXDLIN( 620)											result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x3));
            										}
            										else {
HXDLIN( 620)											::Array< ::String > result6 = result->b;
HXDLIN( 620)											result6->push(::Std_obj::string(x3));
            										}
            									}
            									else {
HXDLIN( 620)										if (::hx::IsNull( result->charBuf )) {
HXDLIN( 620)											result->charBuf = ::Array_obj< char >::__new();
            										}
HXDLIN( 620)										result->charBuf->push(c1);
            									}
            								}
            							}
            							_hx_goto_34:;
            						}
            					}
            				}
            			}
HXDLIN( 620)			{
HXDLIN( 620)				::String x4 = bs_buf->toString();
HXDLIN( 620)				if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)					result->flush();
            				}
HXDLIN( 620)				if (::hx::IsNull( result->b )) {
HXDLIN( 620)					result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x4));
            				}
            				else {
HXDLIN( 620)					::Array< ::String > result7 = result->b;
HXDLIN( 620)					result7->push(::Std_obj::string(x4));
            				}
            			}
HXDLIN( 620)			if (needquote) {
HXDLIN( 620)				{
HXDLIN( 620)					::String x5 = bs_buf->toString();
HXDLIN( 620)					if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)						result->flush();
            					}
HXDLIN( 620)					if (::hx::IsNull( result->b )) {
HXDLIN( 620)						result->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x5));
            					}
            					else {
HXDLIN( 620)						::Array< ::String > result8 = result->b;
HXDLIN( 620)						result8->push(::Std_obj::string(x5));
            					}
            				}
HXDLIN( 620)				{
HXDLIN( 620)					if (::hx::IsNotNull( result->charBuf )) {
HXDLIN( 620)						result->flush();
            					}
HXDLIN( 620)					if (::hx::IsNull( result->b )) {
HXDLIN( 620)						result->b = ::Array_obj< ::String >::fromData( _hx_array_data_0363db6a_40,1);
            					}
            					else {
HXDLIN( 620)						result->b->push(HX_("\"",22,00,00,00));
            					}
            				}
            			}
HXDLIN( 620)			argument1 = result->toString();
            		}
HXDLIN( 620)		if (escapeMetaCharacters) {
HXDLIN( 620)			 ::StringBuf result9 =  ::StringBuf_obj::__alloc( HX_CTX );
HXDLIN( 620)			{
HXDLIN( 620)				int _g3 = 0;
HXDLIN( 620)				int _g4 = argument1.length;
HXDLIN( 620)				while((_g3 < _g4)){
HXDLIN( 620)					_g3 = (_g3 + 1);
HXDLIN( 620)					 ::Dynamic c2 = argument1.charCodeAt((_g3 - 1));
HXDLIN( 620)					if ((::haxe::SysTools_obj::winMetaCharacters->indexOf(c2,null()) >= 0)) {
HXDLIN( 620)						if (::hx::IsNull( result9->charBuf )) {
HXDLIN( 620)							result9->charBuf = ::Array_obj< char >::__new();
            						}
HXDLIN( 620)						result9->charBuf->push(94);
            					}
HXDLIN( 620)					{
HXDLIN( 620)						int c3 = ( (int)(c2) );
HXDLIN( 620)						if ((c3 >= 127)) {
HXDLIN( 620)							::String x6 = ::String::fromCharCode(c3);
HXDLIN( 620)							if (::hx::IsNotNull( result9->charBuf )) {
HXDLIN( 620)								result9->flush();
            							}
HXDLIN( 620)							if (::hx::IsNull( result9->b )) {
HXDLIN( 620)								result9->b = ::Array_obj< ::String >::__new(1)->init(0,::Std_obj::string(x6));
            							}
            							else {
HXDLIN( 620)								::Array< ::String > result10 = result9->b;
HXDLIN( 620)								result10->push(::Std_obj::string(x6));
            							}
            						}
            						else {
HXDLIN( 620)							if (::hx::IsNull( result9->charBuf )) {
HXDLIN( 620)								result9->charBuf = ::Array_obj< char >::__new();
            							}
HXDLIN( 620)							result9->charBuf->push(c3);
            						}
            					}
            				}
            			}
HXDLIN( 620)			return result9->toString();
            		}
            		else {
HXDLIN( 620)			return argument1;
            		}
HXDLIN( 620)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,quoteWinArg,return )

int StringTools_obj::MIN_SURROGATE_CODE_POINT;

int StringTools_obj::utf16CodePointAt(::String s,int index){
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_636_utf16CodePointAt)
HXLINE( 637)		int c = s.cca(index);
HXLINE( 638)		bool _hx_tmp;
HXDLIN( 638)		if ((c >= 55296)) {
HXLINE( 638)			_hx_tmp = (c <= 56319);
            		}
            		else {
HXLINE( 638)			_hx_tmp = false;
            		}
HXDLIN( 638)		if (_hx_tmp) {
HXLINE( 639)			c = (((c - 55232) << 10) | (s.cca((index + 1)) & 1023));
            		}
HXLINE( 641)		return c;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(StringTools_obj,utf16CodePointAt,return )


StringTools_obj::StringTools_obj()
{
}

bool StringTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"hex") ) { outValue = hex_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"trim") ) { outValue = trim_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"lpad") ) { outValue = lpad_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rpad") ) { outValue = rpad_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"ltrim") ) { outValue = ltrim_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"rtrim") ) { outValue = rtrim_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"isEof") ) { outValue = isEof_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"isSpace") ) { outValue = isSpace_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"replace") ) { outValue = replace_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"contains") ) { outValue = contains_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"endsWith") ) { outValue = endsWith_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"iterator") ) { outValue = iterator_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"urlEncode") ) { outValue = urlEncode_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"urlDecode") ) { outValue = urlDecode_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"htmlEscape") ) { outValue = htmlEscape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"startsWith") ) { outValue = startsWith_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"fastCodeAt") ) { outValue = fastCodeAt_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"quoteWinArg") ) { outValue = quoteWinArg_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"htmlUnescape") ) { outValue = htmlUnescape_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"unsafeCodeAt") ) { outValue = unsafeCodeAt_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"quoteUnixArg") ) { outValue = quoteUnixArg_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"keyValueIterator") ) { outValue = keyValueIterator_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"utf16CodePointAt") ) { outValue = utf16CodePointAt_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"winMetaCharacters") ) { outValue = ( winMetaCharacters ); return true; }
	}
	return false;
}

bool StringTools_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 17:
		if (HX_FIELD_EQ(inName,"winMetaCharacters") ) { winMetaCharacters=ioValue.Cast< ::Array< int > >(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *StringTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo StringTools_obj_sStaticStorageInfo[] = {
	{::hx::fsObject /* ::Array< int > */ ,(void *) &StringTools_obj::winMetaCharacters,HX_("winMetaCharacters",0b,65,cd,94)},
	{::hx::fsInt,(void *) &StringTools_obj::MIN_SURROGATE_CODE_POINT,HX_("MIN_SURROGATE_CODE_POINT",f2,39,5a,0a)},
	{ ::hx::fsUnknown, 0, null()}
};
#endif

static void StringTools_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StringTools_obj::winMetaCharacters,"winMetaCharacters");
	HX_MARK_MEMBER_NAME(StringTools_obj::MIN_SURROGATE_CODE_POINT,"MIN_SURROGATE_CODE_POINT");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StringTools_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StringTools_obj::winMetaCharacters,"winMetaCharacters");
	HX_VISIT_MEMBER_NAME(StringTools_obj::MIN_SURROGATE_CODE_POINT,"MIN_SURROGATE_CODE_POINT");
};

#endif

::hx::Class StringTools_obj::__mClass;

static ::String StringTools_obj_sStaticFields[] = {
	HX_("urlEncode",e5,4e,52,9a),
	HX_("urlDecode",fd,b9,5b,05),
	HX_("htmlEscape",4c,af,9b,a8),
	HX_("htmlUnescape",25,a7,ed,ae),
	HX_("contains",1f,5a,7b,2c),
	HX_("startsWith",77,c0,cf,f9),
	HX_("endsWith",5e,7a,b6,db),
	HX_("isSpace",7c,30,ec,1d),
	HX_("ltrim",4e,43,4a,7c),
	HX_("rtrim",54,be,b1,f0),
	HX_("trim",e2,9c,03,4d),
	HX_("lpad",67,5c,b8,47),
	HX_("rpad",21,a4,af,4b),
	HX_("replace",34,48,28,ab),
	HX_("hex",db,42,4f,00),
	HX_("fastCodeAt",3c,63,51,0a),
	HX_("unsafeCodeAt",46,e8,d6,e2),
	HX_("iterator",ee,49,9a,93),
	HX_("keyValueIterator",60,cd,ee,4a),
	HX_("isEof",f2,2e,4b,c1),
	HX_("quoteUnixArg",d2,54,33,00),
	HX_("winMetaCharacters",0b,65,cd,94),
	HX_("quoteWinArg",f6,b3,bc,14),
	HX_("MIN_SURROGATE_CODE_POINT",f2,39,5a,0a),
	HX_("utf16CodePointAt",4a,6b,76,84),
	::String(null())
};

void StringTools_obj::__register()
{
	StringTools_obj _hx_dummy;
	StringTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("StringTools",6a,db,63,03);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StringTools_obj::__GetStatic;
	__mClass->mSetStaticField = &StringTools_obj::__SetStatic;
	__mClass->mMarkFunc = StringTools_obj_sMarkStatics;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(StringTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< StringTools_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StringTools_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StringTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StringTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void StringTools_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_602_boot)
HXDLIN( 602)		winMetaCharacters = ::haxe::SysTools_obj::winMetaCharacters;
            	}
{
            	HX_STACKFRAME(&_hx_pos_0b3aba623971508c_634_boot)
HXDLIN( 634)		MIN_SURROGATE_CODE_POINT = 65536;
            	}
}

