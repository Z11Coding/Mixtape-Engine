// Generated by Haxe 4.3.5
#include <hxcpp.h>

#ifndef INCLUDED_cpp_Int64Map
#include <cpp/Int64Map.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_iterators_ArrayIterator
#include <haxe/iterators/ArrayIterator.h>
#endif
#ifndef INCLUDED_haxe_iterators_MapKeyValueIterator
#include <haxe/iterators/MapKeyValueIterator.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_07aee08f86a2823c_62_new,"cpp.Int64Map","new",0x2e62216c,"cpp.Int64Map.new","/usr/share/haxe/std/cpp/Int64Map.hx",62,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_65_set,"cpp.Int64Map","set",0x2e65ecae,"cpp.Int64Map.set","/usr/share/haxe/std/cpp/Int64Map.hx",65,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_69_get,"cpp.Int64Map","get",0x2e5cd1a2,"cpp.Int64Map.get","/usr/share/haxe/std/cpp/Int64Map.hx",69,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_73_exists,"cpp.Int64Map","exists",0xe0c8fc50,"cpp.Int64Map.exists","/usr/share/haxe/std/cpp/Int64Map.hx",73,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_77_remove,"cpp.Int64Map","remove",0x25717ab8,"cpp.Int64Map.remove","/usr/share/haxe/std/cpp/Int64Map.hx",77,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_80_keys,"cpp.Int64Map","keys",0x657f7b68,"cpp.Int64Map.keys","/usr/share/haxe/std/cpp/Int64Map.hx",80,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_85_iterator,"cpp.Int64Map","iterator",0x674ead62,"cpp.Int64Map.iterator","/usr/share/haxe/std/cpp/Int64Map.hx",85,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_91_keyValueIterator,"cpp.Int64Map","keyValueIterator",0xe3a1c4d4,"cpp.Int64Map.keyValueIterator","/usr/share/haxe/std/cpp/Int64Map.hx",91,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_94_copy,"cpp.Int64Map","copy",0x603d5529,"cpp.Int64Map.copy","/usr/share/haxe/std/cpp/Int64Map.hx",94,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_102_toString,"cpp.Int64Map","toString",0x0c233420,"cpp.Int64Map.toString","/usr/share/haxe/std/cpp/Int64Map.hx",102,0xc8a02dc8)
HX_LOCAL_STACK_FRAME(_hx_pos_07aee08f86a2823c_107_clear,"cpp.Int64Map","clear",0xd3691d99,"cpp.Int64Map.clear","/usr/share/haxe/std/cpp/Int64Map.hx",107,0xc8a02dc8)
namespace cpp{

void Int64Map_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_07aee08f86a2823c_62_new)
            	}

Dynamic Int64Map_obj::__CreateEmpty() { return new Int64Map_obj; }

void *Int64Map_obj::_hx_vtable = 0;

Dynamic Int64Map_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< Int64Map_obj > _hx_result = new Int64Map_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Int64Map_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1f960db2;
}

static ::haxe::IMap_obj _hx_cpp_Int64Map__hx_haxe_IMap= {
	(  ::Dynamic (::hx::Object::*)( ::Dynamic))&::cpp::Int64Map_obj::get_a7a2487a,
	( void (::hx::Object::*)( ::Dynamic, ::Dynamic))&::cpp::Int64Map_obj::set_dca24b06,
	( bool (::hx::Object::*)( ::Dynamic))&::cpp::Int64Map_obj::exists_64bfc92f,
	( bool (::hx::Object::*)( ::Dynamic))&::cpp::Int64Map_obj::remove_64bfc92f,
	(  ::Dynamic (::hx::Object::*)())&::cpp::Int64Map_obj::keys,
	(  ::Dynamic (::hx::Object::*)())&::cpp::Int64Map_obj::iterator,
	(  ::Dynamic (::hx::Object::*)())&::cpp::Int64Map_obj::keyValueIterator,
	( ::Dynamic (::hx::Object::*)())&::cpp::Int64Map_obj::copy_ee952b4b,
	( ::String (::hx::Object::*)())&::cpp::Int64Map_obj::toString,
	( void (::hx::Object::*)())&::cpp::Int64Map_obj::clear,
};

::Dynamic Int64Map_obj::copy_ee952b4b() {
			return copy();
}

bool Int64Map_obj::remove_64bfc92f( ::Dynamic k) {
			return remove(k);
}

bool Int64Map_obj::exists_64bfc92f( ::Dynamic k) {
			return exists(k);
}

void Int64Map_obj::set_dca24b06( ::Dynamic k, ::Dynamic v) {
			set(k,v);
}

 ::Dynamic Int64Map_obj::get_a7a2487a( ::Dynamic k) {
			return get(k);
}
void *Int64Map_obj::_hx_getInterface(int inHash) {
	switch(inHash) {
		case (int)0x09c2bd39: return &_hx_cpp_Int64Map__hx_haxe_IMap;
	}
	#ifdef HXCPP_SCRIPTABLE
	return super::_hx_getInterface(inHash);
	#else
	return 0;
	#endif
}

void Int64Map_obj::set(::cpp::Int64 key, ::Dynamic value){
            	HX_STACKFRAME(&_hx_pos_07aee08f86a2823c_65_set)
HXDLIN(  65)		 ::__int64_hash_set(HX_MAP_THIS,key,value);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Int64Map_obj,set,(void))

 ::Dynamic Int64Map_obj::get(::cpp::Int64 key){
            	HX_STACKFRAME(&_hx_pos_07aee08f86a2823c_69_get)
HXDLIN(  69)		return  ::__int64_hash_get(this->h,key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Int64Map_obj,get,return )

bool Int64Map_obj::exists(::cpp::Int64 key){
            	HX_STACKFRAME(&_hx_pos_07aee08f86a2823c_73_exists)
HXDLIN(  73)		return  ::__int64_hash_exists(this->h,key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Int64Map_obj,exists,return )

bool Int64Map_obj::remove(::cpp::Int64 key){
            	HX_STACKFRAME(&_hx_pos_07aee08f86a2823c_77_remove)
HXDLIN(  77)		return  ::__int64_hash_remove(this->h,key);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Int64Map_obj,remove,return )

 ::Dynamic Int64Map_obj::keys(){
            	HX_GC_STACKFRAME(&_hx_pos_07aee08f86a2823c_80_keys)
HXLINE(  81)		::Array< ::cpp::Int64 > a =  ::__int64_hash_keys(this->h);
HXLINE(  82)		return  ::haxe::iterators::ArrayIterator_obj::__alloc( HX_CTX ,a);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Int64Map_obj,keys,return )

 ::Dynamic Int64Map_obj::iterator(){
            	HX_GC_STACKFRAME(&_hx_pos_07aee08f86a2823c_85_iterator)
HXLINE(  86)		::cpp::VirtualArray a =  ::__int64_hash_values(this->h);
HXLINE(  87)		return  ::haxe::iterators::ArrayIterator_obj::__alloc( HX_CTX ,a);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Int64Map_obj,iterator,return )

 ::Dynamic Int64Map_obj::keyValueIterator(){
            	HX_GC_STACKFRAME(&_hx_pos_07aee08f86a2823c_91_keyValueIterator)
HXDLIN(  91)		return  ::haxe::iterators::MapKeyValueIterator_obj::__alloc( HX_CTX ,::hx::ObjectPtr<OBJ_>(this));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Int64Map_obj,keyValueIterator,return )

 ::cpp::Int64Map Int64Map_obj::copy(){
            	HX_GC_STACKFRAME(&_hx_pos_07aee08f86a2823c_94_copy)
HXLINE(  95)		 ::cpp::Int64Map copied =  ::cpp::Int64Map_obj::__alloc( HX_CTX );
HXLINE(  96)		{
HXLINE(  96)			 ::Dynamic key = this->keys();
HXDLIN(  96)			while(( (bool)(key->__Field(HX_("hasNext",6d,a5,46,18),::hx::paccDynamic)()) )){
HXLINE(  96)				::cpp::Int64 key1 = ( (::cpp::Int64)(key->__Field(HX_("next",f3,84,02,49),::hx::paccDynamic)()) );
HXLINE(  97)				copied->set(key1,this->get(key1));
            			}
            		}
HXLINE(  98)		return copied;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Int64Map_obj,copy,return )

::String Int64Map_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_07aee08f86a2823c_102_toString)
HXDLIN( 102)		return  ::__int64_hash_to_string(this->h);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Int64Map_obj,toString,return )

void Int64Map_obj::clear(){
            	HX_STACKFRAME(&_hx_pos_07aee08f86a2823c_107_clear)
HXDLIN( 107)		 ::__int64_hash_clear(this->h);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Int64Map_obj,clear,(void))


::hx::ObjectPtr< Int64Map_obj > Int64Map_obj::__new() {
	::hx::ObjectPtr< Int64Map_obj > __this = new Int64Map_obj();
	__this->__construct();
	return __this;
}

::hx::ObjectPtr< Int64Map_obj > Int64Map_obj::__alloc(::hx::Ctx *_hx_ctx) {
	Int64Map_obj *__this = (Int64Map_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Int64Map_obj), true, "cpp.Int64Map"));
	*(void **)__this = Int64Map_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Int64Map_obj::Int64Map_obj()
{
}

void Int64Map_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Int64Map);
	HX_MARK_MEMBER_NAME(h,"h");
	HX_MARK_END_CLASS();
}

void Int64Map_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(h,"h");
}

::hx::Val Int64Map_obj::__Field(const ::String &inName,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"h") ) { return ::hx::Val( h ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return ::hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"get") ) { return ::hx::Val( get_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"keys") ) { return ::hx::Val( keys_dyn() ); }
		if (HX_FIELD_EQ(inName,"copy") ) { return ::hx::Val( copy_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"clear") ) { return ::hx::Val( clear_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"exists") ) { return ::hx::Val( exists_dyn() ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return ::hx::Val( remove_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"iterator") ) { return ::hx::Val( iterator_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return ::hx::Val( toString_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"keyValueIterator") ) { return ::hx::Val( keyValueIterator_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

::hx::Val Int64Map_obj::__SetField(const ::String &inName,const ::hx::Val &inValue,::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"h") ) { h=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Int64Map_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_("h",68,00,00,00));
	super::__GetFields(outFields);
};

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo Int64Map_obj_sMemberStorageInfo[] = {
	{::hx::fsObject /*  ::Dynamic */ ,(int)offsetof(Int64Map_obj,h),HX_("h",68,00,00,00)},
	{ ::hx::fsUnknown, 0, null()}
};
static ::hx::StaticInfo *Int64Map_obj_sStaticStorageInfo = 0;
#endif

static ::String Int64Map_obj_sMemberFields[] = {
	HX_("h",68,00,00,00),
	HX_("set",a2,9b,57,00),
	HX_("get",96,80,4e,00),
	HX_("exists",dc,1d,e0,bf),
	HX_("remove",44,9c,88,04),
	HX_("keys",f4,e1,06,47),
	HX_("iterator",ee,49,9a,93),
	HX_("keyValueIterator",60,cd,ee,4a),
	HX_("copy",b5,bb,c4,41),
	HX_("toString",ac,d0,6e,38),
	HX_("clear",8d,71,5b,48),
	::String(null()) };

::hx::Class Int64Map_obj::__mClass;

void Int64Map_obj::__register()
{
	Int64Map_obj _hx_dummy;
	Int64Map_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("cpp.Int64Map",7a,3b,8a,9f);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(Int64Map_obj_sMemberFields);
	__mClass->mCanCast = ::hx::TCanCast< Int64Map_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Int64Map_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Int64Map_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace cpp
