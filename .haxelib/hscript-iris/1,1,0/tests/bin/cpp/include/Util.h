// Generated by Haxe 4.3.5
#ifndef INCLUDED_Util
#define INCLUDED_Util

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Util)



class HXCPP_CLASS_ATTRIBUTES Util_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef Util_obj OBJ_;
		Util_obj();

	public:
		enum { _hx_ClassId = 0x0cda7a46 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="Util")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"Util"); }

		inline static ::hx::ObjectPtr< Util_obj > __new() {
			::hx::ObjectPtr< Util_obj > __this = new Util_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< Util_obj > __alloc(::hx::Ctx *_hx_ctx) {
			Util_obj *__this = (Util_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(Util_obj), false, "Util"));
			*(void **)__this = Util_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~Util_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("Util",22,84,87,38); }

		static Float getTime();
		static ::Dynamic getTime_dyn();

		static ::String repeatString(::String str,int times);
		static ::Dynamic repeatString_dyn();

		static ::String exScienceN(Float value);
		static ::Dynamic exScienceN_dyn();

		static ::String convertToReadableTime(Float seconds);
		static ::Dynamic convertToReadableTime_dyn();

		static Float roundDecimal(Float Value,int Precision);
		static ::Dynamic roundDecimal_dyn();

		static Float roundWith(Float Value,int Mult);
		static ::Dynamic roundWith_dyn();

		static bool isJson(::String s);
		static ::Dynamic isJson_dyn();

		static bool isPrintable(int c);
		static ::Dynamic isPrintable_dyn();

		static ::String hexLower(int n,::hx::Null< int >  digits);
		static ::Dynamic hexLower_dyn();

		static ::String getEscapedString(::String s);
		static ::Dynamic getEscapedString_dyn();

};


#endif /* INCLUDED_Util */ 
