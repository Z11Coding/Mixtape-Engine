// Generated by Haxe 4.3.5
#ifndef INCLUDED_haxe_iterators_StringKeyValueIteratorUnicode
#define INCLUDED_haxe_iterators_StringKeyValueIteratorUnicode

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_3d248234ecafa60c_35_new)
HX_DECLARE_CLASS2(haxe,iterators,StringKeyValueIteratorUnicode)

namespace haxe{
namespace iterators{


class HXCPP_CLASS_ATTRIBUTES StringKeyValueIteratorUnicode_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef StringKeyValueIteratorUnicode_obj OBJ_;
		StringKeyValueIteratorUnicode_obj();

	public:
		enum { _hx_ClassId = 0x389047ed };

		void __construct(::String s);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="haxe.iterators.StringKeyValueIteratorUnicode")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"haxe.iterators.StringKeyValueIteratorUnicode"); }

		inline static ::hx::ObjectPtr< StringKeyValueIteratorUnicode_obj > __new(::String s) {
			::hx::ObjectPtr< StringKeyValueIteratorUnicode_obj > __this = new StringKeyValueIteratorUnicode_obj();
			__this->__construct(s);
			return __this;
		}

		inline static ::hx::ObjectPtr< StringKeyValueIteratorUnicode_obj > __alloc(::hx::Ctx *_hx_ctx,::String s) {
			StringKeyValueIteratorUnicode_obj *__this = (StringKeyValueIteratorUnicode_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(StringKeyValueIteratorUnicode_obj), true, "haxe.iterators.StringKeyValueIteratorUnicode"));
			*(void **)__this = StringKeyValueIteratorUnicode_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_3d248234ecafa60c_35_new)
HXLINE(  37)		( ( ::haxe::iterators::StringKeyValueIteratorUnicode)(__this) )->charOffset = 0;
HXLINE(  36)		( ( ::haxe::iterators::StringKeyValueIteratorUnicode)(__this) )->byteOffset = 0;
HXLINE(  44)		( ( ::haxe::iterators::StringKeyValueIteratorUnicode)(__this) )->s = s;
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~StringKeyValueIteratorUnicode_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("StringKeyValueIteratorUnicode",ac,20,1e,92); }

		static  ::haxe::iterators::StringKeyValueIteratorUnicode unicodeKeyValueIterator(::String s);
		static ::Dynamic unicodeKeyValueIterator_dyn();

		int byteOffset;
		int charOffset;
		::String s;
		bool hasNext();
		::Dynamic hasNext_dyn();

		 ::Dynamic next();
		::Dynamic next_dyn();

};

} // end namespace haxe
} // end namespace iterators

#endif /* INCLUDED_haxe_iterators_StringKeyValueIteratorUnicode */ 
