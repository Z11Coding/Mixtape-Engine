// Generated by Haxe 4.3.5
#ifndef INCLUDED_crowplexus_iris_InitRules
#define INCLUDED_crowplexus_iris_InitRules

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_d062918eaf44742a_10_new)
HX_DECLARE_CLASS2(crowplexus,iris,InitRules)

namespace crowplexus{
namespace iris{


class HXCPP_CLASS_ATTRIBUTES InitRules_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef InitRules_obj OBJ_;
		InitRules_obj();

	public:
		enum { _hx_ClassId = 0x39d08e50 };

		void __construct(::String name, ::Dynamic autoRun, ::Dynamic preset);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="crowplexus.iris.InitRules")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,true,"crowplexus.iris.InitRules"); }

		inline static ::hx::ObjectPtr< InitRules_obj > __new(::String name, ::Dynamic autoRun, ::Dynamic preset) {
			::hx::ObjectPtr< InitRules_obj > __this = new InitRules_obj();
			__this->__construct(name,autoRun,preset);
			return __this;
		}

		inline static ::hx::ObjectPtr< InitRules_obj > __alloc(::hx::Ctx *_hx_ctx,::String name, ::Dynamic autoRun, ::Dynamic preset) {
			InitRules_obj *__this = (InitRules_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(InitRules_obj), true, "crowplexus.iris.InitRules"));
			*(void **)__this = InitRules_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_d062918eaf44742a_10_new)
HXLINE(  13)		( ( ::crowplexus::iris::InitRules)(__this) )->preset = true;
HXLINE(  12)		( ( ::crowplexus::iris::InitRules)(__this) )->autoRun = true;
HXLINE(  11)		( ( ::crowplexus::iris::InitRules)(__this) )->name = HX_("",00,00,00,00);
HXLINE(  10)		if (::hx::IsNotNull( name )) {
HXDLIN(  10)			( ( ::crowplexus::iris::InitRules)(__this) )->name = name;
            		}
HXDLIN(  10)		if (::hx::IsNotNull( autoRun )) {
HXDLIN(  10)			( ( ::crowplexus::iris::InitRules)(__this) )->autoRun = ( (bool)(autoRun) );
            		}
HXDLIN(  10)		if (::hx::IsNotNull( preset )) {
HXDLIN(  10)			( ( ::crowplexus::iris::InitRules)(__this) )->preset = ( (bool)(preset) );
            		}
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~InitRules_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		::hx::Val __SetField(const ::String &inString,const ::hx::Val &inValue, ::hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("InitRules",a7,5e,bb,ae); }

		::String name;
		bool autoRun;
		bool preset;
};

} // end namespace crowplexus
} // end namespace iris

#endif /* INCLUDED_crowplexus_iris_InitRules */ 
